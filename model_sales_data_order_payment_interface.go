/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataOrderPaymentInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataOrderPaymentInterface{}

// SalesDataOrderPaymentInterface Order payment interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
type SalesDataOrderPaymentInterface struct {
	// Account status.
	AccountStatus string `json:"account_status"`
	// Additional data.
	AdditionalData *string `json:"additional_data,omitempty"`
	// Array of additional information.
	AdditionalInformation []string `json:"additional_information"`
	// Address status.
	AddressStatus *string `json:"address_status,omitempty"`
	// Amount authorized.
	AmountAuthorized *float32 `json:"amount_authorized,omitempty"`
	// Amount canceled.
	AmountCanceled *float32 `json:"amount_canceled,omitempty"`
	// Amount ordered.
	AmountOrdered *float32 `json:"amount_ordered,omitempty"`
	// Amount paid.
	AmountPaid *float32 `json:"amount_paid,omitempty"`
	// Amount refunded.
	AmountRefunded *float32 `json:"amount_refunded,omitempty"`
	// Anet transaction method.
	AnetTransMethod *string `json:"anet_trans_method,omitempty"`
	// Base amount authorized.
	BaseAmountAuthorized *float32 `json:"base_amount_authorized,omitempty"`
	// Base amount canceled.
	BaseAmountCanceled *float32 `json:"base_amount_canceled,omitempty"`
	// Base amount ordered.
	BaseAmountOrdered *float32 `json:"base_amount_ordered,omitempty"`
	// Base amount paid.
	BaseAmountPaid *float32 `json:"base_amount_paid,omitempty"`
	// Base amount paid online.
	BaseAmountPaidOnline *float32 `json:"base_amount_paid_online,omitempty"`
	// Base amount refunded.
	BaseAmountRefunded *float32 `json:"base_amount_refunded,omitempty"`
	// Base amount refunded online.
	BaseAmountRefundedOnline *float32 `json:"base_amount_refunded_online,omitempty"`
	// Base shipping amount.
	BaseShippingAmount *float32 `json:"base_shipping_amount,omitempty"`
	// Base shipping captured amount.
	BaseShippingCaptured *float32 `json:"base_shipping_captured,omitempty"`
	// Base shipping refunded amount.
	BaseShippingRefunded *float32 `json:"base_shipping_refunded,omitempty"`
	// Credit card approval.
	CcApproval *string `json:"cc_approval,omitempty"`
	// Credit card avs status.
	CcAvsStatus *string `json:"cc_avs_status,omitempty"`
	// Credit card CID status.
	CcCidStatus *string `json:"cc_cid_status,omitempty"`
	// Credit card debug request body.
	CcDebugRequestBody *string `json:"cc_debug_request_body,omitempty"`
	// Credit card debug response body.
	CcDebugResponseBody *string `json:"cc_debug_response_body,omitempty"`
	// Credit card debug response serialized.
	CcDebugResponseSerialized *string `json:"cc_debug_response_serialized,omitempty"`
	// Credit card expiration month.
	CcExpMonth *string `json:"cc_exp_month,omitempty"`
	// Credit card expiration year.
	CcExpYear *string `json:"cc_exp_year,omitempty"`
	// Last four digits of the credit card.
	CcLast4 string `json:"cc_last4"`
	// Encrypted credit card number.
	CcNumberEnc *string `json:"cc_number_enc,omitempty"`
	// Credit card number.
	CcOwner *string `json:"cc_owner,omitempty"`
	// Credit card secure verify.
	CcSecureVerify *string `json:"cc_secure_verify,omitempty"`
	// Credit card SS issue.
	CcSsIssue *string `json:"cc_ss_issue,omitempty"`
	// Credit card SS start month.
	CcSsStartMonth *string `json:"cc_ss_start_month,omitempty"`
	// Credit card SS start year.
	CcSsStartYear *string `json:"cc_ss_start_year,omitempty"`
	// Credit card status.
	CcStatus *string `json:"cc_status,omitempty"`
	// Credit card status description.
	CcStatusDescription *string `json:"cc_status_description,omitempty"`
	// Credit card transaction ID.
	CcTransId *string `json:"cc_trans_id,omitempty"`
	// Credit card type.
	CcType *string `json:"cc_type,omitempty"`
	// eCheck account name.
	EcheckAccountName *string `json:"echeck_account_name,omitempty"`
	// eCheck account type.
	EcheckAccountType *string `json:"echeck_account_type,omitempty"`
	// eCheck bank name.
	EcheckBankName *string `json:"echeck_bank_name,omitempty"`
	// eCheck routing number.
	EcheckRoutingNumber *string `json:"echeck_routing_number,omitempty"`
	// eCheck type.
	EcheckType *string `json:"echeck_type,omitempty"`
	// Entity ID.
	EntityId *int32 `json:"entity_id,omitempty"`
	// Last transaction ID.
	LastTransId *string `json:"last_trans_id,omitempty"`
	// Method.
	Method string `json:"method"`
	// Parent ID.
	ParentId *int32 `json:"parent_id,omitempty"`
	// PO number.
	PoNumber *string `json:"po_number,omitempty"`
	// Protection eligibility.
	ProtectionEligibility *string `json:"protection_eligibility,omitempty"`
	// Quote payment ID.
	QuotePaymentId *int32 `json:"quote_payment_id,omitempty"`
	// Shipping amount.
	ShippingAmount *float32 `json:"shipping_amount,omitempty"`
	// Shipping captured.
	ShippingCaptured *float32 `json:"shipping_captured,omitempty"`
	// Shipping refunded.
	ShippingRefunded     *float32                                 `json:"shipping_refunded,omitempty"`
	ExtensionAttributes  *SalesDataOrderPaymentExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataOrderPaymentInterface SalesDataOrderPaymentInterface

// NewSalesDataOrderPaymentInterface instantiates a new SalesDataOrderPaymentInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataOrderPaymentInterface(accountStatus string, additionalInformation []string, ccLast4 string, method string) *SalesDataOrderPaymentInterface {
	this := SalesDataOrderPaymentInterface{}
	this.AccountStatus = accountStatus
	this.AdditionalInformation = additionalInformation
	this.CcLast4 = ccLast4
	this.Method = method
	return &this
}

// NewSalesDataOrderPaymentInterfaceWithDefaults instantiates a new SalesDataOrderPaymentInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataOrderPaymentInterfaceWithDefaults() *SalesDataOrderPaymentInterface {
	this := SalesDataOrderPaymentInterface{}
	return &this
}

// GetAccountStatus returns the AccountStatus field value
func (o *SalesDataOrderPaymentInterface) GetAccountStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountStatus
}

// GetAccountStatusOk returns a tuple with the AccountStatus field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAccountStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountStatus, true
}

// SetAccountStatus sets field value
func (o *SalesDataOrderPaymentInterface) SetAccountStatus(v string) {
	o.AccountStatus = v
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAdditionalData() string {
	if o == nil || IsNil(o.AdditionalData) {
		var ret string
		return ret
	}
	return *o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAdditionalDataOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalData) {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAdditionalData() bool {
	if o != nil && !IsNil(o.AdditionalData) {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given string and assigns it to the AdditionalData field.
func (o *SalesDataOrderPaymentInterface) SetAdditionalData(v string) {
	o.AdditionalData = &v
}

// GetAdditionalInformation returns the AdditionalInformation field value
func (o *SalesDataOrderPaymentInterface) GetAdditionalInformation() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AdditionalInformation
}

// GetAdditionalInformationOk returns a tuple with the AdditionalInformation field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAdditionalInformationOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdditionalInformation, true
}

// SetAdditionalInformation sets field value
func (o *SalesDataOrderPaymentInterface) SetAdditionalInformation(v []string) {
	o.AdditionalInformation = v
}

// GetAddressStatus returns the AddressStatus field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAddressStatus() string {
	if o == nil || IsNil(o.AddressStatus) {
		var ret string
		return ret
	}
	return *o.AddressStatus
}

// GetAddressStatusOk returns a tuple with the AddressStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAddressStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AddressStatus) {
		return nil, false
	}
	return o.AddressStatus, true
}

// HasAddressStatus returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAddressStatus() bool {
	if o != nil && !IsNil(o.AddressStatus) {
		return true
	}

	return false
}

// SetAddressStatus gets a reference to the given string and assigns it to the AddressStatus field.
func (o *SalesDataOrderPaymentInterface) SetAddressStatus(v string) {
	o.AddressStatus = &v
}

// GetAmountAuthorized returns the AmountAuthorized field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAmountAuthorized() float32 {
	if o == nil || IsNil(o.AmountAuthorized) {
		var ret float32
		return ret
	}
	return *o.AmountAuthorized
}

// GetAmountAuthorizedOk returns a tuple with the AmountAuthorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAmountAuthorizedOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountAuthorized) {
		return nil, false
	}
	return o.AmountAuthorized, true
}

// HasAmountAuthorized returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAmountAuthorized() bool {
	if o != nil && !IsNil(o.AmountAuthorized) {
		return true
	}

	return false
}

// SetAmountAuthorized gets a reference to the given float32 and assigns it to the AmountAuthorized field.
func (o *SalesDataOrderPaymentInterface) SetAmountAuthorized(v float32) {
	o.AmountAuthorized = &v
}

// GetAmountCanceled returns the AmountCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAmountCanceled() float32 {
	if o == nil || IsNil(o.AmountCanceled) {
		var ret float32
		return ret
	}
	return *o.AmountCanceled
}

// GetAmountCanceledOk returns a tuple with the AmountCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAmountCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountCanceled) {
		return nil, false
	}
	return o.AmountCanceled, true
}

// HasAmountCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAmountCanceled() bool {
	if o != nil && !IsNil(o.AmountCanceled) {
		return true
	}

	return false
}

// SetAmountCanceled gets a reference to the given float32 and assigns it to the AmountCanceled field.
func (o *SalesDataOrderPaymentInterface) SetAmountCanceled(v float32) {
	o.AmountCanceled = &v
}

// GetAmountOrdered returns the AmountOrdered field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAmountOrdered() float32 {
	if o == nil || IsNil(o.AmountOrdered) {
		var ret float32
		return ret
	}
	return *o.AmountOrdered
}

// GetAmountOrderedOk returns a tuple with the AmountOrdered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAmountOrderedOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountOrdered) {
		return nil, false
	}
	return o.AmountOrdered, true
}

// HasAmountOrdered returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAmountOrdered() bool {
	if o != nil && !IsNil(o.AmountOrdered) {
		return true
	}

	return false
}

// SetAmountOrdered gets a reference to the given float32 and assigns it to the AmountOrdered field.
func (o *SalesDataOrderPaymentInterface) SetAmountOrdered(v float32) {
	o.AmountOrdered = &v
}

// GetAmountPaid returns the AmountPaid field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAmountPaid() float32 {
	if o == nil || IsNil(o.AmountPaid) {
		var ret float32
		return ret
	}
	return *o.AmountPaid
}

// GetAmountPaidOk returns a tuple with the AmountPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAmountPaidOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountPaid) {
		return nil, false
	}
	return o.AmountPaid, true
}

// HasAmountPaid returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAmountPaid() bool {
	if o != nil && !IsNil(o.AmountPaid) {
		return true
	}

	return false
}

// SetAmountPaid gets a reference to the given float32 and assigns it to the AmountPaid field.
func (o *SalesDataOrderPaymentInterface) SetAmountPaid(v float32) {
	o.AmountPaid = &v
}

// GetAmountRefunded returns the AmountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAmountRefunded() float32 {
	if o == nil || IsNil(o.AmountRefunded) {
		var ret float32
		return ret
	}
	return *o.AmountRefunded
}

// GetAmountRefundedOk returns a tuple with the AmountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAmountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountRefunded) {
		return nil, false
	}
	return o.AmountRefunded, true
}

// HasAmountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAmountRefunded() bool {
	if o != nil && !IsNil(o.AmountRefunded) {
		return true
	}

	return false
}

// SetAmountRefunded gets a reference to the given float32 and assigns it to the AmountRefunded field.
func (o *SalesDataOrderPaymentInterface) SetAmountRefunded(v float32) {
	o.AmountRefunded = &v
}

// GetAnetTransMethod returns the AnetTransMethod field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetAnetTransMethod() string {
	if o == nil || IsNil(o.AnetTransMethod) {
		var ret string
		return ret
	}
	return *o.AnetTransMethod
}

// GetAnetTransMethodOk returns a tuple with the AnetTransMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetAnetTransMethodOk() (*string, bool) {
	if o == nil || IsNil(o.AnetTransMethod) {
		return nil, false
	}
	return o.AnetTransMethod, true
}

// HasAnetTransMethod returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasAnetTransMethod() bool {
	if o != nil && !IsNil(o.AnetTransMethod) {
		return true
	}

	return false
}

// SetAnetTransMethod gets a reference to the given string and assigns it to the AnetTransMethod field.
func (o *SalesDataOrderPaymentInterface) SetAnetTransMethod(v string) {
	o.AnetTransMethod = &v
}

// GetBaseAmountAuthorized returns the BaseAmountAuthorized field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountAuthorized() float32 {
	if o == nil || IsNil(o.BaseAmountAuthorized) {
		var ret float32
		return ret
	}
	return *o.BaseAmountAuthorized
}

// GetBaseAmountAuthorizedOk returns a tuple with the BaseAmountAuthorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountAuthorizedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountAuthorized) {
		return nil, false
	}
	return o.BaseAmountAuthorized, true
}

// HasBaseAmountAuthorized returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseAmountAuthorized() bool {
	if o != nil && !IsNil(o.BaseAmountAuthorized) {
		return true
	}

	return false
}

// SetBaseAmountAuthorized gets a reference to the given float32 and assigns it to the BaseAmountAuthorized field.
func (o *SalesDataOrderPaymentInterface) SetBaseAmountAuthorized(v float32) {
	o.BaseAmountAuthorized = &v
}

// GetBaseAmountCanceled returns the BaseAmountCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountCanceled() float32 {
	if o == nil || IsNil(o.BaseAmountCanceled) {
		var ret float32
		return ret
	}
	return *o.BaseAmountCanceled
}

// GetBaseAmountCanceledOk returns a tuple with the BaseAmountCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountCanceled) {
		return nil, false
	}
	return o.BaseAmountCanceled, true
}

// HasBaseAmountCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseAmountCanceled() bool {
	if o != nil && !IsNil(o.BaseAmountCanceled) {
		return true
	}

	return false
}

// SetBaseAmountCanceled gets a reference to the given float32 and assigns it to the BaseAmountCanceled field.
func (o *SalesDataOrderPaymentInterface) SetBaseAmountCanceled(v float32) {
	o.BaseAmountCanceled = &v
}

// GetBaseAmountOrdered returns the BaseAmountOrdered field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountOrdered() float32 {
	if o == nil || IsNil(o.BaseAmountOrdered) {
		var ret float32
		return ret
	}
	return *o.BaseAmountOrdered
}

// GetBaseAmountOrderedOk returns a tuple with the BaseAmountOrdered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountOrderedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountOrdered) {
		return nil, false
	}
	return o.BaseAmountOrdered, true
}

// HasBaseAmountOrdered returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseAmountOrdered() bool {
	if o != nil && !IsNil(o.BaseAmountOrdered) {
		return true
	}

	return false
}

// SetBaseAmountOrdered gets a reference to the given float32 and assigns it to the BaseAmountOrdered field.
func (o *SalesDataOrderPaymentInterface) SetBaseAmountOrdered(v float32) {
	o.BaseAmountOrdered = &v
}

// GetBaseAmountPaid returns the BaseAmountPaid field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountPaid() float32 {
	if o == nil || IsNil(o.BaseAmountPaid) {
		var ret float32
		return ret
	}
	return *o.BaseAmountPaid
}

// GetBaseAmountPaidOk returns a tuple with the BaseAmountPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountPaidOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountPaid) {
		return nil, false
	}
	return o.BaseAmountPaid, true
}

// HasBaseAmountPaid returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseAmountPaid() bool {
	if o != nil && !IsNil(o.BaseAmountPaid) {
		return true
	}

	return false
}

// SetBaseAmountPaid gets a reference to the given float32 and assigns it to the BaseAmountPaid field.
func (o *SalesDataOrderPaymentInterface) SetBaseAmountPaid(v float32) {
	o.BaseAmountPaid = &v
}

// GetBaseAmountPaidOnline returns the BaseAmountPaidOnline field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountPaidOnline() float32 {
	if o == nil || IsNil(o.BaseAmountPaidOnline) {
		var ret float32
		return ret
	}
	return *o.BaseAmountPaidOnline
}

// GetBaseAmountPaidOnlineOk returns a tuple with the BaseAmountPaidOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountPaidOnlineOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountPaidOnline) {
		return nil, false
	}
	return o.BaseAmountPaidOnline, true
}

// HasBaseAmountPaidOnline returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseAmountPaidOnline() bool {
	if o != nil && !IsNil(o.BaseAmountPaidOnline) {
		return true
	}

	return false
}

// SetBaseAmountPaidOnline gets a reference to the given float32 and assigns it to the BaseAmountPaidOnline field.
func (o *SalesDataOrderPaymentInterface) SetBaseAmountPaidOnline(v float32) {
	o.BaseAmountPaidOnline = &v
}

// GetBaseAmountRefunded returns the BaseAmountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountRefunded() float32 {
	if o == nil || IsNil(o.BaseAmountRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseAmountRefunded
}

// GetBaseAmountRefundedOk returns a tuple with the BaseAmountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountRefunded) {
		return nil, false
	}
	return o.BaseAmountRefunded, true
}

// HasBaseAmountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseAmountRefunded() bool {
	if o != nil && !IsNil(o.BaseAmountRefunded) {
		return true
	}

	return false
}

// SetBaseAmountRefunded gets a reference to the given float32 and assigns it to the BaseAmountRefunded field.
func (o *SalesDataOrderPaymentInterface) SetBaseAmountRefunded(v float32) {
	o.BaseAmountRefunded = &v
}

// GetBaseAmountRefundedOnline returns the BaseAmountRefundedOnline field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountRefundedOnline() float32 {
	if o == nil || IsNil(o.BaseAmountRefundedOnline) {
		var ret float32
		return ret
	}
	return *o.BaseAmountRefundedOnline
}

// GetBaseAmountRefundedOnlineOk returns a tuple with the BaseAmountRefundedOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseAmountRefundedOnlineOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountRefundedOnline) {
		return nil, false
	}
	return o.BaseAmountRefundedOnline, true
}

// HasBaseAmountRefundedOnline returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseAmountRefundedOnline() bool {
	if o != nil && !IsNil(o.BaseAmountRefundedOnline) {
		return true
	}

	return false
}

// SetBaseAmountRefundedOnline gets a reference to the given float32 and assigns it to the BaseAmountRefundedOnline field.
func (o *SalesDataOrderPaymentInterface) SetBaseAmountRefundedOnline(v float32) {
	o.BaseAmountRefundedOnline = &v
}

// GetBaseShippingAmount returns the BaseShippingAmount field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseShippingAmount() float32 {
	if o == nil || IsNil(o.BaseShippingAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingAmount
}

// GetBaseShippingAmountOk returns a tuple with the BaseShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingAmount) {
		return nil, false
	}
	return o.BaseShippingAmount, true
}

// HasBaseShippingAmount returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseShippingAmount() bool {
	if o != nil && !IsNil(o.BaseShippingAmount) {
		return true
	}

	return false
}

// SetBaseShippingAmount gets a reference to the given float32 and assigns it to the BaseShippingAmount field.
func (o *SalesDataOrderPaymentInterface) SetBaseShippingAmount(v float32) {
	o.BaseShippingAmount = &v
}

// GetBaseShippingCaptured returns the BaseShippingCaptured field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseShippingCaptured() float32 {
	if o == nil || IsNil(o.BaseShippingCaptured) {
		var ret float32
		return ret
	}
	return *o.BaseShippingCaptured
}

// GetBaseShippingCapturedOk returns a tuple with the BaseShippingCaptured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseShippingCapturedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingCaptured) {
		return nil, false
	}
	return o.BaseShippingCaptured, true
}

// HasBaseShippingCaptured returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseShippingCaptured() bool {
	if o != nil && !IsNil(o.BaseShippingCaptured) {
		return true
	}

	return false
}

// SetBaseShippingCaptured gets a reference to the given float32 and assigns it to the BaseShippingCaptured field.
func (o *SalesDataOrderPaymentInterface) SetBaseShippingCaptured(v float32) {
	o.BaseShippingCaptured = &v
}

// GetBaseShippingRefunded returns the BaseShippingRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetBaseShippingRefunded() float32 {
	if o == nil || IsNil(o.BaseShippingRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseShippingRefunded
}

// GetBaseShippingRefundedOk returns a tuple with the BaseShippingRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetBaseShippingRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingRefunded) {
		return nil, false
	}
	return o.BaseShippingRefunded, true
}

// HasBaseShippingRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasBaseShippingRefunded() bool {
	if o != nil && !IsNil(o.BaseShippingRefunded) {
		return true
	}

	return false
}

// SetBaseShippingRefunded gets a reference to the given float32 and assigns it to the BaseShippingRefunded field.
func (o *SalesDataOrderPaymentInterface) SetBaseShippingRefunded(v float32) {
	o.BaseShippingRefunded = &v
}

// GetCcApproval returns the CcApproval field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcApproval() string {
	if o == nil || IsNil(o.CcApproval) {
		var ret string
		return ret
	}
	return *o.CcApproval
}

// GetCcApprovalOk returns a tuple with the CcApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcApprovalOk() (*string, bool) {
	if o == nil || IsNil(o.CcApproval) {
		return nil, false
	}
	return o.CcApproval, true
}

// HasCcApproval returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcApproval() bool {
	if o != nil && !IsNil(o.CcApproval) {
		return true
	}

	return false
}

// SetCcApproval gets a reference to the given string and assigns it to the CcApproval field.
func (o *SalesDataOrderPaymentInterface) SetCcApproval(v string) {
	o.CcApproval = &v
}

// GetCcAvsStatus returns the CcAvsStatus field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcAvsStatus() string {
	if o == nil || IsNil(o.CcAvsStatus) {
		var ret string
		return ret
	}
	return *o.CcAvsStatus
}

// GetCcAvsStatusOk returns a tuple with the CcAvsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcAvsStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CcAvsStatus) {
		return nil, false
	}
	return o.CcAvsStatus, true
}

// HasCcAvsStatus returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcAvsStatus() bool {
	if o != nil && !IsNil(o.CcAvsStatus) {
		return true
	}

	return false
}

// SetCcAvsStatus gets a reference to the given string and assigns it to the CcAvsStatus field.
func (o *SalesDataOrderPaymentInterface) SetCcAvsStatus(v string) {
	o.CcAvsStatus = &v
}

// GetCcCidStatus returns the CcCidStatus field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcCidStatus() string {
	if o == nil || IsNil(o.CcCidStatus) {
		var ret string
		return ret
	}
	return *o.CcCidStatus
}

// GetCcCidStatusOk returns a tuple with the CcCidStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcCidStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CcCidStatus) {
		return nil, false
	}
	return o.CcCidStatus, true
}

// HasCcCidStatus returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcCidStatus() bool {
	if o != nil && !IsNil(o.CcCidStatus) {
		return true
	}

	return false
}

// SetCcCidStatus gets a reference to the given string and assigns it to the CcCidStatus field.
func (o *SalesDataOrderPaymentInterface) SetCcCidStatus(v string) {
	o.CcCidStatus = &v
}

// GetCcDebugRequestBody returns the CcDebugRequestBody field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcDebugRequestBody() string {
	if o == nil || IsNil(o.CcDebugRequestBody) {
		var ret string
		return ret
	}
	return *o.CcDebugRequestBody
}

// GetCcDebugRequestBodyOk returns a tuple with the CcDebugRequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcDebugRequestBodyOk() (*string, bool) {
	if o == nil || IsNil(o.CcDebugRequestBody) {
		return nil, false
	}
	return o.CcDebugRequestBody, true
}

// HasCcDebugRequestBody returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcDebugRequestBody() bool {
	if o != nil && !IsNil(o.CcDebugRequestBody) {
		return true
	}

	return false
}

// SetCcDebugRequestBody gets a reference to the given string and assigns it to the CcDebugRequestBody field.
func (o *SalesDataOrderPaymentInterface) SetCcDebugRequestBody(v string) {
	o.CcDebugRequestBody = &v
}

// GetCcDebugResponseBody returns the CcDebugResponseBody field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcDebugResponseBody() string {
	if o == nil || IsNil(o.CcDebugResponseBody) {
		var ret string
		return ret
	}
	return *o.CcDebugResponseBody
}

// GetCcDebugResponseBodyOk returns a tuple with the CcDebugResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcDebugResponseBodyOk() (*string, bool) {
	if o == nil || IsNil(o.CcDebugResponseBody) {
		return nil, false
	}
	return o.CcDebugResponseBody, true
}

// HasCcDebugResponseBody returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcDebugResponseBody() bool {
	if o != nil && !IsNil(o.CcDebugResponseBody) {
		return true
	}

	return false
}

// SetCcDebugResponseBody gets a reference to the given string and assigns it to the CcDebugResponseBody field.
func (o *SalesDataOrderPaymentInterface) SetCcDebugResponseBody(v string) {
	o.CcDebugResponseBody = &v
}

// GetCcDebugResponseSerialized returns the CcDebugResponseSerialized field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcDebugResponseSerialized() string {
	if o == nil || IsNil(o.CcDebugResponseSerialized) {
		var ret string
		return ret
	}
	return *o.CcDebugResponseSerialized
}

// GetCcDebugResponseSerializedOk returns a tuple with the CcDebugResponseSerialized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcDebugResponseSerializedOk() (*string, bool) {
	if o == nil || IsNil(o.CcDebugResponseSerialized) {
		return nil, false
	}
	return o.CcDebugResponseSerialized, true
}

// HasCcDebugResponseSerialized returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcDebugResponseSerialized() bool {
	if o != nil && !IsNil(o.CcDebugResponseSerialized) {
		return true
	}

	return false
}

// SetCcDebugResponseSerialized gets a reference to the given string and assigns it to the CcDebugResponseSerialized field.
func (o *SalesDataOrderPaymentInterface) SetCcDebugResponseSerialized(v string) {
	o.CcDebugResponseSerialized = &v
}

// GetCcExpMonth returns the CcExpMonth field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcExpMonth() string {
	if o == nil || IsNil(o.CcExpMonth) {
		var ret string
		return ret
	}
	return *o.CcExpMonth
}

// GetCcExpMonthOk returns a tuple with the CcExpMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcExpMonthOk() (*string, bool) {
	if o == nil || IsNil(o.CcExpMonth) {
		return nil, false
	}
	return o.CcExpMonth, true
}

// HasCcExpMonth returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcExpMonth() bool {
	if o != nil && !IsNil(o.CcExpMonth) {
		return true
	}

	return false
}

// SetCcExpMonth gets a reference to the given string and assigns it to the CcExpMonth field.
func (o *SalesDataOrderPaymentInterface) SetCcExpMonth(v string) {
	o.CcExpMonth = &v
}

// GetCcExpYear returns the CcExpYear field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcExpYear() string {
	if o == nil || IsNil(o.CcExpYear) {
		var ret string
		return ret
	}
	return *o.CcExpYear
}

// GetCcExpYearOk returns a tuple with the CcExpYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcExpYearOk() (*string, bool) {
	if o == nil || IsNil(o.CcExpYear) {
		return nil, false
	}
	return o.CcExpYear, true
}

// HasCcExpYear returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcExpYear() bool {
	if o != nil && !IsNil(o.CcExpYear) {
		return true
	}

	return false
}

// SetCcExpYear gets a reference to the given string and assigns it to the CcExpYear field.
func (o *SalesDataOrderPaymentInterface) SetCcExpYear(v string) {
	o.CcExpYear = &v
}

// GetCcLast4 returns the CcLast4 field value
func (o *SalesDataOrderPaymentInterface) GetCcLast4() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CcLast4
}

// GetCcLast4Ok returns a tuple with the CcLast4 field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcLast4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CcLast4, true
}

// SetCcLast4 sets field value
func (o *SalesDataOrderPaymentInterface) SetCcLast4(v string) {
	o.CcLast4 = v
}

// GetCcNumberEnc returns the CcNumberEnc field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcNumberEnc() string {
	if o == nil || IsNil(o.CcNumberEnc) {
		var ret string
		return ret
	}
	return *o.CcNumberEnc
}

// GetCcNumberEncOk returns a tuple with the CcNumberEnc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcNumberEncOk() (*string, bool) {
	if o == nil || IsNil(o.CcNumberEnc) {
		return nil, false
	}
	return o.CcNumberEnc, true
}

// HasCcNumberEnc returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcNumberEnc() bool {
	if o != nil && !IsNil(o.CcNumberEnc) {
		return true
	}

	return false
}

// SetCcNumberEnc gets a reference to the given string and assigns it to the CcNumberEnc field.
func (o *SalesDataOrderPaymentInterface) SetCcNumberEnc(v string) {
	o.CcNumberEnc = &v
}

// GetCcOwner returns the CcOwner field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcOwner() string {
	if o == nil || IsNil(o.CcOwner) {
		var ret string
		return ret
	}
	return *o.CcOwner
}

// GetCcOwnerOk returns a tuple with the CcOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.CcOwner) {
		return nil, false
	}
	return o.CcOwner, true
}

// HasCcOwner returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcOwner() bool {
	if o != nil && !IsNil(o.CcOwner) {
		return true
	}

	return false
}

// SetCcOwner gets a reference to the given string and assigns it to the CcOwner field.
func (o *SalesDataOrderPaymentInterface) SetCcOwner(v string) {
	o.CcOwner = &v
}

// GetCcSecureVerify returns the CcSecureVerify field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcSecureVerify() string {
	if o == nil || IsNil(o.CcSecureVerify) {
		var ret string
		return ret
	}
	return *o.CcSecureVerify
}

// GetCcSecureVerifyOk returns a tuple with the CcSecureVerify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcSecureVerifyOk() (*string, bool) {
	if o == nil || IsNil(o.CcSecureVerify) {
		return nil, false
	}
	return o.CcSecureVerify, true
}

// HasCcSecureVerify returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcSecureVerify() bool {
	if o != nil && !IsNil(o.CcSecureVerify) {
		return true
	}

	return false
}

// SetCcSecureVerify gets a reference to the given string and assigns it to the CcSecureVerify field.
func (o *SalesDataOrderPaymentInterface) SetCcSecureVerify(v string) {
	o.CcSecureVerify = &v
}

// GetCcSsIssue returns the CcSsIssue field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcSsIssue() string {
	if o == nil || IsNil(o.CcSsIssue) {
		var ret string
		return ret
	}
	return *o.CcSsIssue
}

// GetCcSsIssueOk returns a tuple with the CcSsIssue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcSsIssueOk() (*string, bool) {
	if o == nil || IsNil(o.CcSsIssue) {
		return nil, false
	}
	return o.CcSsIssue, true
}

// HasCcSsIssue returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcSsIssue() bool {
	if o != nil && !IsNil(o.CcSsIssue) {
		return true
	}

	return false
}

// SetCcSsIssue gets a reference to the given string and assigns it to the CcSsIssue field.
func (o *SalesDataOrderPaymentInterface) SetCcSsIssue(v string) {
	o.CcSsIssue = &v
}

// GetCcSsStartMonth returns the CcSsStartMonth field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcSsStartMonth() string {
	if o == nil || IsNil(o.CcSsStartMonth) {
		var ret string
		return ret
	}
	return *o.CcSsStartMonth
}

// GetCcSsStartMonthOk returns a tuple with the CcSsStartMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcSsStartMonthOk() (*string, bool) {
	if o == nil || IsNil(o.CcSsStartMonth) {
		return nil, false
	}
	return o.CcSsStartMonth, true
}

// HasCcSsStartMonth returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcSsStartMonth() bool {
	if o != nil && !IsNil(o.CcSsStartMonth) {
		return true
	}

	return false
}

// SetCcSsStartMonth gets a reference to the given string and assigns it to the CcSsStartMonth field.
func (o *SalesDataOrderPaymentInterface) SetCcSsStartMonth(v string) {
	o.CcSsStartMonth = &v
}

// GetCcSsStartYear returns the CcSsStartYear field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcSsStartYear() string {
	if o == nil || IsNil(o.CcSsStartYear) {
		var ret string
		return ret
	}
	return *o.CcSsStartYear
}

// GetCcSsStartYearOk returns a tuple with the CcSsStartYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcSsStartYearOk() (*string, bool) {
	if o == nil || IsNil(o.CcSsStartYear) {
		return nil, false
	}
	return o.CcSsStartYear, true
}

// HasCcSsStartYear returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcSsStartYear() bool {
	if o != nil && !IsNil(o.CcSsStartYear) {
		return true
	}

	return false
}

// SetCcSsStartYear gets a reference to the given string and assigns it to the CcSsStartYear field.
func (o *SalesDataOrderPaymentInterface) SetCcSsStartYear(v string) {
	o.CcSsStartYear = &v
}

// GetCcStatus returns the CcStatus field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcStatus() string {
	if o == nil || IsNil(o.CcStatus) {
		var ret string
		return ret
	}
	return *o.CcStatus
}

// GetCcStatusOk returns a tuple with the CcStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CcStatus) {
		return nil, false
	}
	return o.CcStatus, true
}

// HasCcStatus returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcStatus() bool {
	if o != nil && !IsNil(o.CcStatus) {
		return true
	}

	return false
}

// SetCcStatus gets a reference to the given string and assigns it to the CcStatus field.
func (o *SalesDataOrderPaymentInterface) SetCcStatus(v string) {
	o.CcStatus = &v
}

// GetCcStatusDescription returns the CcStatusDescription field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcStatusDescription() string {
	if o == nil || IsNil(o.CcStatusDescription) {
		var ret string
		return ret
	}
	return *o.CcStatusDescription
}

// GetCcStatusDescriptionOk returns a tuple with the CcStatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcStatusDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CcStatusDescription) {
		return nil, false
	}
	return o.CcStatusDescription, true
}

// HasCcStatusDescription returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcStatusDescription() bool {
	if o != nil && !IsNil(o.CcStatusDescription) {
		return true
	}

	return false
}

// SetCcStatusDescription gets a reference to the given string and assigns it to the CcStatusDescription field.
func (o *SalesDataOrderPaymentInterface) SetCcStatusDescription(v string) {
	o.CcStatusDescription = &v
}

// GetCcTransId returns the CcTransId field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcTransId() string {
	if o == nil || IsNil(o.CcTransId) {
		var ret string
		return ret
	}
	return *o.CcTransId
}

// GetCcTransIdOk returns a tuple with the CcTransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.CcTransId) {
		return nil, false
	}
	return o.CcTransId, true
}

// HasCcTransId returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcTransId() bool {
	if o != nil && !IsNil(o.CcTransId) {
		return true
	}

	return false
}

// SetCcTransId gets a reference to the given string and assigns it to the CcTransId field.
func (o *SalesDataOrderPaymentInterface) SetCcTransId(v string) {
	o.CcTransId = &v
}

// GetCcType returns the CcType field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetCcType() string {
	if o == nil || IsNil(o.CcType) {
		var ret string
		return ret
	}
	return *o.CcType
}

// GetCcTypeOk returns a tuple with the CcType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetCcTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CcType) {
		return nil, false
	}
	return o.CcType, true
}

// HasCcType returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasCcType() bool {
	if o != nil && !IsNil(o.CcType) {
		return true
	}

	return false
}

// SetCcType gets a reference to the given string and assigns it to the CcType field.
func (o *SalesDataOrderPaymentInterface) SetCcType(v string) {
	o.CcType = &v
}

// GetEcheckAccountName returns the EcheckAccountName field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetEcheckAccountName() string {
	if o == nil || IsNil(o.EcheckAccountName) {
		var ret string
		return ret
	}
	return *o.EcheckAccountName
}

// GetEcheckAccountNameOk returns a tuple with the EcheckAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetEcheckAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.EcheckAccountName) {
		return nil, false
	}
	return o.EcheckAccountName, true
}

// HasEcheckAccountName returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasEcheckAccountName() bool {
	if o != nil && !IsNil(o.EcheckAccountName) {
		return true
	}

	return false
}

// SetEcheckAccountName gets a reference to the given string and assigns it to the EcheckAccountName field.
func (o *SalesDataOrderPaymentInterface) SetEcheckAccountName(v string) {
	o.EcheckAccountName = &v
}

// GetEcheckAccountType returns the EcheckAccountType field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetEcheckAccountType() string {
	if o == nil || IsNil(o.EcheckAccountType) {
		var ret string
		return ret
	}
	return *o.EcheckAccountType
}

// GetEcheckAccountTypeOk returns a tuple with the EcheckAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetEcheckAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EcheckAccountType) {
		return nil, false
	}
	return o.EcheckAccountType, true
}

// HasEcheckAccountType returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasEcheckAccountType() bool {
	if o != nil && !IsNil(o.EcheckAccountType) {
		return true
	}

	return false
}

// SetEcheckAccountType gets a reference to the given string and assigns it to the EcheckAccountType field.
func (o *SalesDataOrderPaymentInterface) SetEcheckAccountType(v string) {
	o.EcheckAccountType = &v
}

// GetEcheckBankName returns the EcheckBankName field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetEcheckBankName() string {
	if o == nil || IsNil(o.EcheckBankName) {
		var ret string
		return ret
	}
	return *o.EcheckBankName
}

// GetEcheckBankNameOk returns a tuple with the EcheckBankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetEcheckBankNameOk() (*string, bool) {
	if o == nil || IsNil(o.EcheckBankName) {
		return nil, false
	}
	return o.EcheckBankName, true
}

// HasEcheckBankName returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasEcheckBankName() bool {
	if o != nil && !IsNil(o.EcheckBankName) {
		return true
	}

	return false
}

// SetEcheckBankName gets a reference to the given string and assigns it to the EcheckBankName field.
func (o *SalesDataOrderPaymentInterface) SetEcheckBankName(v string) {
	o.EcheckBankName = &v
}

// GetEcheckRoutingNumber returns the EcheckRoutingNumber field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetEcheckRoutingNumber() string {
	if o == nil || IsNil(o.EcheckRoutingNumber) {
		var ret string
		return ret
	}
	return *o.EcheckRoutingNumber
}

// GetEcheckRoutingNumberOk returns a tuple with the EcheckRoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetEcheckRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EcheckRoutingNumber) {
		return nil, false
	}
	return o.EcheckRoutingNumber, true
}

// HasEcheckRoutingNumber returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasEcheckRoutingNumber() bool {
	if o != nil && !IsNil(o.EcheckRoutingNumber) {
		return true
	}

	return false
}

// SetEcheckRoutingNumber gets a reference to the given string and assigns it to the EcheckRoutingNumber field.
func (o *SalesDataOrderPaymentInterface) SetEcheckRoutingNumber(v string) {
	o.EcheckRoutingNumber = &v
}

// GetEcheckType returns the EcheckType field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetEcheckType() string {
	if o == nil || IsNil(o.EcheckType) {
		var ret string
		return ret
	}
	return *o.EcheckType
}

// GetEcheckTypeOk returns a tuple with the EcheckType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetEcheckTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EcheckType) {
		return nil, false
	}
	return o.EcheckType, true
}

// HasEcheckType returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasEcheckType() bool {
	if o != nil && !IsNil(o.EcheckType) {
		return true
	}

	return false
}

// SetEcheckType gets a reference to the given string and assigns it to the EcheckType field.
func (o *SalesDataOrderPaymentInterface) SetEcheckType(v string) {
	o.EcheckType = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *SalesDataOrderPaymentInterface) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetLastTransId returns the LastTransId field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetLastTransId() string {
	if o == nil || IsNil(o.LastTransId) {
		var ret string
		return ret
	}
	return *o.LastTransId
}

// GetLastTransIdOk returns a tuple with the LastTransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetLastTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastTransId) {
		return nil, false
	}
	return o.LastTransId, true
}

// HasLastTransId returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasLastTransId() bool {
	if o != nil && !IsNil(o.LastTransId) {
		return true
	}

	return false
}

// SetLastTransId gets a reference to the given string and assigns it to the LastTransId field.
func (o *SalesDataOrderPaymentInterface) SetLastTransId(v string) {
	o.LastTransId = &v
}

// GetMethod returns the Method field value
func (o *SalesDataOrderPaymentInterface) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *SalesDataOrderPaymentInterface) SetMethod(v string) {
	o.Method = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId) {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetParentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *SalesDataOrderPaymentInterface) SetParentId(v int32) {
	o.ParentId = &v
}

// GetPoNumber returns the PoNumber field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetPoNumber() string {
	if o == nil || IsNil(o.PoNumber) {
		var ret string
		return ret
	}
	return *o.PoNumber
}

// GetPoNumberOk returns a tuple with the PoNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetPoNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PoNumber) {
		return nil, false
	}
	return o.PoNumber, true
}

// HasPoNumber returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasPoNumber() bool {
	if o != nil && !IsNil(o.PoNumber) {
		return true
	}

	return false
}

// SetPoNumber gets a reference to the given string and assigns it to the PoNumber field.
func (o *SalesDataOrderPaymentInterface) SetPoNumber(v string) {
	o.PoNumber = &v
}

// GetProtectionEligibility returns the ProtectionEligibility field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetProtectionEligibility() string {
	if o == nil || IsNil(o.ProtectionEligibility) {
		var ret string
		return ret
	}
	return *o.ProtectionEligibility
}

// GetProtectionEligibilityOk returns a tuple with the ProtectionEligibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetProtectionEligibilityOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectionEligibility) {
		return nil, false
	}
	return o.ProtectionEligibility, true
}

// HasProtectionEligibility returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasProtectionEligibility() bool {
	if o != nil && !IsNil(o.ProtectionEligibility) {
		return true
	}

	return false
}

// SetProtectionEligibility gets a reference to the given string and assigns it to the ProtectionEligibility field.
func (o *SalesDataOrderPaymentInterface) SetProtectionEligibility(v string) {
	o.ProtectionEligibility = &v
}

// GetQuotePaymentId returns the QuotePaymentId field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetQuotePaymentId() int32 {
	if o == nil || IsNil(o.QuotePaymentId) {
		var ret int32
		return ret
	}
	return *o.QuotePaymentId
}

// GetQuotePaymentIdOk returns a tuple with the QuotePaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetQuotePaymentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotePaymentId) {
		return nil, false
	}
	return o.QuotePaymentId, true
}

// HasQuotePaymentId returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasQuotePaymentId() bool {
	if o != nil && !IsNil(o.QuotePaymentId) {
		return true
	}

	return false
}

// SetQuotePaymentId gets a reference to the given int32 and assigns it to the QuotePaymentId field.
func (o *SalesDataOrderPaymentInterface) SetQuotePaymentId(v int32) {
	o.QuotePaymentId = &v
}

// GetShippingAmount returns the ShippingAmount field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetShippingAmount() float32 {
	if o == nil || IsNil(o.ShippingAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingAmount
}

// GetShippingAmountOk returns a tuple with the ShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingAmount) {
		return nil, false
	}
	return o.ShippingAmount, true
}

// HasShippingAmount returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasShippingAmount() bool {
	if o != nil && !IsNil(o.ShippingAmount) {
		return true
	}

	return false
}

// SetShippingAmount gets a reference to the given float32 and assigns it to the ShippingAmount field.
func (o *SalesDataOrderPaymentInterface) SetShippingAmount(v float32) {
	o.ShippingAmount = &v
}

// GetShippingCaptured returns the ShippingCaptured field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetShippingCaptured() float32 {
	if o == nil || IsNil(o.ShippingCaptured) {
		var ret float32
		return ret
	}
	return *o.ShippingCaptured
}

// GetShippingCapturedOk returns a tuple with the ShippingCaptured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetShippingCapturedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingCaptured) {
		return nil, false
	}
	return o.ShippingCaptured, true
}

// HasShippingCaptured returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasShippingCaptured() bool {
	if o != nil && !IsNil(o.ShippingCaptured) {
		return true
	}

	return false
}

// SetShippingCaptured gets a reference to the given float32 and assigns it to the ShippingCaptured field.
func (o *SalesDataOrderPaymentInterface) SetShippingCaptured(v float32) {
	o.ShippingCaptured = &v
}

// GetShippingRefunded returns the ShippingRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetShippingRefunded() float32 {
	if o == nil || IsNil(o.ShippingRefunded) {
		var ret float32
		return ret
	}
	return *o.ShippingRefunded
}

// GetShippingRefundedOk returns a tuple with the ShippingRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetShippingRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingRefunded) {
		return nil, false
	}
	return o.ShippingRefunded, true
}

// HasShippingRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasShippingRefunded() bool {
	if o != nil && !IsNil(o.ShippingRefunded) {
		return true
	}

	return false
}

// SetShippingRefunded gets a reference to the given float32 and assigns it to the ShippingRefunded field.
func (o *SalesDataOrderPaymentInterface) SetShippingRefunded(v float32) {
	o.ShippingRefunded = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataOrderPaymentInterface) GetExtensionAttributes() SalesDataOrderPaymentExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret SalesDataOrderPaymentExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderPaymentInterface) GetExtensionAttributesOk() (*SalesDataOrderPaymentExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataOrderPaymentInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given SalesDataOrderPaymentExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *SalesDataOrderPaymentInterface) SetExtensionAttributes(v SalesDataOrderPaymentExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o SalesDataOrderPaymentInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataOrderPaymentInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_status"] = o.AccountStatus
	if !IsNil(o.AdditionalData) {
		toSerialize["additional_data"] = o.AdditionalData
	}
	toSerialize["additional_information"] = o.AdditionalInformation
	if !IsNil(o.AddressStatus) {
		toSerialize["address_status"] = o.AddressStatus
	}
	if !IsNil(o.AmountAuthorized) {
		toSerialize["amount_authorized"] = o.AmountAuthorized
	}
	if !IsNil(o.AmountCanceled) {
		toSerialize["amount_canceled"] = o.AmountCanceled
	}
	if !IsNil(o.AmountOrdered) {
		toSerialize["amount_ordered"] = o.AmountOrdered
	}
	if !IsNil(o.AmountPaid) {
		toSerialize["amount_paid"] = o.AmountPaid
	}
	if !IsNil(o.AmountRefunded) {
		toSerialize["amount_refunded"] = o.AmountRefunded
	}
	if !IsNil(o.AnetTransMethod) {
		toSerialize["anet_trans_method"] = o.AnetTransMethod
	}
	if !IsNil(o.BaseAmountAuthorized) {
		toSerialize["base_amount_authorized"] = o.BaseAmountAuthorized
	}
	if !IsNil(o.BaseAmountCanceled) {
		toSerialize["base_amount_canceled"] = o.BaseAmountCanceled
	}
	if !IsNil(o.BaseAmountOrdered) {
		toSerialize["base_amount_ordered"] = o.BaseAmountOrdered
	}
	if !IsNil(o.BaseAmountPaid) {
		toSerialize["base_amount_paid"] = o.BaseAmountPaid
	}
	if !IsNil(o.BaseAmountPaidOnline) {
		toSerialize["base_amount_paid_online"] = o.BaseAmountPaidOnline
	}
	if !IsNil(o.BaseAmountRefunded) {
		toSerialize["base_amount_refunded"] = o.BaseAmountRefunded
	}
	if !IsNil(o.BaseAmountRefundedOnline) {
		toSerialize["base_amount_refunded_online"] = o.BaseAmountRefundedOnline
	}
	if !IsNil(o.BaseShippingAmount) {
		toSerialize["base_shipping_amount"] = o.BaseShippingAmount
	}
	if !IsNil(o.BaseShippingCaptured) {
		toSerialize["base_shipping_captured"] = o.BaseShippingCaptured
	}
	if !IsNil(o.BaseShippingRefunded) {
		toSerialize["base_shipping_refunded"] = o.BaseShippingRefunded
	}
	if !IsNil(o.CcApproval) {
		toSerialize["cc_approval"] = o.CcApproval
	}
	if !IsNil(o.CcAvsStatus) {
		toSerialize["cc_avs_status"] = o.CcAvsStatus
	}
	if !IsNil(o.CcCidStatus) {
		toSerialize["cc_cid_status"] = o.CcCidStatus
	}
	if !IsNil(o.CcDebugRequestBody) {
		toSerialize["cc_debug_request_body"] = o.CcDebugRequestBody
	}
	if !IsNil(o.CcDebugResponseBody) {
		toSerialize["cc_debug_response_body"] = o.CcDebugResponseBody
	}
	if !IsNil(o.CcDebugResponseSerialized) {
		toSerialize["cc_debug_response_serialized"] = o.CcDebugResponseSerialized
	}
	if !IsNil(o.CcExpMonth) {
		toSerialize["cc_exp_month"] = o.CcExpMonth
	}
	if !IsNil(o.CcExpYear) {
		toSerialize["cc_exp_year"] = o.CcExpYear
	}
	toSerialize["cc_last4"] = o.CcLast4
	if !IsNil(o.CcNumberEnc) {
		toSerialize["cc_number_enc"] = o.CcNumberEnc
	}
	if !IsNil(o.CcOwner) {
		toSerialize["cc_owner"] = o.CcOwner
	}
	if !IsNil(o.CcSecureVerify) {
		toSerialize["cc_secure_verify"] = o.CcSecureVerify
	}
	if !IsNil(o.CcSsIssue) {
		toSerialize["cc_ss_issue"] = o.CcSsIssue
	}
	if !IsNil(o.CcSsStartMonth) {
		toSerialize["cc_ss_start_month"] = o.CcSsStartMonth
	}
	if !IsNil(o.CcSsStartYear) {
		toSerialize["cc_ss_start_year"] = o.CcSsStartYear
	}
	if !IsNil(o.CcStatus) {
		toSerialize["cc_status"] = o.CcStatus
	}
	if !IsNil(o.CcStatusDescription) {
		toSerialize["cc_status_description"] = o.CcStatusDescription
	}
	if !IsNil(o.CcTransId) {
		toSerialize["cc_trans_id"] = o.CcTransId
	}
	if !IsNil(o.CcType) {
		toSerialize["cc_type"] = o.CcType
	}
	if !IsNil(o.EcheckAccountName) {
		toSerialize["echeck_account_name"] = o.EcheckAccountName
	}
	if !IsNil(o.EcheckAccountType) {
		toSerialize["echeck_account_type"] = o.EcheckAccountType
	}
	if !IsNil(o.EcheckBankName) {
		toSerialize["echeck_bank_name"] = o.EcheckBankName
	}
	if !IsNil(o.EcheckRoutingNumber) {
		toSerialize["echeck_routing_number"] = o.EcheckRoutingNumber
	}
	if !IsNil(o.EcheckType) {
		toSerialize["echeck_type"] = o.EcheckType
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	if !IsNil(o.LastTransId) {
		toSerialize["last_trans_id"] = o.LastTransId
	}
	toSerialize["method"] = o.Method
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.PoNumber) {
		toSerialize["po_number"] = o.PoNumber
	}
	if !IsNil(o.ProtectionEligibility) {
		toSerialize["protection_eligibility"] = o.ProtectionEligibility
	}
	if !IsNil(o.QuotePaymentId) {
		toSerialize["quote_payment_id"] = o.QuotePaymentId
	}
	if !IsNil(o.ShippingAmount) {
		toSerialize["shipping_amount"] = o.ShippingAmount
	}
	if !IsNil(o.ShippingCaptured) {
		toSerialize["shipping_captured"] = o.ShippingCaptured
	}
	if !IsNil(o.ShippingRefunded) {
		toSerialize["shipping_refunded"] = o.ShippingRefunded
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataOrderPaymentInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_status",
		"additional_information",
		"cc_last4",
		"method",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataOrderPaymentInterface := _SalesDataOrderPaymentInterface{}

	err = json.Unmarshal(data, &varSalesDataOrderPaymentInterface)

	if err != nil {
		return err
	}

	*o = SalesDataOrderPaymentInterface(varSalesDataOrderPaymentInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_status")
		delete(additionalProperties, "additional_data")
		delete(additionalProperties, "additional_information")
		delete(additionalProperties, "address_status")
		delete(additionalProperties, "amount_authorized")
		delete(additionalProperties, "amount_canceled")
		delete(additionalProperties, "amount_ordered")
		delete(additionalProperties, "amount_paid")
		delete(additionalProperties, "amount_refunded")
		delete(additionalProperties, "anet_trans_method")
		delete(additionalProperties, "base_amount_authorized")
		delete(additionalProperties, "base_amount_canceled")
		delete(additionalProperties, "base_amount_ordered")
		delete(additionalProperties, "base_amount_paid")
		delete(additionalProperties, "base_amount_paid_online")
		delete(additionalProperties, "base_amount_refunded")
		delete(additionalProperties, "base_amount_refunded_online")
		delete(additionalProperties, "base_shipping_amount")
		delete(additionalProperties, "base_shipping_captured")
		delete(additionalProperties, "base_shipping_refunded")
		delete(additionalProperties, "cc_approval")
		delete(additionalProperties, "cc_avs_status")
		delete(additionalProperties, "cc_cid_status")
		delete(additionalProperties, "cc_debug_request_body")
		delete(additionalProperties, "cc_debug_response_body")
		delete(additionalProperties, "cc_debug_response_serialized")
		delete(additionalProperties, "cc_exp_month")
		delete(additionalProperties, "cc_exp_year")
		delete(additionalProperties, "cc_last4")
		delete(additionalProperties, "cc_number_enc")
		delete(additionalProperties, "cc_owner")
		delete(additionalProperties, "cc_secure_verify")
		delete(additionalProperties, "cc_ss_issue")
		delete(additionalProperties, "cc_ss_start_month")
		delete(additionalProperties, "cc_ss_start_year")
		delete(additionalProperties, "cc_status")
		delete(additionalProperties, "cc_status_description")
		delete(additionalProperties, "cc_trans_id")
		delete(additionalProperties, "cc_type")
		delete(additionalProperties, "echeck_account_name")
		delete(additionalProperties, "echeck_account_type")
		delete(additionalProperties, "echeck_bank_name")
		delete(additionalProperties, "echeck_routing_number")
		delete(additionalProperties, "echeck_type")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "last_trans_id")
		delete(additionalProperties, "method")
		delete(additionalProperties, "parent_id")
		delete(additionalProperties, "po_number")
		delete(additionalProperties, "protection_eligibility")
		delete(additionalProperties, "quote_payment_id")
		delete(additionalProperties, "shipping_amount")
		delete(additionalProperties, "shipping_captured")
		delete(additionalProperties, "shipping_refunded")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataOrderPaymentInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataOrderPaymentInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataOrderPaymentInterface struct {
	value *SalesDataOrderPaymentInterface
	isSet bool
}

func (v NullableSalesDataOrderPaymentInterface) Get() *SalesDataOrderPaymentInterface {
	return v.value
}

func (v *NullableSalesDataOrderPaymentInterface) Set(val *SalesDataOrderPaymentInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataOrderPaymentInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataOrderPaymentInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataOrderPaymentInterface(val *SalesDataOrderPaymentInterface) *NullableSalesDataOrderPaymentInterface {
	return &NullableSalesDataOrderPaymentInterface{value: val, isSet: true}
}

func (v NullableSalesDataOrderPaymentInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataOrderPaymentInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
