/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the PayPalBraintreeDataPaymentInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayPalBraintreeDataPaymentInterface{}

// PayPalBraintreeDataPaymentInterface
type PayPalBraintreeDataPaymentInterface struct {
	// The payment method code.
	PaymentMethodCode *string `json:"payment_method_code,omitempty"`
	// The payment method nonce.
	PaymentMethodNonce *string `json:"payment_method_nonce,omitempty"`
	// The device data.
	DeviceData           *string `json:"device_data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PayPalBraintreeDataPaymentInterface PayPalBraintreeDataPaymentInterface

// NewPayPalBraintreeDataPaymentInterface instantiates a new PayPalBraintreeDataPaymentInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayPalBraintreeDataPaymentInterface() *PayPalBraintreeDataPaymentInterface {
	this := PayPalBraintreeDataPaymentInterface{}
	return &this
}

// NewPayPalBraintreeDataPaymentInterfaceWithDefaults instantiates a new PayPalBraintreeDataPaymentInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayPalBraintreeDataPaymentInterfaceWithDefaults() *PayPalBraintreeDataPaymentInterface {
	this := PayPalBraintreeDataPaymentInterface{}
	return &this
}

// GetPaymentMethodCode returns the PaymentMethodCode field value if set, zero value otherwise.
func (o *PayPalBraintreeDataPaymentInterface) GetPaymentMethodCode() string {
	if o == nil || IsNil(o.PaymentMethodCode) {
		var ret string
		return ret
	}
	return *o.PaymentMethodCode
}

// GetPaymentMethodCodeOk returns a tuple with the PaymentMethodCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayPalBraintreeDataPaymentInterface) GetPaymentMethodCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethodCode) {
		return nil, false
	}
	return o.PaymentMethodCode, true
}

// HasPaymentMethodCode returns a boolean if a field has been set.
func (o *PayPalBraintreeDataPaymentInterface) HasPaymentMethodCode() bool {
	if o != nil && !IsNil(o.PaymentMethodCode) {
		return true
	}

	return false
}

// SetPaymentMethodCode gets a reference to the given string and assigns it to the PaymentMethodCode field.
func (o *PayPalBraintreeDataPaymentInterface) SetPaymentMethodCode(v string) {
	o.PaymentMethodCode = &v
}

// GetPaymentMethodNonce returns the PaymentMethodNonce field value if set, zero value otherwise.
func (o *PayPalBraintreeDataPaymentInterface) GetPaymentMethodNonce() string {
	if o == nil || IsNil(o.PaymentMethodNonce) {
		var ret string
		return ret
	}
	return *o.PaymentMethodNonce
}

// GetPaymentMethodNonceOk returns a tuple with the PaymentMethodNonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayPalBraintreeDataPaymentInterface) GetPaymentMethodNonceOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethodNonce) {
		return nil, false
	}
	return o.PaymentMethodNonce, true
}

// HasPaymentMethodNonce returns a boolean if a field has been set.
func (o *PayPalBraintreeDataPaymentInterface) HasPaymentMethodNonce() bool {
	if o != nil && !IsNil(o.PaymentMethodNonce) {
		return true
	}

	return false
}

// SetPaymentMethodNonce gets a reference to the given string and assigns it to the PaymentMethodNonce field.
func (o *PayPalBraintreeDataPaymentInterface) SetPaymentMethodNonce(v string) {
	o.PaymentMethodNonce = &v
}

// GetDeviceData returns the DeviceData field value if set, zero value otherwise.
func (o *PayPalBraintreeDataPaymentInterface) GetDeviceData() string {
	if o == nil || IsNil(o.DeviceData) {
		var ret string
		return ret
	}
	return *o.DeviceData
}

// GetDeviceDataOk returns a tuple with the DeviceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayPalBraintreeDataPaymentInterface) GetDeviceDataOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceData) {
		return nil, false
	}
	return o.DeviceData, true
}

// HasDeviceData returns a boolean if a field has been set.
func (o *PayPalBraintreeDataPaymentInterface) HasDeviceData() bool {
	if o != nil && !IsNil(o.DeviceData) {
		return true
	}

	return false
}

// SetDeviceData gets a reference to the given string and assigns it to the DeviceData field.
func (o *PayPalBraintreeDataPaymentInterface) SetDeviceData(v string) {
	o.DeviceData = &v
}

func (o PayPalBraintreeDataPaymentInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayPalBraintreeDataPaymentInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentMethodCode) {
		toSerialize["payment_method_code"] = o.PaymentMethodCode
	}
	if !IsNil(o.PaymentMethodNonce) {
		toSerialize["payment_method_nonce"] = o.PaymentMethodNonce
	}
	if !IsNil(o.DeviceData) {
		toSerialize["device_data"] = o.DeviceData
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PayPalBraintreeDataPaymentInterface) UnmarshalJSON(data []byte) (err error) {
	varPayPalBraintreeDataPaymentInterface := _PayPalBraintreeDataPaymentInterface{}

	err = json.Unmarshal(data, &varPayPalBraintreeDataPaymentInterface)

	if err != nil {
		return err
	}

	*o = PayPalBraintreeDataPaymentInterface(varPayPalBraintreeDataPaymentInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "payment_method_code")
		delete(additionalProperties, "payment_method_nonce")
		delete(additionalProperties, "device_data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PayPalBraintreeDataPaymentInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PayPalBraintreeDataPaymentInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePayPalBraintreeDataPaymentInterface struct {
	value *PayPalBraintreeDataPaymentInterface
	isSet bool
}

func (v NullablePayPalBraintreeDataPaymentInterface) Get() *PayPalBraintreeDataPaymentInterface {
	return v.value
}

func (v *NullablePayPalBraintreeDataPaymentInterface) Set(val *PayPalBraintreeDataPaymentInterface) {
	v.value = val
	v.isSet = true
}

func (v NullablePayPalBraintreeDataPaymentInterface) IsSet() bool {
	return v.isSet
}

func (v *NullablePayPalBraintreeDataPaymentInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayPalBraintreeDataPaymentInterface(val *PayPalBraintreeDataPaymentInterface) *NullablePayPalBraintreeDataPaymentInterface {
	return &NullablePayPalBraintreeDataPaymentInterface{value: val, isSet: true}
}

func (v NullablePayPalBraintreeDataPaymentInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayPalBraintreeDataPaymentInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
