/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the QuoteDataAddressInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataAddressInterface{}

// QuoteDataAddressInterface Interface AddressInterface
type QuoteDataAddressInterface struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Region name
	Region string `json:"region"`
	// Region id
	RegionId int32 `json:"region_id"`
	// Region code
	RegionCode string `json:"region_code"`
	// Country id
	CountryId string `json:"country_id"`
	// Street
	Street []string `json:"street"`
	// Company
	Company *string `json:"company,omitempty"`
	// Telephone number
	Telephone string `json:"telephone"`
	// Fax number
	Fax *string `json:"fax,omitempty"`
	// Postcode
	Postcode string `json:"postcode"`
	// City name
	City string `json:"city"`
	// First name
	Firstname string `json:"firstname"`
	// Last name
	Lastname string `json:"lastname"`
	// Middle name
	Middlename *string `json:"middlename,omitempty"`
	// Prefix
	Prefix *string `json:"prefix,omitempty"`
	// Suffix
	Suffix *string `json:"suffix,omitempty"`
	// Vat id
	VatId *string `json:"vat_id,omitempty"`
	// Customer id
	CustomerId *int32 `json:"customer_id,omitempty"`
	// Billing/shipping email
	Email string `json:"email"`
	// Same as billing flag
	SameAsBilling *int32 `json:"same_as_billing,omitempty"`
	// Customer address id
	CustomerAddressId *int32 `json:"customer_address_id,omitempty"`
	// Save in address book flag
	SaveInAddressBook   *int32                              `json:"save_in_address_book,omitempty"`
	ExtensionAttributes *QuoteDataAddressExtensionInterface `json:"extension_attributes,omitempty"`
	// Custom attributes values.
	CustomAttributes     []FrameworkAttributeInterface `json:"custom_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuoteDataAddressInterface QuoteDataAddressInterface

// NewQuoteDataAddressInterface instantiates a new QuoteDataAddressInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataAddressInterface(region string, regionId int32, regionCode string, countryId string, street []string, telephone string, postcode string, city string, firstname string, lastname string, email string) *QuoteDataAddressInterface {
	this := QuoteDataAddressInterface{}
	this.Region = region
	this.RegionId = regionId
	this.RegionCode = regionCode
	this.CountryId = countryId
	this.Street = street
	this.Telephone = telephone
	this.Postcode = postcode
	this.City = city
	this.Firstname = firstname
	this.Lastname = lastname
	this.Email = email
	return &this
}

// NewQuoteDataAddressInterfaceWithDefaults instantiates a new QuoteDataAddressInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataAddressInterfaceWithDefaults() *QuoteDataAddressInterface {
	this := QuoteDataAddressInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *QuoteDataAddressInterface) SetId(v int32) {
	o.Id = &v
}

// GetRegion returns the Region field value
func (o *QuoteDataAddressInterface) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *QuoteDataAddressInterface) SetRegion(v string) {
	o.Region = v
}

// GetRegionId returns the RegionId field value
func (o *QuoteDataAddressInterface) GetRegionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetRegionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionId, true
}

// SetRegionId sets field value
func (o *QuoteDataAddressInterface) SetRegionId(v int32) {
	o.RegionId = v
}

// GetRegionCode returns the RegionCode field value
func (o *QuoteDataAddressInterface) GetRegionCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetRegionCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionCode, true
}

// SetRegionCode sets field value
func (o *QuoteDataAddressInterface) SetRegionCode(v string) {
	o.RegionCode = v
}

// GetCountryId returns the CountryId field value
func (o *QuoteDataAddressInterface) GetCountryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetCountryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryId, true
}

// SetCountryId sets field value
func (o *QuoteDataAddressInterface) SetCountryId(v string) {
	o.CountryId = v
}

// GetStreet returns the Street field value
func (o *QuoteDataAddressInterface) GetStreet() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Street
}

// GetStreetOk returns a tuple with the Street field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetStreetOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Street, true
}

// SetStreet sets field value
func (o *QuoteDataAddressInterface) SetStreet(v []string) {
	o.Street = v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *QuoteDataAddressInterface) SetCompany(v string) {
	o.Company = &v
}

// GetTelephone returns the Telephone field value
func (o *QuoteDataAddressInterface) GetTelephone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetTelephoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Telephone, true
}

// SetTelephone sets field value
func (o *QuoteDataAddressInterface) SetTelephone(v string) {
	o.Telephone = v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *QuoteDataAddressInterface) SetFax(v string) {
	o.Fax = &v
}

// GetPostcode returns the Postcode field value
func (o *QuoteDataAddressInterface) GetPostcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetPostcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Postcode, true
}

// SetPostcode sets field value
func (o *QuoteDataAddressInterface) SetPostcode(v string) {
	o.Postcode = v
}

// GetCity returns the City field value
func (o *QuoteDataAddressInterface) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *QuoteDataAddressInterface) SetCity(v string) {
	o.City = v
}

// GetFirstname returns the Firstname field value
func (o *QuoteDataAddressInterface) GetFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetFirstnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Firstname, true
}

// SetFirstname sets field value
func (o *QuoteDataAddressInterface) SetFirstname(v string) {
	o.Firstname = v
}

// GetLastname returns the Lastname field value
func (o *QuoteDataAddressInterface) GetLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetLastnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lastname, true
}

// SetLastname sets field value
func (o *QuoteDataAddressInterface) SetLastname(v string) {
	o.Lastname = v
}

// GetMiddlename returns the Middlename field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetMiddlename() string {
	if o == nil || IsNil(o.Middlename) {
		var ret string
		return ret
	}
	return *o.Middlename
}

// GetMiddlenameOk returns a tuple with the Middlename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetMiddlenameOk() (*string, bool) {
	if o == nil || IsNil(o.Middlename) {
		return nil, false
	}
	return o.Middlename, true
}

// HasMiddlename returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasMiddlename() bool {
	if o != nil && !IsNil(o.Middlename) {
		return true
	}

	return false
}

// SetMiddlename gets a reference to the given string and assigns it to the Middlename field.
func (o *QuoteDataAddressInterface) SetMiddlename(v string) {
	o.Middlename = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *QuoteDataAddressInterface) SetPrefix(v string) {
	o.Prefix = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetSuffix() string {
	if o == nil || IsNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Suffix) {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasSuffix() bool {
	if o != nil && !IsNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *QuoteDataAddressInterface) SetSuffix(v string) {
	o.Suffix = &v
}

// GetVatId returns the VatId field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetVatId() string {
	if o == nil || IsNil(o.VatId) {
		var ret string
		return ret
	}
	return *o.VatId
}

// GetVatIdOk returns a tuple with the VatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetVatIdOk() (*string, bool) {
	if o == nil || IsNil(o.VatId) {
		return nil, false
	}
	return o.VatId, true
}

// HasVatId returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasVatId() bool {
	if o != nil && !IsNil(o.VatId) {
		return true
	}

	return false
}

// SetVatId gets a reference to the given string and assigns it to the VatId field.
func (o *QuoteDataAddressInterface) SetVatId(v string) {
	o.VatId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *QuoteDataAddressInterface) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetEmail returns the Email field value
func (o *QuoteDataAddressInterface) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *QuoteDataAddressInterface) SetEmail(v string) {
	o.Email = v
}

// GetSameAsBilling returns the SameAsBilling field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetSameAsBilling() int32 {
	if o == nil || IsNil(o.SameAsBilling) {
		var ret int32
		return ret
	}
	return *o.SameAsBilling
}

// GetSameAsBillingOk returns a tuple with the SameAsBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetSameAsBillingOk() (*int32, bool) {
	if o == nil || IsNil(o.SameAsBilling) {
		return nil, false
	}
	return o.SameAsBilling, true
}

// HasSameAsBilling returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasSameAsBilling() bool {
	if o != nil && !IsNil(o.SameAsBilling) {
		return true
	}

	return false
}

// SetSameAsBilling gets a reference to the given int32 and assigns it to the SameAsBilling field.
func (o *QuoteDataAddressInterface) SetSameAsBilling(v int32) {
	o.SameAsBilling = &v
}

// GetCustomerAddressId returns the CustomerAddressId field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetCustomerAddressId() int32 {
	if o == nil || IsNil(o.CustomerAddressId) {
		var ret int32
		return ret
	}
	return *o.CustomerAddressId
}

// GetCustomerAddressIdOk returns a tuple with the CustomerAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetCustomerAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerAddressId) {
		return nil, false
	}
	return o.CustomerAddressId, true
}

// HasCustomerAddressId returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasCustomerAddressId() bool {
	if o != nil && !IsNil(o.CustomerAddressId) {
		return true
	}

	return false
}

// SetCustomerAddressId gets a reference to the given int32 and assigns it to the CustomerAddressId field.
func (o *QuoteDataAddressInterface) SetCustomerAddressId(v int32) {
	o.CustomerAddressId = &v
}

// GetSaveInAddressBook returns the SaveInAddressBook field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetSaveInAddressBook() int32 {
	if o == nil || IsNil(o.SaveInAddressBook) {
		var ret int32
		return ret
	}
	return *o.SaveInAddressBook
}

// GetSaveInAddressBookOk returns a tuple with the SaveInAddressBook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetSaveInAddressBookOk() (*int32, bool) {
	if o == nil || IsNil(o.SaveInAddressBook) {
		return nil, false
	}
	return o.SaveInAddressBook, true
}

// HasSaveInAddressBook returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasSaveInAddressBook() bool {
	if o != nil && !IsNil(o.SaveInAddressBook) {
		return true
	}

	return false
}

// SetSaveInAddressBook gets a reference to the given int32 and assigns it to the SaveInAddressBook field.
func (o *QuoteDataAddressInterface) SetSaveInAddressBook(v int32) {
	o.SaveInAddressBook = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetExtensionAttributes() QuoteDataAddressExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret QuoteDataAddressExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetExtensionAttributesOk() (*QuoteDataAddressExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given QuoteDataAddressExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *QuoteDataAddressInterface) SetExtensionAttributes(v QuoteDataAddressExtensionInterface) {
	o.ExtensionAttributes = &v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *QuoteDataAddressInterface) GetCustomAttributes() []FrameworkAttributeInterface {
	if o == nil || IsNil(o.CustomAttributes) {
		var ret []FrameworkAttributeInterface
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressInterface) GetCustomAttributesOk() ([]FrameworkAttributeInterface, bool) {
	if o == nil || IsNil(o.CustomAttributes) {
		return nil, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *QuoteDataAddressInterface) HasCustomAttributes() bool {
	if o != nil && !IsNil(o.CustomAttributes) {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given []FrameworkAttributeInterface and assigns it to the CustomAttributes field.
func (o *QuoteDataAddressInterface) SetCustomAttributes(v []FrameworkAttributeInterface) {
	o.CustomAttributes = v
}

func (o QuoteDataAddressInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataAddressInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["region"] = o.Region
	toSerialize["region_id"] = o.RegionId
	toSerialize["region_code"] = o.RegionCode
	toSerialize["country_id"] = o.CountryId
	toSerialize["street"] = o.Street
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	toSerialize["telephone"] = o.Telephone
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	toSerialize["postcode"] = o.Postcode
	toSerialize["city"] = o.City
	toSerialize["firstname"] = o.Firstname
	toSerialize["lastname"] = o.Lastname
	if !IsNil(o.Middlename) {
		toSerialize["middlename"] = o.Middlename
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !IsNil(o.VatId) {
		toSerialize["vat_id"] = o.VatId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.SameAsBilling) {
		toSerialize["same_as_billing"] = o.SameAsBilling
	}
	if !IsNil(o.CustomerAddressId) {
		toSerialize["customer_address_id"] = o.CustomerAddressId
	}
	if !IsNil(o.SaveInAddressBook) {
		toSerialize["save_in_address_book"] = o.SaveInAddressBook
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.CustomAttributes) {
		toSerialize["custom_attributes"] = o.CustomAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataAddressInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"region",
		"region_id",
		"region_code",
		"country_id",
		"street",
		"telephone",
		"postcode",
		"city",
		"firstname",
		"lastname",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteDataAddressInterface := _QuoteDataAddressInterface{}

	err = json.Unmarshal(data, &varQuoteDataAddressInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataAddressInterface(varQuoteDataAddressInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "region")
		delete(additionalProperties, "region_id")
		delete(additionalProperties, "region_code")
		delete(additionalProperties, "country_id")
		delete(additionalProperties, "street")
		delete(additionalProperties, "company")
		delete(additionalProperties, "telephone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "postcode")
		delete(additionalProperties, "city")
		delete(additionalProperties, "firstname")
		delete(additionalProperties, "lastname")
		delete(additionalProperties, "middlename")
		delete(additionalProperties, "prefix")
		delete(additionalProperties, "suffix")
		delete(additionalProperties, "vat_id")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "email")
		delete(additionalProperties, "same_as_billing")
		delete(additionalProperties, "customer_address_id")
		delete(additionalProperties, "save_in_address_book")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "custom_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataAddressInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataAddressInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataAddressInterface struct {
	value *QuoteDataAddressInterface
	isSet bool
}

func (v NullableQuoteDataAddressInterface) Get() *QuoteDataAddressInterface {
	return v.value
}

func (v *NullableQuoteDataAddressInterface) Set(val *QuoteDataAddressInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataAddressInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataAddressInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataAddressInterface(val *QuoteDataAddressInterface) *NullableQuoteDataAddressInterface {
	return &NullableQuoteDataAddressInterface{value: val, isSet: true}
}

func (v NullableQuoteDataAddressInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataAddressInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
