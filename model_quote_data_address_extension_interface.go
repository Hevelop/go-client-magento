/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the QuoteDataAddressExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataAddressExtensionInterface{}

// QuoteDataAddressExtensionInterface ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface
type QuoteDataAddressExtensionInterface struct {
	Discounts            []SalesRuleDataRuleDiscountInterface `json:"discounts,omitempty"`
	GiftRegistryId       *int32                               `json:"gift_registry_id,omitempty"`
	PickupLocationCode   *string                              `json:"pickup_location_code,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuoteDataAddressExtensionInterface QuoteDataAddressExtensionInterface

// NewQuoteDataAddressExtensionInterface instantiates a new QuoteDataAddressExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataAddressExtensionInterface() *QuoteDataAddressExtensionInterface {
	this := QuoteDataAddressExtensionInterface{}
	return &this
}

// NewQuoteDataAddressExtensionInterfaceWithDefaults instantiates a new QuoteDataAddressExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataAddressExtensionInterfaceWithDefaults() *QuoteDataAddressExtensionInterface {
	this := QuoteDataAddressExtensionInterface{}
	return &this
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *QuoteDataAddressExtensionInterface) GetDiscounts() []SalesRuleDataRuleDiscountInterface {
	if o == nil || IsNil(o.Discounts) {
		var ret []SalesRuleDataRuleDiscountInterface
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressExtensionInterface) GetDiscountsOk() ([]SalesRuleDataRuleDiscountInterface, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *QuoteDataAddressExtensionInterface) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []SalesRuleDataRuleDiscountInterface and assigns it to the Discounts field.
func (o *QuoteDataAddressExtensionInterface) SetDiscounts(v []SalesRuleDataRuleDiscountInterface) {
	o.Discounts = v
}

// GetGiftRegistryId returns the GiftRegistryId field value if set, zero value otherwise.
func (o *QuoteDataAddressExtensionInterface) GetGiftRegistryId() int32 {
	if o == nil || IsNil(o.GiftRegistryId) {
		var ret int32
		return ret
	}
	return *o.GiftRegistryId
}

// GetGiftRegistryIdOk returns a tuple with the GiftRegistryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressExtensionInterface) GetGiftRegistryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GiftRegistryId) {
		return nil, false
	}
	return o.GiftRegistryId, true
}

// HasGiftRegistryId returns a boolean if a field has been set.
func (o *QuoteDataAddressExtensionInterface) HasGiftRegistryId() bool {
	if o != nil && !IsNil(o.GiftRegistryId) {
		return true
	}

	return false
}

// SetGiftRegistryId gets a reference to the given int32 and assigns it to the GiftRegistryId field.
func (o *QuoteDataAddressExtensionInterface) SetGiftRegistryId(v int32) {
	o.GiftRegistryId = &v
}

// GetPickupLocationCode returns the PickupLocationCode field value if set, zero value otherwise.
func (o *QuoteDataAddressExtensionInterface) GetPickupLocationCode() string {
	if o == nil || IsNil(o.PickupLocationCode) {
		var ret string
		return ret
	}
	return *o.PickupLocationCode
}

// GetPickupLocationCodeOk returns a tuple with the PickupLocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataAddressExtensionInterface) GetPickupLocationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PickupLocationCode) {
		return nil, false
	}
	return o.PickupLocationCode, true
}

// HasPickupLocationCode returns a boolean if a field has been set.
func (o *QuoteDataAddressExtensionInterface) HasPickupLocationCode() bool {
	if o != nil && !IsNil(o.PickupLocationCode) {
		return true
	}

	return false
}

// SetPickupLocationCode gets a reference to the given string and assigns it to the PickupLocationCode field.
func (o *QuoteDataAddressExtensionInterface) SetPickupLocationCode(v string) {
	o.PickupLocationCode = &v
}

func (o QuoteDataAddressExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataAddressExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	if !IsNil(o.GiftRegistryId) {
		toSerialize["gift_registry_id"] = o.GiftRegistryId
	}
	if !IsNil(o.PickupLocationCode) {
		toSerialize["pickup_location_code"] = o.PickupLocationCode
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataAddressExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varQuoteDataAddressExtensionInterface := _QuoteDataAddressExtensionInterface{}

	err = json.Unmarshal(data, &varQuoteDataAddressExtensionInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataAddressExtensionInterface(varQuoteDataAddressExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "discounts")
		delete(additionalProperties, "gift_registry_id")
		delete(additionalProperties, "pickup_location_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataAddressExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataAddressExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataAddressExtensionInterface struct {
	value *QuoteDataAddressExtensionInterface
	isSet bool
}

func (v NullableQuoteDataAddressExtensionInterface) Get() *QuoteDataAddressExtensionInterface {
	return v.value
}

func (v *NullableQuoteDataAddressExtensionInterface) Set(val *QuoteDataAddressExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataAddressExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataAddressExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataAddressExtensionInterface(val *QuoteDataAddressExtensionInterface) *NullableQuoteDataAddressExtensionInterface {
	return &NullableQuoteDataAddressExtensionInterface{value: val, isSet: true}
}

func (v NullableQuoteDataAddressExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataAddressExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
