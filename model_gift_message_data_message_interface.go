/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the GiftMessageDataMessageInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GiftMessageDataMessageInterface{}

// GiftMessageDataMessageInterface Interface MessageInterface
type GiftMessageDataMessageInterface struct {
	// Gift message ID. Otherwise, null.
	GiftMessageId *int32 `json:"gift_message_id,omitempty"`
	// Customer ID. Otherwise, null.
	CustomerId *int32 `json:"customer_id,omitempty"`
	// Sender name.
	Sender string `json:"sender"`
	// Recipient name.
	Recipient string `json:"recipient"`
	// Message text.
	Message              string                                    `json:"message"`
	ExtensionAttributes  *GiftMessageDataMessageExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GiftMessageDataMessageInterface GiftMessageDataMessageInterface

// NewGiftMessageDataMessageInterface instantiates a new GiftMessageDataMessageInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftMessageDataMessageInterface(sender string, recipient string, message string) *GiftMessageDataMessageInterface {
	this := GiftMessageDataMessageInterface{}
	this.Sender = sender
	this.Recipient = recipient
	this.Message = message
	return &this
}

// NewGiftMessageDataMessageInterfaceWithDefaults instantiates a new GiftMessageDataMessageInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftMessageDataMessageInterfaceWithDefaults() *GiftMessageDataMessageInterface {
	this := GiftMessageDataMessageInterface{}
	return &this
}

// GetGiftMessageId returns the GiftMessageId field value if set, zero value otherwise.
func (o *GiftMessageDataMessageInterface) GetGiftMessageId() int32 {
	if o == nil || IsNil(o.GiftMessageId) {
		var ret int32
		return ret
	}
	return *o.GiftMessageId
}

// GetGiftMessageIdOk returns a tuple with the GiftMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftMessageDataMessageInterface) GetGiftMessageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GiftMessageId) {
		return nil, false
	}
	return o.GiftMessageId, true
}

// HasGiftMessageId returns a boolean if a field has been set.
func (o *GiftMessageDataMessageInterface) HasGiftMessageId() bool {
	if o != nil && !IsNil(o.GiftMessageId) {
		return true
	}

	return false
}

// SetGiftMessageId gets a reference to the given int32 and assigns it to the GiftMessageId field.
func (o *GiftMessageDataMessageInterface) SetGiftMessageId(v int32) {
	o.GiftMessageId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *GiftMessageDataMessageInterface) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftMessageDataMessageInterface) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *GiftMessageDataMessageInterface) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *GiftMessageDataMessageInterface) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetSender returns the Sender field value
func (o *GiftMessageDataMessageInterface) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *GiftMessageDataMessageInterface) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *GiftMessageDataMessageInterface) SetSender(v string) {
	o.Sender = v
}

// GetRecipient returns the Recipient field value
func (o *GiftMessageDataMessageInterface) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *GiftMessageDataMessageInterface) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *GiftMessageDataMessageInterface) SetRecipient(v string) {
	o.Recipient = v
}

// GetMessage returns the Message field value
func (o *GiftMessageDataMessageInterface) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *GiftMessageDataMessageInterface) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *GiftMessageDataMessageInterface) SetMessage(v string) {
	o.Message = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *GiftMessageDataMessageInterface) GetExtensionAttributes() GiftMessageDataMessageExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret GiftMessageDataMessageExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftMessageDataMessageInterface) GetExtensionAttributesOk() (*GiftMessageDataMessageExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *GiftMessageDataMessageInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given GiftMessageDataMessageExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *GiftMessageDataMessageInterface) SetExtensionAttributes(v GiftMessageDataMessageExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o GiftMessageDataMessageInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GiftMessageDataMessageInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GiftMessageId) {
		toSerialize["gift_message_id"] = o.GiftMessageId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	toSerialize["sender"] = o.Sender
	toSerialize["recipient"] = o.Recipient
	toSerialize["message"] = o.Message
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GiftMessageDataMessageInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sender",
		"recipient",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGiftMessageDataMessageInterface := _GiftMessageDataMessageInterface{}

	err = json.Unmarshal(data, &varGiftMessageDataMessageInterface)

	if err != nil {
		return err
	}

	*o = GiftMessageDataMessageInterface(varGiftMessageDataMessageInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "gift_message_id")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "sender")
		delete(additionalProperties, "recipient")
		delete(additionalProperties, "message")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *GiftMessageDataMessageInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *GiftMessageDataMessageInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableGiftMessageDataMessageInterface struct {
	value *GiftMessageDataMessageInterface
	isSet bool
}

func (v NullableGiftMessageDataMessageInterface) Get() *GiftMessageDataMessageInterface {
	return v.value
}

func (v *NullableGiftMessageDataMessageInterface) Set(val *GiftMessageDataMessageInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftMessageDataMessageInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftMessageDataMessageInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftMessageDataMessageInterface(val *GiftMessageDataMessageInterface) *NullableGiftMessageDataMessageInterface {
	return &NullableGiftMessageDataMessageInterface{value: val, isSet: true}
}

func (v NullableGiftMessageDataMessageInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftMessageDataMessageInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
