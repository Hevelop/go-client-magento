/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the QuoteDataTotalsItemExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataTotalsItemExtensionInterface{}

// QuoteDataTotalsItemExtensionInterface ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface
type QuoteDataTotalsItemExtensionInterface struct {
	NegotiableQuoteItemTotals *NegotiableQuoteDataNegotiableQuoteItemTotalsInterface `json:"negotiable_quote_item_totals,omitempty"`
	AdditionalProperties      map[string]interface{}
}

type _QuoteDataTotalsItemExtensionInterface QuoteDataTotalsItemExtensionInterface

// NewQuoteDataTotalsItemExtensionInterface instantiates a new QuoteDataTotalsItemExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataTotalsItemExtensionInterface() *QuoteDataTotalsItemExtensionInterface {
	this := QuoteDataTotalsItemExtensionInterface{}
	return &this
}

// NewQuoteDataTotalsItemExtensionInterfaceWithDefaults instantiates a new QuoteDataTotalsItemExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataTotalsItemExtensionInterfaceWithDefaults() *QuoteDataTotalsItemExtensionInterface {
	this := QuoteDataTotalsItemExtensionInterface{}
	return &this
}

// GetNegotiableQuoteItemTotals returns the NegotiableQuoteItemTotals field value if set, zero value otherwise.
func (o *QuoteDataTotalsItemExtensionInterface) GetNegotiableQuoteItemTotals() NegotiableQuoteDataNegotiableQuoteItemTotalsInterface {
	if o == nil || IsNil(o.NegotiableQuoteItemTotals) {
		var ret NegotiableQuoteDataNegotiableQuoteItemTotalsInterface
		return ret
	}
	return *o.NegotiableQuoteItemTotals
}

// GetNegotiableQuoteItemTotalsOk returns a tuple with the NegotiableQuoteItemTotals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataTotalsItemExtensionInterface) GetNegotiableQuoteItemTotalsOk() (*NegotiableQuoteDataNegotiableQuoteItemTotalsInterface, bool) {
	if o == nil || IsNil(o.NegotiableQuoteItemTotals) {
		return nil, false
	}
	return o.NegotiableQuoteItemTotals, true
}

// HasNegotiableQuoteItemTotals returns a boolean if a field has been set.
func (o *QuoteDataTotalsItemExtensionInterface) HasNegotiableQuoteItemTotals() bool {
	if o != nil && !IsNil(o.NegotiableQuoteItemTotals) {
		return true
	}

	return false
}

// SetNegotiableQuoteItemTotals gets a reference to the given NegotiableQuoteDataNegotiableQuoteItemTotalsInterface and assigns it to the NegotiableQuoteItemTotals field.
func (o *QuoteDataTotalsItemExtensionInterface) SetNegotiableQuoteItemTotals(v NegotiableQuoteDataNegotiableQuoteItemTotalsInterface) {
	o.NegotiableQuoteItemTotals = &v
}

func (o QuoteDataTotalsItemExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataTotalsItemExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NegotiableQuoteItemTotals) {
		toSerialize["negotiable_quote_item_totals"] = o.NegotiableQuoteItemTotals
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataTotalsItemExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varQuoteDataTotalsItemExtensionInterface := _QuoteDataTotalsItemExtensionInterface{}

	err = json.Unmarshal(data, &varQuoteDataTotalsItemExtensionInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataTotalsItemExtensionInterface(varQuoteDataTotalsItemExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "negotiable_quote_item_totals")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataTotalsItemExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataTotalsItemExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataTotalsItemExtensionInterface struct {
	value *QuoteDataTotalsItemExtensionInterface
	isSet bool
}

func (v NullableQuoteDataTotalsItemExtensionInterface) Get() *QuoteDataTotalsItemExtensionInterface {
	return v.value
}

func (v *NullableQuoteDataTotalsItemExtensionInterface) Set(val *QuoteDataTotalsItemExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataTotalsItemExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataTotalsItemExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataTotalsItemExtensionInterface(val *QuoteDataTotalsItemExtensionInterface) *NullableQuoteDataTotalsItemExtensionInterface {
	return &NullableQuoteDataTotalsItemExtensionInterface{value: val, isSet: true}
}

func (v NullableQuoteDataTotalsItemExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataTotalsItemExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
