/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the FrameworkSearchSearchCriteriaInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FrameworkSearchSearchCriteriaInterface{}

// FrameworkSearchSearchCriteriaInterface Interface SearchCriteriaInterface
type FrameworkSearchSearchCriteriaInterface struct {
	RequestName string `json:"request_name"`
	// A list of filter groups.
	FilterGroups []FrameworkSearchFilterGroup `json:"filter_groups"`
	// Sort order.
	SortOrders []FrameworkSortOrder `json:"sort_orders,omitempty"`
	// Page size.
	PageSize *int32 `json:"page_size,omitempty"`
	// Current page.
	CurrentPage          *int32 `json:"current_page,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FrameworkSearchSearchCriteriaInterface FrameworkSearchSearchCriteriaInterface

// NewFrameworkSearchSearchCriteriaInterface instantiates a new FrameworkSearchSearchCriteriaInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFrameworkSearchSearchCriteriaInterface(requestName string, filterGroups []FrameworkSearchFilterGroup) *FrameworkSearchSearchCriteriaInterface {
	this := FrameworkSearchSearchCriteriaInterface{}
	this.RequestName = requestName
	this.FilterGroups = filterGroups
	return &this
}

// NewFrameworkSearchSearchCriteriaInterfaceWithDefaults instantiates a new FrameworkSearchSearchCriteriaInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFrameworkSearchSearchCriteriaInterfaceWithDefaults() *FrameworkSearchSearchCriteriaInterface {
	this := FrameworkSearchSearchCriteriaInterface{}
	return &this
}

// GetRequestName returns the RequestName field value
func (o *FrameworkSearchSearchCriteriaInterface) GetRequestName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestName
}

// GetRequestNameOk returns a tuple with the RequestName field value
// and a boolean to check if the value has been set.
func (o *FrameworkSearchSearchCriteriaInterface) GetRequestNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestName, true
}

// SetRequestName sets field value
func (o *FrameworkSearchSearchCriteriaInterface) SetRequestName(v string) {
	o.RequestName = v
}

// GetFilterGroups returns the FilterGroups field value
func (o *FrameworkSearchSearchCriteriaInterface) GetFilterGroups() []FrameworkSearchFilterGroup {
	if o == nil {
		var ret []FrameworkSearchFilterGroup
		return ret
	}

	return o.FilterGroups
}

// GetFilterGroupsOk returns a tuple with the FilterGroups field value
// and a boolean to check if the value has been set.
func (o *FrameworkSearchSearchCriteriaInterface) GetFilterGroupsOk() ([]FrameworkSearchFilterGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilterGroups, true
}

// SetFilterGroups sets field value
func (o *FrameworkSearchSearchCriteriaInterface) SetFilterGroups(v []FrameworkSearchFilterGroup) {
	o.FilterGroups = v
}

// GetSortOrders returns the SortOrders field value if set, zero value otherwise.
func (o *FrameworkSearchSearchCriteriaInterface) GetSortOrders() []FrameworkSortOrder {
	if o == nil || IsNil(o.SortOrders) {
		var ret []FrameworkSortOrder
		return ret
	}
	return o.SortOrders
}

// GetSortOrdersOk returns a tuple with the SortOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkSearchSearchCriteriaInterface) GetSortOrdersOk() ([]FrameworkSortOrder, bool) {
	if o == nil || IsNil(o.SortOrders) {
		return nil, false
	}
	return o.SortOrders, true
}

// HasSortOrders returns a boolean if a field has been set.
func (o *FrameworkSearchSearchCriteriaInterface) HasSortOrders() bool {
	if o != nil && !IsNil(o.SortOrders) {
		return true
	}

	return false
}

// SetSortOrders gets a reference to the given []FrameworkSortOrder and assigns it to the SortOrders field.
func (o *FrameworkSearchSearchCriteriaInterface) SetSortOrders(v []FrameworkSortOrder) {
	o.SortOrders = v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *FrameworkSearchSearchCriteriaInterface) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkSearchSearchCriteriaInterface) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *FrameworkSearchSearchCriteriaInterface) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *FrameworkSearchSearchCriteriaInterface) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *FrameworkSearchSearchCriteriaInterface) GetCurrentPage() int32 {
	if o == nil || IsNil(o.CurrentPage) {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FrameworkSearchSearchCriteriaInterface) GetCurrentPageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPage) {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *FrameworkSearchSearchCriteriaInterface) HasCurrentPage() bool {
	if o != nil && !IsNil(o.CurrentPage) {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *FrameworkSearchSearchCriteriaInterface) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

func (o FrameworkSearchSearchCriteriaInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FrameworkSearchSearchCriteriaInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_name"] = o.RequestName
	toSerialize["filter_groups"] = o.FilterGroups
	if !IsNil(o.SortOrders) {
		toSerialize["sort_orders"] = o.SortOrders
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.CurrentPage) {
		toSerialize["current_page"] = o.CurrentPage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FrameworkSearchSearchCriteriaInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"request_name",
		"filter_groups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFrameworkSearchSearchCriteriaInterface := _FrameworkSearchSearchCriteriaInterface{}

	err = json.Unmarshal(data, &varFrameworkSearchSearchCriteriaInterface)

	if err != nil {
		return err
	}

	*o = FrameworkSearchSearchCriteriaInterface(varFrameworkSearchSearchCriteriaInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "request_name")
		delete(additionalProperties, "filter_groups")
		delete(additionalProperties, "sort_orders")
		delete(additionalProperties, "page_size")
		delete(additionalProperties, "current_page")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *FrameworkSearchSearchCriteriaInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *FrameworkSearchSearchCriteriaInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableFrameworkSearchSearchCriteriaInterface struct {
	value *FrameworkSearchSearchCriteriaInterface
	isSet bool
}

func (v NullableFrameworkSearchSearchCriteriaInterface) Get() *FrameworkSearchSearchCriteriaInterface {
	return v.value
}

func (v *NullableFrameworkSearchSearchCriteriaInterface) Set(val *FrameworkSearchSearchCriteriaInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableFrameworkSearchSearchCriteriaInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableFrameworkSearchSearchCriteriaInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFrameworkSearchSearchCriteriaInterface(val *FrameworkSearchSearchCriteriaInterface) *NullableFrameworkSearchSearchCriteriaInterface {
	return &NullableFrameworkSearchSearchCriteriaInterface{value: val, isSet: true}
}

func (v NullableFrameworkSearchSearchCriteriaInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFrameworkSearchSearchCriteriaInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
