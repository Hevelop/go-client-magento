/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the CatalogDataProductTierPriceExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogDataProductTierPriceExtensionInterface{}

// CatalogDataProductTierPriceExtensionInterface ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTierPriceInterface
type CatalogDataProductTierPriceExtensionInterface struct {
	PercentageValue      *float32 `json:"percentage_value,omitempty"`
	WebsiteId            *int32   `json:"website_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CatalogDataProductTierPriceExtensionInterface CatalogDataProductTierPriceExtensionInterface

// NewCatalogDataProductTierPriceExtensionInterface instantiates a new CatalogDataProductTierPriceExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogDataProductTierPriceExtensionInterface() *CatalogDataProductTierPriceExtensionInterface {
	this := CatalogDataProductTierPriceExtensionInterface{}
	return &this
}

// NewCatalogDataProductTierPriceExtensionInterfaceWithDefaults instantiates a new CatalogDataProductTierPriceExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogDataProductTierPriceExtensionInterfaceWithDefaults() *CatalogDataProductTierPriceExtensionInterface {
	this := CatalogDataProductTierPriceExtensionInterface{}
	return &this
}

// GetPercentageValue returns the PercentageValue field value if set, zero value otherwise.
func (o *CatalogDataProductTierPriceExtensionInterface) GetPercentageValue() float32 {
	if o == nil || IsNil(o.PercentageValue) {
		var ret float32
		return ret
	}
	return *o.PercentageValue
}

// GetPercentageValueOk returns a tuple with the PercentageValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductTierPriceExtensionInterface) GetPercentageValueOk() (*float32, bool) {
	if o == nil || IsNil(o.PercentageValue) {
		return nil, false
	}
	return o.PercentageValue, true
}

// HasPercentageValue returns a boolean if a field has been set.
func (o *CatalogDataProductTierPriceExtensionInterface) HasPercentageValue() bool {
	if o != nil && !IsNil(o.PercentageValue) {
		return true
	}

	return false
}

// SetPercentageValue gets a reference to the given float32 and assigns it to the PercentageValue field.
func (o *CatalogDataProductTierPriceExtensionInterface) SetPercentageValue(v float32) {
	o.PercentageValue = &v
}

// GetWebsiteId returns the WebsiteId field value if set, zero value otherwise.
func (o *CatalogDataProductTierPriceExtensionInterface) GetWebsiteId() int32 {
	if o == nil || IsNil(o.WebsiteId) {
		var ret int32
		return ret
	}
	return *o.WebsiteId
}

// GetWebsiteIdOk returns a tuple with the WebsiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductTierPriceExtensionInterface) GetWebsiteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.WebsiteId) {
		return nil, false
	}
	return o.WebsiteId, true
}

// HasWebsiteId returns a boolean if a field has been set.
func (o *CatalogDataProductTierPriceExtensionInterface) HasWebsiteId() bool {
	if o != nil && !IsNil(o.WebsiteId) {
		return true
	}

	return false
}

// SetWebsiteId gets a reference to the given int32 and assigns it to the WebsiteId field.
func (o *CatalogDataProductTierPriceExtensionInterface) SetWebsiteId(v int32) {
	o.WebsiteId = &v
}

func (o CatalogDataProductTierPriceExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogDataProductTierPriceExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PercentageValue) {
		toSerialize["percentage_value"] = o.PercentageValue
	}
	if !IsNil(o.WebsiteId) {
		toSerialize["website_id"] = o.WebsiteId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CatalogDataProductTierPriceExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varCatalogDataProductTierPriceExtensionInterface := _CatalogDataProductTierPriceExtensionInterface{}

	err = json.Unmarshal(data, &varCatalogDataProductTierPriceExtensionInterface)

	if err != nil {
		return err
	}

	*o = CatalogDataProductTierPriceExtensionInterface(varCatalogDataProductTierPriceExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "percentage_value")
		delete(additionalProperties, "website_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CatalogDataProductTierPriceExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CatalogDataProductTierPriceExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCatalogDataProductTierPriceExtensionInterface struct {
	value *CatalogDataProductTierPriceExtensionInterface
	isSet bool
}

func (v NullableCatalogDataProductTierPriceExtensionInterface) Get() *CatalogDataProductTierPriceExtensionInterface {
	return v.value
}

func (v *NullableCatalogDataProductTierPriceExtensionInterface) Set(val *CatalogDataProductTierPriceExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogDataProductTierPriceExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogDataProductTierPriceExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogDataProductTierPriceExtensionInterface(val *CatalogDataProductTierPriceExtensionInterface) *NullableCatalogDataProductTierPriceExtensionInterface {
	return &NullableCatalogDataProductTierPriceExtensionInterface{value: val, isSet: true}
}

func (v NullableCatalogDataProductTierPriceExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogDataProductTierPriceExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
