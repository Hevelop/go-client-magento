/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the QuoteDataPaymentInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataPaymentInterface{}

// QuoteDataPaymentInterface Interface PaymentInterface
type QuoteDataPaymentInterface struct {
	// Purchase order number
	PoNumber *string `json:"po_number,omitempty"`
	// Payment method code
	Method string `json:"method"`
	// Payment additional details
	AdditionalData       []string                            `json:"additional_data,omitempty"`
	ExtensionAttributes  *QuoteDataPaymentExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuoteDataPaymentInterface QuoteDataPaymentInterface

// NewQuoteDataPaymentInterface instantiates a new QuoteDataPaymentInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataPaymentInterface(method string) *QuoteDataPaymentInterface {
	this := QuoteDataPaymentInterface{}
	this.Method = method
	return &this
}

// NewQuoteDataPaymentInterfaceWithDefaults instantiates a new QuoteDataPaymentInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataPaymentInterfaceWithDefaults() *QuoteDataPaymentInterface {
	this := QuoteDataPaymentInterface{}
	return &this
}

// GetPoNumber returns the PoNumber field value if set, zero value otherwise.
func (o *QuoteDataPaymentInterface) GetPoNumber() string {
	if o == nil || IsNil(o.PoNumber) {
		var ret string
		return ret
	}
	return *o.PoNumber
}

// GetPoNumberOk returns a tuple with the PoNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataPaymentInterface) GetPoNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PoNumber) {
		return nil, false
	}
	return o.PoNumber, true
}

// HasPoNumber returns a boolean if a field has been set.
func (o *QuoteDataPaymentInterface) HasPoNumber() bool {
	if o != nil && !IsNil(o.PoNumber) {
		return true
	}

	return false
}

// SetPoNumber gets a reference to the given string and assigns it to the PoNumber field.
func (o *QuoteDataPaymentInterface) SetPoNumber(v string) {
	o.PoNumber = &v
}

// GetMethod returns the Method field value
func (o *QuoteDataPaymentInterface) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *QuoteDataPaymentInterface) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *QuoteDataPaymentInterface) SetMethod(v string) {
	o.Method = v
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *QuoteDataPaymentInterface) GetAdditionalData() []string {
	if o == nil || IsNil(o.AdditionalData) {
		var ret []string
		return ret
	}
	return o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataPaymentInterface) GetAdditionalDataOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalData) {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *QuoteDataPaymentInterface) HasAdditionalData() bool {
	if o != nil && !IsNil(o.AdditionalData) {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given []string and assigns it to the AdditionalData field.
func (o *QuoteDataPaymentInterface) SetAdditionalData(v []string) {
	o.AdditionalData = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *QuoteDataPaymentInterface) GetExtensionAttributes() QuoteDataPaymentExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret QuoteDataPaymentExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataPaymentInterface) GetExtensionAttributesOk() (*QuoteDataPaymentExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *QuoteDataPaymentInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given QuoteDataPaymentExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *QuoteDataPaymentInterface) SetExtensionAttributes(v QuoteDataPaymentExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o QuoteDataPaymentInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataPaymentInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PoNumber) {
		toSerialize["po_number"] = o.PoNumber
	}
	toSerialize["method"] = o.Method
	if !IsNil(o.AdditionalData) {
		toSerialize["additional_data"] = o.AdditionalData
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataPaymentInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"method",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteDataPaymentInterface := _QuoteDataPaymentInterface{}

	err = json.Unmarshal(data, &varQuoteDataPaymentInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataPaymentInterface(varQuoteDataPaymentInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "po_number")
		delete(additionalProperties, "method")
		delete(additionalProperties, "additional_data")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataPaymentInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataPaymentInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataPaymentInterface struct {
	value *QuoteDataPaymentInterface
	isSet bool
}

func (v NullableQuoteDataPaymentInterface) Get() *QuoteDataPaymentInterface {
	return v.value
}

func (v *NullableQuoteDataPaymentInterface) Set(val *QuoteDataPaymentInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataPaymentInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataPaymentInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataPaymentInterface(val *QuoteDataPaymentInterface) *NullableQuoteDataPaymentInterface {
	return &NullableQuoteDataPaymentInterface{value: val, isSet: true}
}

func (v NullableQuoteDataPaymentInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataPaymentInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
