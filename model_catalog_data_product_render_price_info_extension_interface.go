/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the CatalogDataProductRenderPriceInfoExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogDataProductRenderPriceInfoExtensionInterface{}

// CatalogDataProductRenderPriceInfoExtensionInterface ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\PriceInfoInterface
type CatalogDataProductRenderPriceInfoExtensionInterface struct {
	Msrp                 *MsrpDataProductRenderMsrpPriceInfoInterface            `json:"msrp,omitempty"`
	TaxAdjustments       *CatalogDataProductRenderPriceInfoInterface             `json:"tax_adjustments,omitempty"`
	WeeeAttributes       []WeeeDataProductRenderWeeeAdjustmentAttributeInterface `json:"weee_attributes,omitempty"`
	WeeeAdjustment       *string                                                 `json:"weee_adjustment,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CatalogDataProductRenderPriceInfoExtensionInterface CatalogDataProductRenderPriceInfoExtensionInterface

// NewCatalogDataProductRenderPriceInfoExtensionInterface instantiates a new CatalogDataProductRenderPriceInfoExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogDataProductRenderPriceInfoExtensionInterface() *CatalogDataProductRenderPriceInfoExtensionInterface {
	this := CatalogDataProductRenderPriceInfoExtensionInterface{}
	return &this
}

// NewCatalogDataProductRenderPriceInfoExtensionInterfaceWithDefaults instantiates a new CatalogDataProductRenderPriceInfoExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogDataProductRenderPriceInfoExtensionInterfaceWithDefaults() *CatalogDataProductRenderPriceInfoExtensionInterface {
	this := CatalogDataProductRenderPriceInfoExtensionInterface{}
	return &this
}

// GetMsrp returns the Msrp field value if set, zero value otherwise.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetMsrp() MsrpDataProductRenderMsrpPriceInfoInterface {
	if o == nil || IsNil(o.Msrp) {
		var ret MsrpDataProductRenderMsrpPriceInfoInterface
		return ret
	}
	return *o.Msrp
}

// GetMsrpOk returns a tuple with the Msrp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetMsrpOk() (*MsrpDataProductRenderMsrpPriceInfoInterface, bool) {
	if o == nil || IsNil(o.Msrp) {
		return nil, false
	}
	return o.Msrp, true
}

// HasMsrp returns a boolean if a field has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) HasMsrp() bool {
	if o != nil && !IsNil(o.Msrp) {
		return true
	}

	return false
}

// SetMsrp gets a reference to the given MsrpDataProductRenderMsrpPriceInfoInterface and assigns it to the Msrp field.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) SetMsrp(v MsrpDataProductRenderMsrpPriceInfoInterface) {
	o.Msrp = &v
}

// GetTaxAdjustments returns the TaxAdjustments field value if set, zero value otherwise.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetTaxAdjustments() CatalogDataProductRenderPriceInfoInterface {
	if o == nil || IsNil(o.TaxAdjustments) {
		var ret CatalogDataProductRenderPriceInfoInterface
		return ret
	}
	return *o.TaxAdjustments
}

// GetTaxAdjustmentsOk returns a tuple with the TaxAdjustments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetTaxAdjustmentsOk() (*CatalogDataProductRenderPriceInfoInterface, bool) {
	if o == nil || IsNil(o.TaxAdjustments) {
		return nil, false
	}
	return o.TaxAdjustments, true
}

// HasTaxAdjustments returns a boolean if a field has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) HasTaxAdjustments() bool {
	if o != nil && !IsNil(o.TaxAdjustments) {
		return true
	}

	return false
}

// SetTaxAdjustments gets a reference to the given CatalogDataProductRenderPriceInfoInterface and assigns it to the TaxAdjustments field.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) SetTaxAdjustments(v CatalogDataProductRenderPriceInfoInterface) {
	o.TaxAdjustments = &v
}

// GetWeeeAttributes returns the WeeeAttributes field value if set, zero value otherwise.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetWeeeAttributes() []WeeeDataProductRenderWeeeAdjustmentAttributeInterface {
	if o == nil || IsNil(o.WeeeAttributes) {
		var ret []WeeeDataProductRenderWeeeAdjustmentAttributeInterface
		return ret
	}
	return o.WeeeAttributes
}

// GetWeeeAttributesOk returns a tuple with the WeeeAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetWeeeAttributesOk() ([]WeeeDataProductRenderWeeeAdjustmentAttributeInterface, bool) {
	if o == nil || IsNil(o.WeeeAttributes) {
		return nil, false
	}
	return o.WeeeAttributes, true
}

// HasWeeeAttributes returns a boolean if a field has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) HasWeeeAttributes() bool {
	if o != nil && !IsNil(o.WeeeAttributes) {
		return true
	}

	return false
}

// SetWeeeAttributes gets a reference to the given []WeeeDataProductRenderWeeeAdjustmentAttributeInterface and assigns it to the WeeeAttributes field.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) SetWeeeAttributes(v []WeeeDataProductRenderWeeeAdjustmentAttributeInterface) {
	o.WeeeAttributes = v
}

// GetWeeeAdjustment returns the WeeeAdjustment field value if set, zero value otherwise.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetWeeeAdjustment() string {
	if o == nil || IsNil(o.WeeeAdjustment) {
		var ret string
		return ret
	}
	return *o.WeeeAdjustment
}

// GetWeeeAdjustmentOk returns a tuple with the WeeeAdjustment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetWeeeAdjustmentOk() (*string, bool) {
	if o == nil || IsNil(o.WeeeAdjustment) {
		return nil, false
	}
	return o.WeeeAdjustment, true
}

// HasWeeeAdjustment returns a boolean if a field has been set.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) HasWeeeAdjustment() bool {
	if o != nil && !IsNil(o.WeeeAdjustment) {
		return true
	}

	return false
}

// SetWeeeAdjustment gets a reference to the given string and assigns it to the WeeeAdjustment field.
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) SetWeeeAdjustment(v string) {
	o.WeeeAdjustment = &v
}

func (o CatalogDataProductRenderPriceInfoExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogDataProductRenderPriceInfoExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msrp) {
		toSerialize["msrp"] = o.Msrp
	}
	if !IsNil(o.TaxAdjustments) {
		toSerialize["tax_adjustments"] = o.TaxAdjustments
	}
	if !IsNil(o.WeeeAttributes) {
		toSerialize["weee_attributes"] = o.WeeeAttributes
	}
	if !IsNil(o.WeeeAdjustment) {
		toSerialize["weee_adjustment"] = o.WeeeAdjustment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CatalogDataProductRenderPriceInfoExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varCatalogDataProductRenderPriceInfoExtensionInterface := _CatalogDataProductRenderPriceInfoExtensionInterface{}

	err = json.Unmarshal(data, &varCatalogDataProductRenderPriceInfoExtensionInterface)

	if err != nil {
		return err
	}

	*o = CatalogDataProductRenderPriceInfoExtensionInterface(varCatalogDataProductRenderPriceInfoExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "msrp")
		delete(additionalProperties, "tax_adjustments")
		delete(additionalProperties, "weee_attributes")
		delete(additionalProperties, "weee_adjustment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CatalogDataProductRenderPriceInfoExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCatalogDataProductRenderPriceInfoExtensionInterface struct {
	value *CatalogDataProductRenderPriceInfoExtensionInterface
	isSet bool
}

func (v NullableCatalogDataProductRenderPriceInfoExtensionInterface) Get() *CatalogDataProductRenderPriceInfoExtensionInterface {
	return v.value
}

func (v *NullableCatalogDataProductRenderPriceInfoExtensionInterface) Set(val *CatalogDataProductRenderPriceInfoExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogDataProductRenderPriceInfoExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogDataProductRenderPriceInfoExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogDataProductRenderPriceInfoExtensionInterface(val *CatalogDataProductRenderPriceInfoExtensionInterface) *NullableCatalogDataProductRenderPriceInfoExtensionInterface {
	return &NullableCatalogDataProductRenderPriceInfoExtensionInterface{value: val, isSet: true}
}

func (v NullableCatalogDataProductRenderPriceInfoExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogDataProductRenderPriceInfoExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
