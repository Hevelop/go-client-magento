/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PostV1CartsMinePaymentorderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostV1CartsMinePaymentorderRequest{}

// PostV1CartsMinePaymentorderRequest struct for PostV1CartsMinePaymentorderRequest
type PostV1CartsMinePaymentorderRequest struct {
	MethodCode           string `json:"methodCode"`
	PaymentSource        string `json:"paymentSource"`
	Location             string `json:"location"`
	VaultIntent          *bool  `json:"vaultIntent,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostV1CartsMinePaymentorderRequest PostV1CartsMinePaymentorderRequest

// NewPostV1CartsMinePaymentorderRequest instantiates a new PostV1CartsMinePaymentorderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostV1CartsMinePaymentorderRequest(methodCode string, paymentSource string, location string) *PostV1CartsMinePaymentorderRequest {
	this := PostV1CartsMinePaymentorderRequest{}
	this.MethodCode = methodCode
	this.PaymentSource = paymentSource
	this.Location = location
	return &this
}

// NewPostV1CartsMinePaymentorderRequestWithDefaults instantiates a new PostV1CartsMinePaymentorderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostV1CartsMinePaymentorderRequestWithDefaults() *PostV1CartsMinePaymentorderRequest {
	this := PostV1CartsMinePaymentorderRequest{}
	return &this
}

// GetMethodCode returns the MethodCode field value
func (o *PostV1CartsMinePaymentorderRequest) GetMethodCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodCode
}

// GetMethodCodeOk returns a tuple with the MethodCode field value
// and a boolean to check if the value has been set.
func (o *PostV1CartsMinePaymentorderRequest) GetMethodCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodCode, true
}

// SetMethodCode sets field value
func (o *PostV1CartsMinePaymentorderRequest) SetMethodCode(v string) {
	o.MethodCode = v
}

// GetPaymentSource returns the PaymentSource field value
func (o *PostV1CartsMinePaymentorderRequest) GetPaymentSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentSource
}

// GetPaymentSourceOk returns a tuple with the PaymentSource field value
// and a boolean to check if the value has been set.
func (o *PostV1CartsMinePaymentorderRequest) GetPaymentSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentSource, true
}

// SetPaymentSource sets field value
func (o *PostV1CartsMinePaymentorderRequest) SetPaymentSource(v string) {
	o.PaymentSource = v
}

// GetLocation returns the Location field value
func (o *PostV1CartsMinePaymentorderRequest) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *PostV1CartsMinePaymentorderRequest) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *PostV1CartsMinePaymentorderRequest) SetLocation(v string) {
	o.Location = v
}

// GetVaultIntent returns the VaultIntent field value if set, zero value otherwise.
func (o *PostV1CartsMinePaymentorderRequest) GetVaultIntent() bool {
	if o == nil || IsNil(o.VaultIntent) {
		var ret bool
		return ret
	}
	return *o.VaultIntent
}

// GetVaultIntentOk returns a tuple with the VaultIntent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostV1CartsMinePaymentorderRequest) GetVaultIntentOk() (*bool, bool) {
	if o == nil || IsNil(o.VaultIntent) {
		return nil, false
	}
	return o.VaultIntent, true
}

// HasVaultIntent returns a boolean if a field has been set.
func (o *PostV1CartsMinePaymentorderRequest) HasVaultIntent() bool {
	if o != nil && !IsNil(o.VaultIntent) {
		return true
	}

	return false
}

// SetVaultIntent gets a reference to the given bool and assigns it to the VaultIntent field.
func (o *PostV1CartsMinePaymentorderRequest) SetVaultIntent(v bool) {
	o.VaultIntent = &v
}

func (o PostV1CartsMinePaymentorderRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostV1CartsMinePaymentorderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["methodCode"] = o.MethodCode
	toSerialize["paymentSource"] = o.PaymentSource
	toSerialize["location"] = o.Location
	if !IsNil(o.VaultIntent) {
		toSerialize["vaultIntent"] = o.VaultIntent
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostV1CartsMinePaymentorderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"methodCode",
		"paymentSource",
		"location",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostV1CartsMinePaymentorderRequest := _PostV1CartsMinePaymentorderRequest{}

	err = json.Unmarshal(data, &varPostV1CartsMinePaymentorderRequest)

	if err != nil {
		return err
	}

	*o = PostV1CartsMinePaymentorderRequest(varPostV1CartsMinePaymentorderRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "methodCode")
		delete(additionalProperties, "paymentSource")
		delete(additionalProperties, "location")
		delete(additionalProperties, "vaultIntent")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PostV1CartsMinePaymentorderRequest) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PostV1CartsMinePaymentorderRequest) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePostV1CartsMinePaymentorderRequest struct {
	value *PostV1CartsMinePaymentorderRequest
	isSet bool
}

func (v NullablePostV1CartsMinePaymentorderRequest) Get() *PostV1CartsMinePaymentorderRequest {
	return v.value
}

func (v *NullablePostV1CartsMinePaymentorderRequest) Set(val *PostV1CartsMinePaymentorderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostV1CartsMinePaymentorderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostV1CartsMinePaymentorderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostV1CartsMinePaymentorderRequest(val *PostV1CartsMinePaymentorderRequest) *NullablePostV1CartsMinePaymentorderRequest {
	return &NullablePostV1CartsMinePaymentorderRequest{value: val, isSet: true}
}

func (v NullablePostV1CartsMinePaymentorderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostV1CartsMinePaymentorderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
