/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface{}

// InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface Represents a Source Item Configuration object Used fully qualified namespaces in annotations for proper work of WebApi request parser
type InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface struct {
	// Source code
	SourceCode *string `json:"source_code,omitempty"`
	// Notify stock qty
	NotifyStockQty *float32 `json:"notify_stock_qty,omitempty"`
	// SKU
	Sku *string `json:"sku,omitempty"`
	// ExtensionInterface class for @see \\Magento\\InventoryLowQuantityNotificationApi\\Api\\Data\\SourceItemConfigurationInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface

// NewInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface instantiates a new InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface() *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface {
	this := InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface{}
	return &this
}

// NewInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceWithDefaults instantiates a new InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceWithDefaults() *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface {
	this := InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface{}
	return &this
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetNotifyStockQty returns the NotifyStockQty field value if set, zero value otherwise.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetNotifyStockQty() float32 {
	if o == nil || IsNil(o.NotifyStockQty) {
		var ret float32
		return ret
	}
	return *o.NotifyStockQty
}

// GetNotifyStockQtyOk returns a tuple with the NotifyStockQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetNotifyStockQtyOk() (*float32, bool) {
	if o == nil || IsNil(o.NotifyStockQty) {
		return nil, false
	}
	return o.NotifyStockQty, true
}

// HasNotifyStockQty returns a boolean if a field has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) HasNotifyStockQty() bool {
	if o != nil && !IsNil(o.NotifyStockQty) {
		return true
	}

	return false
}

// SetNotifyStockQty gets a reference to the given float32 and assigns it to the NotifyStockQty field.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) SetNotifyStockQty(v float32) {
	o.NotifyStockQty = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) SetSku(v string) {
	o.Sku = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SourceCode) {
		toSerialize["source_code"] = o.SourceCode
	}
	if !IsNil(o.NotifyStockQty) {
		toSerialize["notify_stock_qty"] = o.NotifyStockQty
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) UnmarshalJSON(data []byte) (err error) {
	varInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface := _InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface{}

	err = json.Unmarshal(data, &varInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface)

	if err != nil {
		return err
	}

	*o = InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface(varInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "source_code")
		delete(additionalProperties, "notify_stock_qty")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface struct {
	value *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface
	isSet bool
}

func (v NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) Get() *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface {
	return v.value
}

func (v *NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) Set(val *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface(val *InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) *NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface {
	return &NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface{value: val, isSet: true}
}

func (v NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
