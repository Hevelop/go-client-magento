/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the QuoteDataTotalSegmentInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataTotalSegmentInterface{}

// QuoteDataTotalSegmentInterface Interface TotalsInterface
type QuoteDataTotalSegmentInterface struct {
	// Code
	Code string `json:"code"`
	// Total title
	Title *string `json:"title,omitempty"`
	// Total value
	Value float32 `json:"value"`
	// Display area code.
	Area                 *string                                  `json:"area,omitempty"`
	ExtensionAttributes  *QuoteDataTotalSegmentExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuoteDataTotalSegmentInterface QuoteDataTotalSegmentInterface

// NewQuoteDataTotalSegmentInterface instantiates a new QuoteDataTotalSegmentInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataTotalSegmentInterface(code string, value float32) *QuoteDataTotalSegmentInterface {
	this := QuoteDataTotalSegmentInterface{}
	this.Code = code
	this.Value = value
	return &this
}

// NewQuoteDataTotalSegmentInterfaceWithDefaults instantiates a new QuoteDataTotalSegmentInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataTotalSegmentInterfaceWithDefaults() *QuoteDataTotalSegmentInterface {
	this := QuoteDataTotalSegmentInterface{}
	return &this
}

// GetCode returns the Code field value
func (o *QuoteDataTotalSegmentInterface) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *QuoteDataTotalSegmentInterface) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *QuoteDataTotalSegmentInterface) SetCode(v string) {
	o.Code = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *QuoteDataTotalSegmentInterface) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataTotalSegmentInterface) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *QuoteDataTotalSegmentInterface) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *QuoteDataTotalSegmentInterface) SetTitle(v string) {
	o.Title = &v
}

// GetValue returns the Value field value
func (o *QuoteDataTotalSegmentInterface) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *QuoteDataTotalSegmentInterface) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *QuoteDataTotalSegmentInterface) SetValue(v float32) {
	o.Value = v
}

// GetArea returns the Area field value if set, zero value otherwise.
func (o *QuoteDataTotalSegmentInterface) GetArea() string {
	if o == nil || IsNil(o.Area) {
		var ret string
		return ret
	}
	return *o.Area
}

// GetAreaOk returns a tuple with the Area field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataTotalSegmentInterface) GetAreaOk() (*string, bool) {
	if o == nil || IsNil(o.Area) {
		return nil, false
	}
	return o.Area, true
}

// HasArea returns a boolean if a field has been set.
func (o *QuoteDataTotalSegmentInterface) HasArea() bool {
	if o != nil && !IsNil(o.Area) {
		return true
	}

	return false
}

// SetArea gets a reference to the given string and assigns it to the Area field.
func (o *QuoteDataTotalSegmentInterface) SetArea(v string) {
	o.Area = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *QuoteDataTotalSegmentInterface) GetExtensionAttributes() QuoteDataTotalSegmentExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret QuoteDataTotalSegmentExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataTotalSegmentInterface) GetExtensionAttributesOk() (*QuoteDataTotalSegmentExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *QuoteDataTotalSegmentInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given QuoteDataTotalSegmentExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *QuoteDataTotalSegmentInterface) SetExtensionAttributes(v QuoteDataTotalSegmentExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o QuoteDataTotalSegmentInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataTotalSegmentInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	toSerialize["value"] = o.Value
	if !IsNil(o.Area) {
		toSerialize["area"] = o.Area
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataTotalSegmentInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteDataTotalSegmentInterface := _QuoteDataTotalSegmentInterface{}

	err = json.Unmarshal(data, &varQuoteDataTotalSegmentInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataTotalSegmentInterface(varQuoteDataTotalSegmentInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "title")
		delete(additionalProperties, "value")
		delete(additionalProperties, "area")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataTotalSegmentInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataTotalSegmentInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataTotalSegmentInterface struct {
	value *QuoteDataTotalSegmentInterface
	isSet bool
}

func (v NullableQuoteDataTotalSegmentInterface) Get() *QuoteDataTotalSegmentInterface {
	return v.value
}

func (v *NullableQuoteDataTotalSegmentInterface) Set(val *QuoteDataTotalSegmentInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataTotalSegmentInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataTotalSegmentInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataTotalSegmentInterface(val *QuoteDataTotalSegmentInterface) *NullableQuoteDataTotalSegmentInterface {
	return &NullableQuoteDataTotalSegmentInterface{value: val, isSet: true}
}

func (v NullableQuoteDataTotalSegmentInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataTotalSegmentInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
