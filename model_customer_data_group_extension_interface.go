/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the CustomerDataGroupExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerDataGroupExtensionInterface{}

// CustomerDataGroupExtensionInterface ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\GroupInterface
type CustomerDataGroupExtensionInterface struct {
	ExcludeWebsiteIds    []int32 `json:"exclude_website_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerDataGroupExtensionInterface CustomerDataGroupExtensionInterface

// NewCustomerDataGroupExtensionInterface instantiates a new CustomerDataGroupExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerDataGroupExtensionInterface() *CustomerDataGroupExtensionInterface {
	this := CustomerDataGroupExtensionInterface{}
	return &this
}

// NewCustomerDataGroupExtensionInterfaceWithDefaults instantiates a new CustomerDataGroupExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDataGroupExtensionInterfaceWithDefaults() *CustomerDataGroupExtensionInterface {
	this := CustomerDataGroupExtensionInterface{}
	return &this
}

// GetExcludeWebsiteIds returns the ExcludeWebsiteIds field value if set, zero value otherwise.
func (o *CustomerDataGroupExtensionInterface) GetExcludeWebsiteIds() []int32 {
	if o == nil || IsNil(o.ExcludeWebsiteIds) {
		var ret []int32
		return ret
	}
	return o.ExcludeWebsiteIds
}

// GetExcludeWebsiteIdsOk returns a tuple with the ExcludeWebsiteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataGroupExtensionInterface) GetExcludeWebsiteIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ExcludeWebsiteIds) {
		return nil, false
	}
	return o.ExcludeWebsiteIds, true
}

// HasExcludeWebsiteIds returns a boolean if a field has been set.
func (o *CustomerDataGroupExtensionInterface) HasExcludeWebsiteIds() bool {
	if o != nil && !IsNil(o.ExcludeWebsiteIds) {
		return true
	}

	return false
}

// SetExcludeWebsiteIds gets a reference to the given []int32 and assigns it to the ExcludeWebsiteIds field.
func (o *CustomerDataGroupExtensionInterface) SetExcludeWebsiteIds(v []int32) {
	o.ExcludeWebsiteIds = v
}

func (o CustomerDataGroupExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerDataGroupExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExcludeWebsiteIds) {
		toSerialize["exclude_website_ids"] = o.ExcludeWebsiteIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerDataGroupExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varCustomerDataGroupExtensionInterface := _CustomerDataGroupExtensionInterface{}

	err = json.Unmarshal(data, &varCustomerDataGroupExtensionInterface)

	if err != nil {
		return err
	}

	*o = CustomerDataGroupExtensionInterface(varCustomerDataGroupExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "exclude_website_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerDataGroupExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CustomerDataGroupExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCustomerDataGroupExtensionInterface struct {
	value *CustomerDataGroupExtensionInterface
	isSet bool
}

func (v NullableCustomerDataGroupExtensionInterface) Get() *CustomerDataGroupExtensionInterface {
	return v.value
}

func (v *NullableCustomerDataGroupExtensionInterface) Set(val *CustomerDataGroupExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerDataGroupExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerDataGroupExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerDataGroupExtensionInterface(val *CustomerDataGroupExtensionInterface) *NullableCustomerDataGroupExtensionInterface {
	return &NullableCustomerDataGroupExtensionInterface{value: val, isSet: true}
}

func (v NullableCustomerDataGroupExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerDataGroupExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
