/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesRuleDataRuleDiscountInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesRuleDataRuleDiscountInterface{}

// SalesRuleDataRuleDiscountInterface Rule discount Interface
type SalesRuleDataRuleDiscountInterface struct {
	DiscountData SalesRuleDataDiscountDataInterface `json:"discount_data"`
	// Rule Label
	RuleLabel string `json:"rule_label"`
	// Rule ID
	RuleID               int32 `json:"rule_i_d"`
	AdditionalProperties map[string]interface{}
}

type _SalesRuleDataRuleDiscountInterface SalesRuleDataRuleDiscountInterface

// NewSalesRuleDataRuleDiscountInterface instantiates a new SalesRuleDataRuleDiscountInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesRuleDataRuleDiscountInterface(discountData SalesRuleDataDiscountDataInterface, ruleLabel string, ruleID int32) *SalesRuleDataRuleDiscountInterface {
	this := SalesRuleDataRuleDiscountInterface{}
	this.DiscountData = discountData
	this.RuleLabel = ruleLabel
	this.RuleID = ruleID
	return &this
}

// NewSalesRuleDataRuleDiscountInterfaceWithDefaults instantiates a new SalesRuleDataRuleDiscountInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesRuleDataRuleDiscountInterfaceWithDefaults() *SalesRuleDataRuleDiscountInterface {
	this := SalesRuleDataRuleDiscountInterface{}
	return &this
}

// GetDiscountData returns the DiscountData field value
func (o *SalesRuleDataRuleDiscountInterface) GetDiscountData() SalesRuleDataDiscountDataInterface {
	if o == nil {
		var ret SalesRuleDataDiscountDataInterface
		return ret
	}

	return o.DiscountData
}

// GetDiscountDataOk returns a tuple with the DiscountData field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataRuleDiscountInterface) GetDiscountDataOk() (*SalesRuleDataDiscountDataInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountData, true
}

// SetDiscountData sets field value
func (o *SalesRuleDataRuleDiscountInterface) SetDiscountData(v SalesRuleDataDiscountDataInterface) {
	o.DiscountData = v
}

// GetRuleLabel returns the RuleLabel field value
func (o *SalesRuleDataRuleDiscountInterface) GetRuleLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleLabel
}

// GetRuleLabelOk returns a tuple with the RuleLabel field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataRuleDiscountInterface) GetRuleLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleLabel, true
}

// SetRuleLabel sets field value
func (o *SalesRuleDataRuleDiscountInterface) SetRuleLabel(v string) {
	o.RuleLabel = v
}

// GetRuleID returns the RuleID field value
func (o *SalesRuleDataRuleDiscountInterface) GetRuleID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RuleID
}

// GetRuleIDOk returns a tuple with the RuleID field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataRuleDiscountInterface) GetRuleIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleID, true
}

// SetRuleID sets field value
func (o *SalesRuleDataRuleDiscountInterface) SetRuleID(v int32) {
	o.RuleID = v
}

func (o SalesRuleDataRuleDiscountInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesRuleDataRuleDiscountInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["discount_data"] = o.DiscountData
	toSerialize["rule_label"] = o.RuleLabel
	toSerialize["rule_i_d"] = o.RuleID

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesRuleDataRuleDiscountInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"discount_data",
		"rule_label",
		"rule_i_d",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesRuleDataRuleDiscountInterface := _SalesRuleDataRuleDiscountInterface{}

	err = json.Unmarshal(data, &varSalesRuleDataRuleDiscountInterface)

	if err != nil {
		return err
	}

	*o = SalesRuleDataRuleDiscountInterface(varSalesRuleDataRuleDiscountInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "discount_data")
		delete(additionalProperties, "rule_label")
		delete(additionalProperties, "rule_i_d")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesRuleDataRuleDiscountInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesRuleDataRuleDiscountInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesRuleDataRuleDiscountInterface struct {
	value *SalesRuleDataRuleDiscountInterface
	isSet bool
}

func (v NullableSalesRuleDataRuleDiscountInterface) Get() *SalesRuleDataRuleDiscountInterface {
	return v.value
}

func (v *NullableSalesRuleDataRuleDiscountInterface) Set(val *SalesRuleDataRuleDiscountInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesRuleDataRuleDiscountInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesRuleDataRuleDiscountInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesRuleDataRuleDiscountInterface(val *SalesRuleDataRuleDiscountInterface) *NullableSalesRuleDataRuleDiscountInterface {
	return &NullableSalesRuleDataRuleDiscountInterface{value: val, isSet: true}
}

func (v NullableSalesRuleDataRuleDiscountInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesRuleDataRuleDiscountInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
