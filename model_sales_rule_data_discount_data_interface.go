/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesRuleDataDiscountDataInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesRuleDataDiscountDataInterface{}

// SalesRuleDataDiscountDataInterface Discount Data Interface
type SalesRuleDataDiscountDataInterface struct {
	// Amount
	Amount float32 `json:"amount"`
	// Base Amount
	BaseAmount float32 `json:"base_amount"`
	// Original Amount
	OriginalAmount float32 `json:"original_amount"`
	// Base Original Amount
	BaseOriginalAmount   float32 `json:"base_original_amount"`
	AdditionalProperties map[string]interface{}
}

type _SalesRuleDataDiscountDataInterface SalesRuleDataDiscountDataInterface

// NewSalesRuleDataDiscountDataInterface instantiates a new SalesRuleDataDiscountDataInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesRuleDataDiscountDataInterface(amount float32, baseAmount float32, originalAmount float32, baseOriginalAmount float32) *SalesRuleDataDiscountDataInterface {
	this := SalesRuleDataDiscountDataInterface{}
	this.Amount = amount
	this.BaseAmount = baseAmount
	this.OriginalAmount = originalAmount
	this.BaseOriginalAmount = baseOriginalAmount
	return &this
}

// NewSalesRuleDataDiscountDataInterfaceWithDefaults instantiates a new SalesRuleDataDiscountDataInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesRuleDataDiscountDataInterfaceWithDefaults() *SalesRuleDataDiscountDataInterface {
	this := SalesRuleDataDiscountDataInterface{}
	return &this
}

// GetAmount returns the Amount field value
func (o *SalesRuleDataDiscountDataInterface) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataDiscountDataInterface) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *SalesRuleDataDiscountDataInterface) SetAmount(v float32) {
	o.Amount = v
}

// GetBaseAmount returns the BaseAmount field value
func (o *SalesRuleDataDiscountDataInterface) GetBaseAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BaseAmount
}

// GetBaseAmountOk returns a tuple with the BaseAmount field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataDiscountDataInterface) GetBaseAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseAmount, true
}

// SetBaseAmount sets field value
func (o *SalesRuleDataDiscountDataInterface) SetBaseAmount(v float32) {
	o.BaseAmount = v
}

// GetOriginalAmount returns the OriginalAmount field value
func (o *SalesRuleDataDiscountDataInterface) GetOriginalAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OriginalAmount
}

// GetOriginalAmountOk returns a tuple with the OriginalAmount field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataDiscountDataInterface) GetOriginalAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalAmount, true
}

// SetOriginalAmount sets field value
func (o *SalesRuleDataDiscountDataInterface) SetOriginalAmount(v float32) {
	o.OriginalAmount = v
}

// GetBaseOriginalAmount returns the BaseOriginalAmount field value
func (o *SalesRuleDataDiscountDataInterface) GetBaseOriginalAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BaseOriginalAmount
}

// GetBaseOriginalAmountOk returns a tuple with the BaseOriginalAmount field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataDiscountDataInterface) GetBaseOriginalAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseOriginalAmount, true
}

// SetBaseOriginalAmount sets field value
func (o *SalesRuleDataDiscountDataInterface) SetBaseOriginalAmount(v float32) {
	o.BaseOriginalAmount = v
}

func (o SalesRuleDataDiscountDataInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesRuleDataDiscountDataInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["base_amount"] = o.BaseAmount
	toSerialize["original_amount"] = o.OriginalAmount
	toSerialize["base_original_amount"] = o.BaseOriginalAmount

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesRuleDataDiscountDataInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"base_amount",
		"original_amount",
		"base_original_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesRuleDataDiscountDataInterface := _SalesRuleDataDiscountDataInterface{}

	err = json.Unmarshal(data, &varSalesRuleDataDiscountDataInterface)

	if err != nil {
		return err
	}

	*o = SalesRuleDataDiscountDataInterface(varSalesRuleDataDiscountDataInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "amount")
		delete(additionalProperties, "base_amount")
		delete(additionalProperties, "original_amount")
		delete(additionalProperties, "base_original_amount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesRuleDataDiscountDataInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesRuleDataDiscountDataInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesRuleDataDiscountDataInterface struct {
	value *SalesRuleDataDiscountDataInterface
	isSet bool
}

func (v NullableSalesRuleDataDiscountDataInterface) Get() *SalesRuleDataDiscountDataInterface {
	return v.value
}

func (v *NullableSalesRuleDataDiscountDataInterface) Set(val *SalesRuleDataDiscountDataInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesRuleDataDiscountDataInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesRuleDataDiscountDataInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesRuleDataDiscountDataInterface(val *SalesRuleDataDiscountDataInterface) *NullableSalesRuleDataDiscountDataInterface {
	return &NullableSalesRuleDataDiscountDataInterface{value: val, isSet: true}
}

func (v NullableSalesRuleDataDiscountDataInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesRuleDataDiscountDataInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
