/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataShipmentItemInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataShipmentItemInterface{}

// SalesDataShipmentItemInterface Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment.
type SalesDataShipmentItemInterface struct {
	// Additional data.
	AdditionalData *string `json:"additional_data,omitempty"`
	// Description.
	Description *string `json:"description,omitempty"`
	// Shipment item ID.
	EntityId *int32 `json:"entity_id,omitempty"`
	// Name.
	Name *string `json:"name,omitempty"`
	// Parent ID.
	ParentId *int32 `json:"parent_id,omitempty"`
	// Price.
	Price *float32 `json:"price,omitempty"`
	// Product ID.
	ProductId *int32 `json:"product_id,omitempty"`
	// Row total.
	RowTotal *float32 `json:"row_total,omitempty"`
	// SKU.
	Sku *string `json:"sku,omitempty"`
	// Weight.
	Weight *float32 `json:"weight,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemInterface
	ExtensionAttributes map[string]interface{} `json:"extension_attributes,omitempty"`
	// Order item ID.
	OrderItemId int32 `json:"order_item_id"`
	// Quantity.
	Qty                  float32 `json:"qty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataShipmentItemInterface SalesDataShipmentItemInterface

// NewSalesDataShipmentItemInterface instantiates a new SalesDataShipmentItemInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataShipmentItemInterface(orderItemId int32, qty float32) *SalesDataShipmentItemInterface {
	this := SalesDataShipmentItemInterface{}
	this.OrderItemId = orderItemId
	this.Qty = qty
	return &this
}

// NewSalesDataShipmentItemInterfaceWithDefaults instantiates a new SalesDataShipmentItemInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataShipmentItemInterfaceWithDefaults() *SalesDataShipmentItemInterface {
	this := SalesDataShipmentItemInterface{}
	return &this
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetAdditionalData() string {
	if o == nil || IsNil(o.AdditionalData) {
		var ret string
		return ret
	}
	return *o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetAdditionalDataOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalData) {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasAdditionalData() bool {
	if o != nil && !IsNil(o.AdditionalData) {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given string and assigns it to the AdditionalData field.
func (o *SalesDataShipmentItemInterface) SetAdditionalData(v string) {
	o.AdditionalData = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SalesDataShipmentItemInterface) SetDescription(v string) {
	o.Description = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *SalesDataShipmentItemInterface) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SalesDataShipmentItemInterface) SetName(v string) {
	o.Name = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId) {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetParentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *SalesDataShipmentItemInterface) SetParentId(v int32) {
	o.ParentId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *SalesDataShipmentItemInterface) SetPrice(v float32) {
	o.Price = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *SalesDataShipmentItemInterface) SetProductId(v int32) {
	o.ProductId = &v
}

// GetRowTotal returns the RowTotal field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetRowTotal() float32 {
	if o == nil || IsNil(o.RowTotal) {
		var ret float32
		return ret
	}
	return *o.RowTotal
}

// GetRowTotalOk returns a tuple with the RowTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetRowTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.RowTotal) {
		return nil, false
	}
	return o.RowTotal, true
}

// HasRowTotal returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasRowTotal() bool {
	if o != nil && !IsNil(o.RowTotal) {
		return true
	}

	return false
}

// SetRowTotal gets a reference to the given float32 and assigns it to the RowTotal field.
func (o *SalesDataShipmentItemInterface) SetRowTotal(v float32) {
	o.RowTotal = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *SalesDataShipmentItemInterface) SetSku(v string) {
	o.Sku = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *SalesDataShipmentItemInterface) SetWeight(v float32) {
	o.Weight = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataShipmentItemInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataShipmentItemInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *SalesDataShipmentItemInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

// GetOrderItemId returns the OrderItemId field value
func (o *SalesDataShipmentItemInterface) GetOrderItemId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderItemId
}

// GetOrderItemIdOk returns a tuple with the OrderItemId field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetOrderItemIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderItemId, true
}

// SetOrderItemId sets field value
func (o *SalesDataShipmentItemInterface) SetOrderItemId(v int32) {
	o.OrderItemId = v
}

// GetQty returns the Qty field value
func (o *SalesDataShipmentItemInterface) GetQty() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentItemInterface) GetQtyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *SalesDataShipmentItemInterface) SetQty(v float32) {
	o.Qty = v
}

func (o SalesDataShipmentItemInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataShipmentItemInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalData) {
		toSerialize["additional_data"] = o.AdditionalData
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.RowTotal) {
		toSerialize["row_total"] = o.RowTotal
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	toSerialize["order_item_id"] = o.OrderItemId
	toSerialize["qty"] = o.Qty

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataShipmentItemInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_item_id",
		"qty",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataShipmentItemInterface := _SalesDataShipmentItemInterface{}

	err = json.Unmarshal(data, &varSalesDataShipmentItemInterface)

	if err != nil {
		return err
	}

	*o = SalesDataShipmentItemInterface(varSalesDataShipmentItemInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "additional_data")
		delete(additionalProperties, "description")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "parent_id")
		delete(additionalProperties, "price")
		delete(additionalProperties, "product_id")
		delete(additionalProperties, "row_total")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "weight")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "order_item_id")
		delete(additionalProperties, "qty")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataShipmentItemInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataShipmentItemInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataShipmentItemInterface struct {
	value *SalesDataShipmentItemInterface
	isSet bool
}

func (v NullableSalesDataShipmentItemInterface) Get() *SalesDataShipmentItemInterface {
	return v.value
}

func (v *NullableSalesDataShipmentItemInterface) Set(val *SalesDataShipmentItemInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataShipmentItemInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataShipmentItemInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataShipmentItemInterface(val *SalesDataShipmentItemInterface) *NullableSalesDataShipmentItemInterface {
	return &NullableSalesDataShipmentItemInterface{value: val, isSet: true}
}

func (v NullableSalesDataShipmentItemInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataShipmentItemInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
