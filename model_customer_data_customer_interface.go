/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerDataCustomerInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerDataCustomerInterface{}

// CustomerDataCustomerInterface Customer entity interface for API handling.
type CustomerDataCustomerInterface struct {
	// Customer id
	Id *int32 `json:"id,omitempty"`
	// Group id
	GroupId *int32 `json:"group_id,omitempty"`
	// Default billing address id
	DefaultBilling *string `json:"default_billing,omitempty"`
	// Default shipping address id
	DefaultShipping *string `json:"default_shipping,omitempty"`
	// Confirmation
	Confirmation *string `json:"confirmation,omitempty"`
	// Created at time
	CreatedAt *string `json:"created_at,omitempty"`
	// Updated at time
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Created in area
	CreatedIn *string `json:"created_in,omitempty"`
	// In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customersâ€™ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data.
	Dob *string `json:"dob,omitempty"`
	// Email address
	Email string `json:"email"`
	// First name
	Firstname string `json:"firstname"`
	// Last name
	Lastname string `json:"lastname"`
	// Middle name
	Middlename *string `json:"middlename,omitempty"`
	// Prefix
	Prefix *string `json:"prefix,omitempty"`
	// Suffix
	Suffix *string `json:"suffix,omitempty"`
	// Gender
	Gender *int32 `json:"gender,omitempty"`
	// Store id
	StoreId *int32 `json:"store_id,omitempty"`
	// Tax Vat
	Taxvat *string `json:"taxvat,omitempty"`
	// Website id
	WebsiteId *int32 `json:"website_id,omitempty"`
	// Customer addresses.
	Addresses []CustomerDataAddressInterface `json:"addresses,omitempty"`
	// Disable auto group change flag.
	DisableAutoGroupChange *int32                                  `json:"disable_auto_group_change,omitempty"`
	ExtensionAttributes    *CustomerDataCustomerExtensionInterface `json:"extension_attributes,omitempty"`
	// Custom attributes values.
	CustomAttributes     []FrameworkAttributeInterface `json:"custom_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerDataCustomerInterface CustomerDataCustomerInterface

// NewCustomerDataCustomerInterface instantiates a new CustomerDataCustomerInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerDataCustomerInterface(email string, firstname string, lastname string) *CustomerDataCustomerInterface {
	this := CustomerDataCustomerInterface{}
	this.Email = email
	this.Firstname = firstname
	this.Lastname = lastname
	return &this
}

// NewCustomerDataCustomerInterfaceWithDefaults instantiates a new CustomerDataCustomerInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDataCustomerInterfaceWithDefaults() *CustomerDataCustomerInterface {
	this := CustomerDataCustomerInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CustomerDataCustomerInterface) SetId(v int32) {
	o.Id = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetGroupId() int32 {
	if o == nil || IsNil(o.GroupId) {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *CustomerDataCustomerInterface) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetDefaultBilling returns the DefaultBilling field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetDefaultBilling() string {
	if o == nil || IsNil(o.DefaultBilling) {
		var ret string
		return ret
	}
	return *o.DefaultBilling
}

// GetDefaultBillingOk returns a tuple with the DefaultBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetDefaultBillingOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultBilling) {
		return nil, false
	}
	return o.DefaultBilling, true
}

// HasDefaultBilling returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasDefaultBilling() bool {
	if o != nil && !IsNil(o.DefaultBilling) {
		return true
	}

	return false
}

// SetDefaultBilling gets a reference to the given string and assigns it to the DefaultBilling field.
func (o *CustomerDataCustomerInterface) SetDefaultBilling(v string) {
	o.DefaultBilling = &v
}

// GetDefaultShipping returns the DefaultShipping field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetDefaultShipping() string {
	if o == nil || IsNil(o.DefaultShipping) {
		var ret string
		return ret
	}
	return *o.DefaultShipping
}

// GetDefaultShippingOk returns a tuple with the DefaultShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetDefaultShippingOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultShipping) {
		return nil, false
	}
	return o.DefaultShipping, true
}

// HasDefaultShipping returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasDefaultShipping() bool {
	if o != nil && !IsNil(o.DefaultShipping) {
		return true
	}

	return false
}

// SetDefaultShipping gets a reference to the given string and assigns it to the DefaultShipping field.
func (o *CustomerDataCustomerInterface) SetDefaultShipping(v string) {
	o.DefaultShipping = &v
}

// GetConfirmation returns the Confirmation field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetConfirmation() string {
	if o == nil || IsNil(o.Confirmation) {
		var ret string
		return ret
	}
	return *o.Confirmation
}

// GetConfirmationOk returns a tuple with the Confirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetConfirmationOk() (*string, bool) {
	if o == nil || IsNil(o.Confirmation) {
		return nil, false
	}
	return o.Confirmation, true
}

// HasConfirmation returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasConfirmation() bool {
	if o != nil && !IsNil(o.Confirmation) {
		return true
	}

	return false
}

// SetConfirmation gets a reference to the given string and assigns it to the Confirmation field.
func (o *CustomerDataCustomerInterface) SetConfirmation(v string) {
	o.Confirmation = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CustomerDataCustomerInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CustomerDataCustomerInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetCreatedIn returns the CreatedIn field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetCreatedIn() string {
	if o == nil || IsNil(o.CreatedIn) {
		var ret string
		return ret
	}
	return *o.CreatedIn
}

// GetCreatedInOk returns a tuple with the CreatedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetCreatedInOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedIn) {
		return nil, false
	}
	return o.CreatedIn, true
}

// HasCreatedIn returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasCreatedIn() bool {
	if o != nil && !IsNil(o.CreatedIn) {
		return true
	}

	return false
}

// SetCreatedIn gets a reference to the given string and assigns it to the CreatedIn field.
func (o *CustomerDataCustomerInterface) SetCreatedIn(v string) {
	o.CreatedIn = &v
}

// GetDob returns the Dob field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetDob() string {
	if o == nil || IsNil(o.Dob) {
		var ret string
		return ret
	}
	return *o.Dob
}

// GetDobOk returns a tuple with the Dob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetDobOk() (*string, bool) {
	if o == nil || IsNil(o.Dob) {
		return nil, false
	}
	return o.Dob, true
}

// HasDob returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasDob() bool {
	if o != nil && !IsNil(o.Dob) {
		return true
	}

	return false
}

// SetDob gets a reference to the given string and assigns it to the Dob field.
func (o *CustomerDataCustomerInterface) SetDob(v string) {
	o.Dob = &v
}

// GetEmail returns the Email field value
func (o *CustomerDataCustomerInterface) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CustomerDataCustomerInterface) SetEmail(v string) {
	o.Email = v
}

// GetFirstname returns the Firstname field value
func (o *CustomerDataCustomerInterface) GetFirstname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetFirstnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Firstname, true
}

// SetFirstname sets field value
func (o *CustomerDataCustomerInterface) SetFirstname(v string) {
	o.Firstname = v
}

// GetLastname returns the Lastname field value
func (o *CustomerDataCustomerInterface) GetLastname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetLastnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lastname, true
}

// SetLastname sets field value
func (o *CustomerDataCustomerInterface) SetLastname(v string) {
	o.Lastname = v
}

// GetMiddlename returns the Middlename field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetMiddlename() string {
	if o == nil || IsNil(o.Middlename) {
		var ret string
		return ret
	}
	return *o.Middlename
}

// GetMiddlenameOk returns a tuple with the Middlename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetMiddlenameOk() (*string, bool) {
	if o == nil || IsNil(o.Middlename) {
		return nil, false
	}
	return o.Middlename, true
}

// HasMiddlename returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasMiddlename() bool {
	if o != nil && !IsNil(o.Middlename) {
		return true
	}

	return false
}

// SetMiddlename gets a reference to the given string and assigns it to the Middlename field.
func (o *CustomerDataCustomerInterface) SetMiddlename(v string) {
	o.Middlename = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *CustomerDataCustomerInterface) SetPrefix(v string) {
	o.Prefix = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetSuffix() string {
	if o == nil || IsNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Suffix) {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasSuffix() bool {
	if o != nil && !IsNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *CustomerDataCustomerInterface) SetSuffix(v string) {
	o.Suffix = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetGender() int32 {
	if o == nil || IsNil(o.Gender) {
		var ret int32
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetGenderOk() (*int32, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given int32 and assigns it to the Gender field.
func (o *CustomerDataCustomerInterface) SetGender(v int32) {
	o.Gender = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetStoreId() int32 {
	if o == nil || IsNil(o.StoreId) {
		var ret int32
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetStoreIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given int32 and assigns it to the StoreId field.
func (o *CustomerDataCustomerInterface) SetStoreId(v int32) {
	o.StoreId = &v
}

// GetTaxvat returns the Taxvat field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetTaxvat() string {
	if o == nil || IsNil(o.Taxvat) {
		var ret string
		return ret
	}
	return *o.Taxvat
}

// GetTaxvatOk returns a tuple with the Taxvat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetTaxvatOk() (*string, bool) {
	if o == nil || IsNil(o.Taxvat) {
		return nil, false
	}
	return o.Taxvat, true
}

// HasTaxvat returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasTaxvat() bool {
	if o != nil && !IsNil(o.Taxvat) {
		return true
	}

	return false
}

// SetTaxvat gets a reference to the given string and assigns it to the Taxvat field.
func (o *CustomerDataCustomerInterface) SetTaxvat(v string) {
	o.Taxvat = &v
}

// GetWebsiteId returns the WebsiteId field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetWebsiteId() int32 {
	if o == nil || IsNil(o.WebsiteId) {
		var ret int32
		return ret
	}
	return *o.WebsiteId
}

// GetWebsiteIdOk returns a tuple with the WebsiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetWebsiteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.WebsiteId) {
		return nil, false
	}
	return o.WebsiteId, true
}

// HasWebsiteId returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasWebsiteId() bool {
	if o != nil && !IsNil(o.WebsiteId) {
		return true
	}

	return false
}

// SetWebsiteId gets a reference to the given int32 and assigns it to the WebsiteId field.
func (o *CustomerDataCustomerInterface) SetWebsiteId(v int32) {
	o.WebsiteId = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetAddresses() []CustomerDataAddressInterface {
	if o == nil || IsNil(o.Addresses) {
		var ret []CustomerDataAddressInterface
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetAddressesOk() ([]CustomerDataAddressInterface, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []CustomerDataAddressInterface and assigns it to the Addresses field.
func (o *CustomerDataCustomerInterface) SetAddresses(v []CustomerDataAddressInterface) {
	o.Addresses = v
}

// GetDisableAutoGroupChange returns the DisableAutoGroupChange field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetDisableAutoGroupChange() int32 {
	if o == nil || IsNil(o.DisableAutoGroupChange) {
		var ret int32
		return ret
	}
	return *o.DisableAutoGroupChange
}

// GetDisableAutoGroupChangeOk returns a tuple with the DisableAutoGroupChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetDisableAutoGroupChangeOk() (*int32, bool) {
	if o == nil || IsNil(o.DisableAutoGroupChange) {
		return nil, false
	}
	return o.DisableAutoGroupChange, true
}

// HasDisableAutoGroupChange returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasDisableAutoGroupChange() bool {
	if o != nil && !IsNil(o.DisableAutoGroupChange) {
		return true
	}

	return false
}

// SetDisableAutoGroupChange gets a reference to the given int32 and assigns it to the DisableAutoGroupChange field.
func (o *CustomerDataCustomerInterface) SetDisableAutoGroupChange(v int32) {
	o.DisableAutoGroupChange = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetExtensionAttributes() CustomerDataCustomerExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret CustomerDataCustomerExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetExtensionAttributesOk() (*CustomerDataCustomerExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given CustomerDataCustomerExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *CustomerDataCustomerInterface) SetExtensionAttributes(v CustomerDataCustomerExtensionInterface) {
	o.ExtensionAttributes = &v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *CustomerDataCustomerInterface) GetCustomAttributes() []FrameworkAttributeInterface {
	if o == nil || IsNil(o.CustomAttributes) {
		var ret []FrameworkAttributeInterface
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataCustomerInterface) GetCustomAttributesOk() ([]FrameworkAttributeInterface, bool) {
	if o == nil || IsNil(o.CustomAttributes) {
		return nil, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *CustomerDataCustomerInterface) HasCustomAttributes() bool {
	if o != nil && !IsNil(o.CustomAttributes) {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given []FrameworkAttributeInterface and assigns it to the CustomAttributes field.
func (o *CustomerDataCustomerInterface) SetCustomAttributes(v []FrameworkAttributeInterface) {
	o.CustomAttributes = v
}

func (o CustomerDataCustomerInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerDataCustomerInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !IsNil(o.DefaultBilling) {
		toSerialize["default_billing"] = o.DefaultBilling
	}
	if !IsNil(o.DefaultShipping) {
		toSerialize["default_shipping"] = o.DefaultShipping
	}
	if !IsNil(o.Confirmation) {
		toSerialize["confirmation"] = o.Confirmation
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.CreatedIn) {
		toSerialize["created_in"] = o.CreatedIn
	}
	if !IsNil(o.Dob) {
		toSerialize["dob"] = o.Dob
	}
	toSerialize["email"] = o.Email
	toSerialize["firstname"] = o.Firstname
	toSerialize["lastname"] = o.Lastname
	if !IsNil(o.Middlename) {
		toSerialize["middlename"] = o.Middlename
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.Taxvat) {
		toSerialize["taxvat"] = o.Taxvat
	}
	if !IsNil(o.WebsiteId) {
		toSerialize["website_id"] = o.WebsiteId
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.DisableAutoGroupChange) {
		toSerialize["disable_auto_group_change"] = o.DisableAutoGroupChange
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.CustomAttributes) {
		toSerialize["custom_attributes"] = o.CustomAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerDataCustomerInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"firstname",
		"lastname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerDataCustomerInterface := _CustomerDataCustomerInterface{}

	err = json.Unmarshal(data, &varCustomerDataCustomerInterface)

	if err != nil {
		return err
	}

	*o = CustomerDataCustomerInterface(varCustomerDataCustomerInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "group_id")
		delete(additionalProperties, "default_billing")
		delete(additionalProperties, "default_shipping")
		delete(additionalProperties, "confirmation")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "created_in")
		delete(additionalProperties, "dob")
		delete(additionalProperties, "email")
		delete(additionalProperties, "firstname")
		delete(additionalProperties, "lastname")
		delete(additionalProperties, "middlename")
		delete(additionalProperties, "prefix")
		delete(additionalProperties, "suffix")
		delete(additionalProperties, "gender")
		delete(additionalProperties, "store_id")
		delete(additionalProperties, "taxvat")
		delete(additionalProperties, "website_id")
		delete(additionalProperties, "addresses")
		delete(additionalProperties, "disable_auto_group_change")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "custom_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerDataCustomerInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CustomerDataCustomerInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCustomerDataCustomerInterface struct {
	value *CustomerDataCustomerInterface
	isSet bool
}

func (v NullableCustomerDataCustomerInterface) Get() *CustomerDataCustomerInterface {
	return v.value
}

func (v *NullableCustomerDataCustomerInterface) Set(val *CustomerDataCustomerInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerDataCustomerInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerDataCustomerInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerDataCustomerInterface(val *CustomerDataCustomerInterface) *NullableCustomerDataCustomerInterface {
	return &NullableCustomerDataCustomerInterface{value: val, isSet: true}
}

func (v NullableCustomerDataCustomerInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerDataCustomerInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
