/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the CatalogDataProductCustomOptionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogDataProductCustomOptionInterface{}

// CatalogDataProductCustomOptionInterface
type CatalogDataProductCustomOptionInterface struct {
	// Product SKU
	ProductSku string `json:"product_sku"`
	// Option id
	OptionId *int32 `json:"option_id,omitempty"`
	// Option title
	Title string `json:"title"`
	// Option type
	Type string `json:"type"`
	// Sort order
	SortOrder int32 `json:"sort_order"`
	// Is require
	IsRequire bool `json:"is_require"`
	// Price
	Price *float32 `json:"price,omitempty"`
	// Price type
	PriceType *string `json:"price_type,omitempty"`
	// Sku
	Sku           *string                                         `json:"sku,omitempty"`
	FileExtension *string                                         `json:"file_extension,omitempty"`
	MaxCharacters *int32                                          `json:"max_characters,omitempty"`
	ImageSizeX    *int32                                          `json:"image_size_x,omitempty"`
	ImageSizeY    *int32                                          `json:"image_size_y,omitempty"`
	Values        []CatalogDataProductCustomOptionValuesInterface `json:"values,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CatalogDataProductCustomOptionInterface CatalogDataProductCustomOptionInterface

// NewCatalogDataProductCustomOptionInterface instantiates a new CatalogDataProductCustomOptionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogDataProductCustomOptionInterface(productSku string, title string, type_ string, sortOrder int32, isRequire bool) *CatalogDataProductCustomOptionInterface {
	this := CatalogDataProductCustomOptionInterface{}
	this.ProductSku = productSku
	this.Title = title
	this.Type = type_
	this.SortOrder = sortOrder
	this.IsRequire = isRequire
	return &this
}

// NewCatalogDataProductCustomOptionInterfaceWithDefaults instantiates a new CatalogDataProductCustomOptionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogDataProductCustomOptionInterfaceWithDefaults() *CatalogDataProductCustomOptionInterface {
	this := CatalogDataProductCustomOptionInterface{}
	return &this
}

// GetProductSku returns the ProductSku field value
func (o *CatalogDataProductCustomOptionInterface) GetProductSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductSku
}

// GetProductSkuOk returns a tuple with the ProductSku field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetProductSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductSku, true
}

// SetProductSku sets field value
func (o *CatalogDataProductCustomOptionInterface) SetProductSku(v string) {
	o.ProductSku = v
}

// GetOptionId returns the OptionId field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetOptionId() int32 {
	if o == nil || IsNil(o.OptionId) {
		var ret int32
		return ret
	}
	return *o.OptionId
}

// GetOptionIdOk returns a tuple with the OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetOptionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OptionId) {
		return nil, false
	}
	return o.OptionId, true
}

// HasOptionId returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasOptionId() bool {
	if o != nil && !IsNil(o.OptionId) {
		return true
	}

	return false
}

// SetOptionId gets a reference to the given int32 and assigns it to the OptionId field.
func (o *CatalogDataProductCustomOptionInterface) SetOptionId(v int32) {
	o.OptionId = &v
}

// GetTitle returns the Title field value
func (o *CatalogDataProductCustomOptionInterface) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CatalogDataProductCustomOptionInterface) SetTitle(v string) {
	o.Title = v
}

// GetType returns the Type field value
func (o *CatalogDataProductCustomOptionInterface) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CatalogDataProductCustomOptionInterface) SetType(v string) {
	o.Type = v
}

// GetSortOrder returns the SortOrder field value
func (o *CatalogDataProductCustomOptionInterface) GetSortOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetSortOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SortOrder, true
}

// SetSortOrder sets field value
func (o *CatalogDataProductCustomOptionInterface) SetSortOrder(v int32) {
	o.SortOrder = v
}

// GetIsRequire returns the IsRequire field value
func (o *CatalogDataProductCustomOptionInterface) GetIsRequire() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRequire
}

// GetIsRequireOk returns a tuple with the IsRequire field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetIsRequireOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRequire, true
}

// SetIsRequire sets field value
func (o *CatalogDataProductCustomOptionInterface) SetIsRequire(v bool) {
	o.IsRequire = v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *CatalogDataProductCustomOptionInterface) SetPrice(v float32) {
	o.Price = &v
}

// GetPriceType returns the PriceType field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetPriceType() string {
	if o == nil || IsNil(o.PriceType) {
		var ret string
		return ret
	}
	return *o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetPriceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceType) {
		return nil, false
	}
	return o.PriceType, true
}

// HasPriceType returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasPriceType() bool {
	if o != nil && !IsNil(o.PriceType) {
		return true
	}

	return false
}

// SetPriceType gets a reference to the given string and assigns it to the PriceType field.
func (o *CatalogDataProductCustomOptionInterface) SetPriceType(v string) {
	o.PriceType = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *CatalogDataProductCustomOptionInterface) SetSku(v string) {
	o.Sku = &v
}

// GetFileExtension returns the FileExtension field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetFileExtension() string {
	if o == nil || IsNil(o.FileExtension) {
		var ret string
		return ret
	}
	return *o.FileExtension
}

// GetFileExtensionOk returns a tuple with the FileExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetFileExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.FileExtension) {
		return nil, false
	}
	return o.FileExtension, true
}

// HasFileExtension returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasFileExtension() bool {
	if o != nil && !IsNil(o.FileExtension) {
		return true
	}

	return false
}

// SetFileExtension gets a reference to the given string and assigns it to the FileExtension field.
func (o *CatalogDataProductCustomOptionInterface) SetFileExtension(v string) {
	o.FileExtension = &v
}

// GetMaxCharacters returns the MaxCharacters field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetMaxCharacters() int32 {
	if o == nil || IsNil(o.MaxCharacters) {
		var ret int32
		return ret
	}
	return *o.MaxCharacters
}

// GetMaxCharactersOk returns a tuple with the MaxCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetMaxCharactersOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxCharacters) {
		return nil, false
	}
	return o.MaxCharacters, true
}

// HasMaxCharacters returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasMaxCharacters() bool {
	if o != nil && !IsNil(o.MaxCharacters) {
		return true
	}

	return false
}

// SetMaxCharacters gets a reference to the given int32 and assigns it to the MaxCharacters field.
func (o *CatalogDataProductCustomOptionInterface) SetMaxCharacters(v int32) {
	o.MaxCharacters = &v
}

// GetImageSizeX returns the ImageSizeX field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetImageSizeX() int32 {
	if o == nil || IsNil(o.ImageSizeX) {
		var ret int32
		return ret
	}
	return *o.ImageSizeX
}

// GetImageSizeXOk returns a tuple with the ImageSizeX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetImageSizeXOk() (*int32, bool) {
	if o == nil || IsNil(o.ImageSizeX) {
		return nil, false
	}
	return o.ImageSizeX, true
}

// HasImageSizeX returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasImageSizeX() bool {
	if o != nil && !IsNil(o.ImageSizeX) {
		return true
	}

	return false
}

// SetImageSizeX gets a reference to the given int32 and assigns it to the ImageSizeX field.
func (o *CatalogDataProductCustomOptionInterface) SetImageSizeX(v int32) {
	o.ImageSizeX = &v
}

// GetImageSizeY returns the ImageSizeY field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetImageSizeY() int32 {
	if o == nil || IsNil(o.ImageSizeY) {
		var ret int32
		return ret
	}
	return *o.ImageSizeY
}

// GetImageSizeYOk returns a tuple with the ImageSizeY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetImageSizeYOk() (*int32, bool) {
	if o == nil || IsNil(o.ImageSizeY) {
		return nil, false
	}
	return o.ImageSizeY, true
}

// HasImageSizeY returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasImageSizeY() bool {
	if o != nil && !IsNil(o.ImageSizeY) {
		return true
	}

	return false
}

// SetImageSizeY gets a reference to the given int32 and assigns it to the ImageSizeY field.
func (o *CatalogDataProductCustomOptionInterface) SetImageSizeY(v int32) {
	o.ImageSizeY = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetValues() []CatalogDataProductCustomOptionValuesInterface {
	if o == nil || IsNil(o.Values) {
		var ret []CatalogDataProductCustomOptionValuesInterface
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetValuesOk() ([]CatalogDataProductCustomOptionValuesInterface, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []CatalogDataProductCustomOptionValuesInterface and assigns it to the Values field.
func (o *CatalogDataProductCustomOptionInterface) SetValues(v []CatalogDataProductCustomOptionValuesInterface) {
	o.Values = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CatalogDataProductCustomOptionInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductCustomOptionInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CatalogDataProductCustomOptionInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *CatalogDataProductCustomOptionInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o CatalogDataProductCustomOptionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogDataProductCustomOptionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["product_sku"] = o.ProductSku
	if !IsNil(o.OptionId) {
		toSerialize["option_id"] = o.OptionId
	}
	toSerialize["title"] = o.Title
	toSerialize["type"] = o.Type
	toSerialize["sort_order"] = o.SortOrder
	toSerialize["is_require"] = o.IsRequire
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceType) {
		toSerialize["price_type"] = o.PriceType
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.FileExtension) {
		toSerialize["file_extension"] = o.FileExtension
	}
	if !IsNil(o.MaxCharacters) {
		toSerialize["max_characters"] = o.MaxCharacters
	}
	if !IsNil(o.ImageSizeX) {
		toSerialize["image_size_x"] = o.ImageSizeX
	}
	if !IsNil(o.ImageSizeY) {
		toSerialize["image_size_y"] = o.ImageSizeY
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CatalogDataProductCustomOptionInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"product_sku",
		"title",
		"type",
		"sort_order",
		"is_require",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogDataProductCustomOptionInterface := _CatalogDataProductCustomOptionInterface{}

	err = json.Unmarshal(data, &varCatalogDataProductCustomOptionInterface)

	if err != nil {
		return err
	}

	*o = CatalogDataProductCustomOptionInterface(varCatalogDataProductCustomOptionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "product_sku")
		delete(additionalProperties, "option_id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "type")
		delete(additionalProperties, "sort_order")
		delete(additionalProperties, "is_require")
		delete(additionalProperties, "price")
		delete(additionalProperties, "price_type")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "file_extension")
		delete(additionalProperties, "max_characters")
		delete(additionalProperties, "image_size_x")
		delete(additionalProperties, "image_size_y")
		delete(additionalProperties, "values")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CatalogDataProductCustomOptionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CatalogDataProductCustomOptionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCatalogDataProductCustomOptionInterface struct {
	value *CatalogDataProductCustomOptionInterface
	isSet bool
}

func (v NullableCatalogDataProductCustomOptionInterface) Get() *CatalogDataProductCustomOptionInterface {
	return v.value
}

func (v *NullableCatalogDataProductCustomOptionInterface) Set(val *CatalogDataProductCustomOptionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogDataProductCustomOptionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogDataProductCustomOptionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogDataProductCustomOptionInterface(val *CatalogDataProductCustomOptionInterface) *NullableCatalogDataProductCustomOptionInterface {
	return &NullableCatalogDataProductCustomOptionInterface{value: val, isSet: true}
}

func (v NullableCatalogDataProductCustomOptionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogDataProductCustomOptionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
