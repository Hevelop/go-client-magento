/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerDataAttributeMetadataInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerDataAttributeMetadataInterface{}

// CustomerDataAttributeMetadataInterface Customer attribute metadata interface.
type CustomerDataAttributeMetadataInterface struct {
	// HTML for input element.
	FrontendInput string `json:"frontend_input"`
	// Template used for input (e.g. \"date\")
	InputFilter string `json:"input_filter"`
	// Label of the store.
	StoreLabel string `json:"store_label"`
	// Validation rules.
	ValidationRules []CustomerDataValidationRuleInterface `json:"validation_rules"`
	// Of lines of the attribute value.
	MultilineCount int32 `json:"multiline_count"`
	// Attribute is visible on frontend.
	Visible bool `json:"visible"`
	// Attribute is required.
	Required bool `json:"required"`
	// Data model for attribute.
	DataModel string `json:"data_model"`
	// Options of the attribute (key => value pairs for select)
	Options []CustomerDataOptionInterface `json:"options"`
	// Class which is used to display the attribute on frontend.
	FrontendClass string `json:"frontend_class"`
	// Current attribute has been defined by a user.
	UserDefined bool `json:"user_defined"`
	// Attributes sort order.
	SortOrder int32 `json:"sort_order"`
	// Label which supposed to be displayed on frontend.
	FrontendLabel string `json:"frontend_label"`
	// The note attribute for the element.
	Note string `json:"note"`
	// This is a system attribute.
	System bool `json:"system"`
	// Backend type.
	BackendType string `json:"backend_type"`
	// It is used in customer grid
	IsUsedInGrid *bool `json:"is_used_in_grid,omitempty"`
	// It is visible in customer grid
	IsVisibleInGrid *bool `json:"is_visible_in_grid,omitempty"`
	// It is filterable in customer grid
	IsFilterableInGrid *bool `json:"is_filterable_in_grid,omitempty"`
	// It is searchable in customer grid
	IsSearchableInGrid *bool `json:"is_searchable_in_grid,omitempty"`
	// Code of the attribute.
	AttributeCode        string `json:"attribute_code"`
	AdditionalProperties map[string]interface{}
}

type _CustomerDataAttributeMetadataInterface CustomerDataAttributeMetadataInterface

// NewCustomerDataAttributeMetadataInterface instantiates a new CustomerDataAttributeMetadataInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerDataAttributeMetadataInterface(frontendInput string, inputFilter string, storeLabel string, validationRules []CustomerDataValidationRuleInterface, multilineCount int32, visible bool, required bool, dataModel string, options []CustomerDataOptionInterface, frontendClass string, userDefined bool, sortOrder int32, frontendLabel string, note string, system bool, backendType string, attributeCode string) *CustomerDataAttributeMetadataInterface {
	this := CustomerDataAttributeMetadataInterface{}
	this.FrontendInput = frontendInput
	this.InputFilter = inputFilter
	this.StoreLabel = storeLabel
	this.ValidationRules = validationRules
	this.MultilineCount = multilineCount
	this.Visible = visible
	this.Required = required
	this.DataModel = dataModel
	this.Options = options
	this.FrontendClass = frontendClass
	this.UserDefined = userDefined
	this.SortOrder = sortOrder
	this.FrontendLabel = frontendLabel
	this.Note = note
	this.System = system
	this.BackendType = backendType
	this.AttributeCode = attributeCode
	return &this
}

// NewCustomerDataAttributeMetadataInterfaceWithDefaults instantiates a new CustomerDataAttributeMetadataInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDataAttributeMetadataInterfaceWithDefaults() *CustomerDataAttributeMetadataInterface {
	this := CustomerDataAttributeMetadataInterface{}
	return &this
}

// GetFrontendInput returns the FrontendInput field value
func (o *CustomerDataAttributeMetadataInterface) GetFrontendInput() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrontendInput
}

// GetFrontendInputOk returns a tuple with the FrontendInput field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetFrontendInputOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrontendInput, true
}

// SetFrontendInput sets field value
func (o *CustomerDataAttributeMetadataInterface) SetFrontendInput(v string) {
	o.FrontendInput = v
}

// GetInputFilter returns the InputFilter field value
func (o *CustomerDataAttributeMetadataInterface) GetInputFilter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputFilter
}

// GetInputFilterOk returns a tuple with the InputFilter field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetInputFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputFilter, true
}

// SetInputFilter sets field value
func (o *CustomerDataAttributeMetadataInterface) SetInputFilter(v string) {
	o.InputFilter = v
}

// GetStoreLabel returns the StoreLabel field value
func (o *CustomerDataAttributeMetadataInterface) GetStoreLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StoreLabel
}

// GetStoreLabelOk returns a tuple with the StoreLabel field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetStoreLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoreLabel, true
}

// SetStoreLabel sets field value
func (o *CustomerDataAttributeMetadataInterface) SetStoreLabel(v string) {
	o.StoreLabel = v
}

// GetValidationRules returns the ValidationRules field value
func (o *CustomerDataAttributeMetadataInterface) GetValidationRules() []CustomerDataValidationRuleInterface {
	if o == nil {
		var ret []CustomerDataValidationRuleInterface
		return ret
	}

	return o.ValidationRules
}

// GetValidationRulesOk returns a tuple with the ValidationRules field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetValidationRulesOk() ([]CustomerDataValidationRuleInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidationRules, true
}

// SetValidationRules sets field value
func (o *CustomerDataAttributeMetadataInterface) SetValidationRules(v []CustomerDataValidationRuleInterface) {
	o.ValidationRules = v
}

// GetMultilineCount returns the MultilineCount field value
func (o *CustomerDataAttributeMetadataInterface) GetMultilineCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MultilineCount
}

// GetMultilineCountOk returns a tuple with the MultilineCount field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetMultilineCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MultilineCount, true
}

// SetMultilineCount sets field value
func (o *CustomerDataAttributeMetadataInterface) SetMultilineCount(v int32) {
	o.MultilineCount = v
}

// GetVisible returns the Visible field value
func (o *CustomerDataAttributeMetadataInterface) GetVisible() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetVisibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visible, true
}

// SetVisible sets field value
func (o *CustomerDataAttributeMetadataInterface) SetVisible(v bool) {
	o.Visible = v
}

// GetRequired returns the Required field value
func (o *CustomerDataAttributeMetadataInterface) GetRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Required, true
}

// SetRequired sets field value
func (o *CustomerDataAttributeMetadataInterface) SetRequired(v bool) {
	o.Required = v
}

// GetDataModel returns the DataModel field value
func (o *CustomerDataAttributeMetadataInterface) GetDataModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataModel
}

// GetDataModelOk returns a tuple with the DataModel field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetDataModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataModel, true
}

// SetDataModel sets field value
func (o *CustomerDataAttributeMetadataInterface) SetDataModel(v string) {
	o.DataModel = v
}

// GetOptions returns the Options field value
func (o *CustomerDataAttributeMetadataInterface) GetOptions() []CustomerDataOptionInterface {
	if o == nil {
		var ret []CustomerDataOptionInterface
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetOptionsOk() ([]CustomerDataOptionInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *CustomerDataAttributeMetadataInterface) SetOptions(v []CustomerDataOptionInterface) {
	o.Options = v
}

// GetFrontendClass returns the FrontendClass field value
func (o *CustomerDataAttributeMetadataInterface) GetFrontendClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrontendClass
}

// GetFrontendClassOk returns a tuple with the FrontendClass field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetFrontendClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrontendClass, true
}

// SetFrontendClass sets field value
func (o *CustomerDataAttributeMetadataInterface) SetFrontendClass(v string) {
	o.FrontendClass = v
}

// GetUserDefined returns the UserDefined field value
func (o *CustomerDataAttributeMetadataInterface) GetUserDefined() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UserDefined
}

// GetUserDefinedOk returns a tuple with the UserDefined field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetUserDefinedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserDefined, true
}

// SetUserDefined sets field value
func (o *CustomerDataAttributeMetadataInterface) SetUserDefined(v bool) {
	o.UserDefined = v
}

// GetSortOrder returns the SortOrder field value
func (o *CustomerDataAttributeMetadataInterface) GetSortOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetSortOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SortOrder, true
}

// SetSortOrder sets field value
func (o *CustomerDataAttributeMetadataInterface) SetSortOrder(v int32) {
	o.SortOrder = v
}

// GetFrontendLabel returns the FrontendLabel field value
func (o *CustomerDataAttributeMetadataInterface) GetFrontendLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrontendLabel
}

// GetFrontendLabelOk returns a tuple with the FrontendLabel field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetFrontendLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrontendLabel, true
}

// SetFrontendLabel sets field value
func (o *CustomerDataAttributeMetadataInterface) SetFrontendLabel(v string) {
	o.FrontendLabel = v
}

// GetNote returns the Note field value
func (o *CustomerDataAttributeMetadataInterface) GetNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Note
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Note, true
}

// SetNote sets field value
func (o *CustomerDataAttributeMetadataInterface) SetNote(v string) {
	o.Note = v
}

// GetSystem returns the System field value
func (o *CustomerDataAttributeMetadataInterface) GetSystem() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.System
}

// GetSystemOk returns a tuple with the System field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetSystemOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.System, true
}

// SetSystem sets field value
func (o *CustomerDataAttributeMetadataInterface) SetSystem(v bool) {
	o.System = v
}

// GetBackendType returns the BackendType field value
func (o *CustomerDataAttributeMetadataInterface) GetBackendType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackendType
}

// GetBackendTypeOk returns a tuple with the BackendType field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetBackendTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackendType, true
}

// SetBackendType sets field value
func (o *CustomerDataAttributeMetadataInterface) SetBackendType(v string) {
	o.BackendType = v
}

// GetIsUsedInGrid returns the IsUsedInGrid field value if set, zero value otherwise.
func (o *CustomerDataAttributeMetadataInterface) GetIsUsedInGrid() bool {
	if o == nil || IsNil(o.IsUsedInGrid) {
		var ret bool
		return ret
	}
	return *o.IsUsedInGrid
}

// GetIsUsedInGridOk returns a tuple with the IsUsedInGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetIsUsedInGridOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsedInGrid) {
		return nil, false
	}
	return o.IsUsedInGrid, true
}

// HasIsUsedInGrid returns a boolean if a field has been set.
func (o *CustomerDataAttributeMetadataInterface) HasIsUsedInGrid() bool {
	if o != nil && !IsNil(o.IsUsedInGrid) {
		return true
	}

	return false
}

// SetIsUsedInGrid gets a reference to the given bool and assigns it to the IsUsedInGrid field.
func (o *CustomerDataAttributeMetadataInterface) SetIsUsedInGrid(v bool) {
	o.IsUsedInGrid = &v
}

// GetIsVisibleInGrid returns the IsVisibleInGrid field value if set, zero value otherwise.
func (o *CustomerDataAttributeMetadataInterface) GetIsVisibleInGrid() bool {
	if o == nil || IsNil(o.IsVisibleInGrid) {
		var ret bool
		return ret
	}
	return *o.IsVisibleInGrid
}

// GetIsVisibleInGridOk returns a tuple with the IsVisibleInGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetIsVisibleInGridOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVisibleInGrid) {
		return nil, false
	}
	return o.IsVisibleInGrid, true
}

// HasIsVisibleInGrid returns a boolean if a field has been set.
func (o *CustomerDataAttributeMetadataInterface) HasIsVisibleInGrid() bool {
	if o != nil && !IsNil(o.IsVisibleInGrid) {
		return true
	}

	return false
}

// SetIsVisibleInGrid gets a reference to the given bool and assigns it to the IsVisibleInGrid field.
func (o *CustomerDataAttributeMetadataInterface) SetIsVisibleInGrid(v bool) {
	o.IsVisibleInGrid = &v
}

// GetIsFilterableInGrid returns the IsFilterableInGrid field value if set, zero value otherwise.
func (o *CustomerDataAttributeMetadataInterface) GetIsFilterableInGrid() bool {
	if o == nil || IsNil(o.IsFilterableInGrid) {
		var ret bool
		return ret
	}
	return *o.IsFilterableInGrid
}

// GetIsFilterableInGridOk returns a tuple with the IsFilterableInGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetIsFilterableInGridOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFilterableInGrid) {
		return nil, false
	}
	return o.IsFilterableInGrid, true
}

// HasIsFilterableInGrid returns a boolean if a field has been set.
func (o *CustomerDataAttributeMetadataInterface) HasIsFilterableInGrid() bool {
	if o != nil && !IsNil(o.IsFilterableInGrid) {
		return true
	}

	return false
}

// SetIsFilterableInGrid gets a reference to the given bool and assigns it to the IsFilterableInGrid field.
func (o *CustomerDataAttributeMetadataInterface) SetIsFilterableInGrid(v bool) {
	o.IsFilterableInGrid = &v
}

// GetIsSearchableInGrid returns the IsSearchableInGrid field value if set, zero value otherwise.
func (o *CustomerDataAttributeMetadataInterface) GetIsSearchableInGrid() bool {
	if o == nil || IsNil(o.IsSearchableInGrid) {
		var ret bool
		return ret
	}
	return *o.IsSearchableInGrid
}

// GetIsSearchableInGridOk returns a tuple with the IsSearchableInGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetIsSearchableInGridOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSearchableInGrid) {
		return nil, false
	}
	return o.IsSearchableInGrid, true
}

// HasIsSearchableInGrid returns a boolean if a field has been set.
func (o *CustomerDataAttributeMetadataInterface) HasIsSearchableInGrid() bool {
	if o != nil && !IsNil(o.IsSearchableInGrid) {
		return true
	}

	return false
}

// SetIsSearchableInGrid gets a reference to the given bool and assigns it to the IsSearchableInGrid field.
func (o *CustomerDataAttributeMetadataInterface) SetIsSearchableInGrid(v bool) {
	o.IsSearchableInGrid = &v
}

// GetAttributeCode returns the AttributeCode field value
func (o *CustomerDataAttributeMetadataInterface) GetAttributeCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeCode
}

// GetAttributeCodeOk returns a tuple with the AttributeCode field value
// and a boolean to check if the value has been set.
func (o *CustomerDataAttributeMetadataInterface) GetAttributeCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeCode, true
}

// SetAttributeCode sets field value
func (o *CustomerDataAttributeMetadataInterface) SetAttributeCode(v string) {
	o.AttributeCode = v
}

func (o CustomerDataAttributeMetadataInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerDataAttributeMetadataInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["frontend_input"] = o.FrontendInput
	toSerialize["input_filter"] = o.InputFilter
	toSerialize["store_label"] = o.StoreLabel
	toSerialize["validation_rules"] = o.ValidationRules
	toSerialize["multiline_count"] = o.MultilineCount
	toSerialize["visible"] = o.Visible
	toSerialize["required"] = o.Required
	toSerialize["data_model"] = o.DataModel
	toSerialize["options"] = o.Options
	toSerialize["frontend_class"] = o.FrontendClass
	toSerialize["user_defined"] = o.UserDefined
	toSerialize["sort_order"] = o.SortOrder
	toSerialize["frontend_label"] = o.FrontendLabel
	toSerialize["note"] = o.Note
	toSerialize["system"] = o.System
	toSerialize["backend_type"] = o.BackendType
	if !IsNil(o.IsUsedInGrid) {
		toSerialize["is_used_in_grid"] = o.IsUsedInGrid
	}
	if !IsNil(o.IsVisibleInGrid) {
		toSerialize["is_visible_in_grid"] = o.IsVisibleInGrid
	}
	if !IsNil(o.IsFilterableInGrid) {
		toSerialize["is_filterable_in_grid"] = o.IsFilterableInGrid
	}
	if !IsNil(o.IsSearchableInGrid) {
		toSerialize["is_searchable_in_grid"] = o.IsSearchableInGrid
	}
	toSerialize["attribute_code"] = o.AttributeCode

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerDataAttributeMetadataInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"frontend_input",
		"input_filter",
		"store_label",
		"validation_rules",
		"multiline_count",
		"visible",
		"required",
		"data_model",
		"options",
		"frontend_class",
		"user_defined",
		"sort_order",
		"frontend_label",
		"note",
		"system",
		"backend_type",
		"attribute_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerDataAttributeMetadataInterface := _CustomerDataAttributeMetadataInterface{}

	err = json.Unmarshal(data, &varCustomerDataAttributeMetadataInterface)

	if err != nil {
		return err
	}

	*o = CustomerDataAttributeMetadataInterface(varCustomerDataAttributeMetadataInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "frontend_input")
		delete(additionalProperties, "input_filter")
		delete(additionalProperties, "store_label")
		delete(additionalProperties, "validation_rules")
		delete(additionalProperties, "multiline_count")
		delete(additionalProperties, "visible")
		delete(additionalProperties, "required")
		delete(additionalProperties, "data_model")
		delete(additionalProperties, "options")
		delete(additionalProperties, "frontend_class")
		delete(additionalProperties, "user_defined")
		delete(additionalProperties, "sort_order")
		delete(additionalProperties, "frontend_label")
		delete(additionalProperties, "note")
		delete(additionalProperties, "system")
		delete(additionalProperties, "backend_type")
		delete(additionalProperties, "is_used_in_grid")
		delete(additionalProperties, "is_visible_in_grid")
		delete(additionalProperties, "is_filterable_in_grid")
		delete(additionalProperties, "is_searchable_in_grid")
		delete(additionalProperties, "attribute_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerDataAttributeMetadataInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CustomerDataAttributeMetadataInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCustomerDataAttributeMetadataInterface struct {
	value *CustomerDataAttributeMetadataInterface
	isSet bool
}

func (v NullableCustomerDataAttributeMetadataInterface) Get() *CustomerDataAttributeMetadataInterface {
	return v.value
}

func (v *NullableCustomerDataAttributeMetadataInterface) Set(val *CustomerDataAttributeMetadataInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerDataAttributeMetadataInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerDataAttributeMetadataInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerDataAttributeMetadataInterface(val *CustomerDataAttributeMetadataInterface) *NullableCustomerDataAttributeMetadataInterface {
	return &NullableCustomerDataAttributeMetadataInterface{value: val, isSet: true}
}

func (v NullableCustomerDataAttributeMetadataInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerDataAttributeMetadataInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
