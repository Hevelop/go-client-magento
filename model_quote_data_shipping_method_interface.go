/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the QuoteDataShippingMethodInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataShippingMethodInterface{}

// QuoteDataShippingMethodInterface Interface ShippingMethodInterface
type QuoteDataShippingMethodInterface struct {
	// Shipping carrier code.
	CarrierCode string `json:"carrier_code"`
	// Shipping method code.
	MethodCode string `json:"method_code"`
	// Shipping carrier title. Otherwise, null.
	CarrierTitle *string `json:"carrier_title,omitempty"`
	// Shipping method title. Otherwise, null.
	MethodTitle *string `json:"method_title,omitempty"`
	// Shipping amount in store currency.
	Amount float32 `json:"amount"`
	// Shipping amount in base currency.
	BaseAmount float32 `json:"base_amount"`
	// The value of the availability flag for the current shipping method.
	Available bool `json:"available"`
	// ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface
	ExtensionAttributes map[string]interface{} `json:"extension_attributes,omitempty"`
	// Shipping Error message.
	ErrorMessage string `json:"error_message"`
	// Shipping price excl tax.
	PriceExclTax float32 `json:"price_excl_tax"`
	// Shipping price incl tax.
	PriceInclTax         float32 `json:"price_incl_tax"`
	AdditionalProperties map[string]interface{}
}

type _QuoteDataShippingMethodInterface QuoteDataShippingMethodInterface

// NewQuoteDataShippingMethodInterface instantiates a new QuoteDataShippingMethodInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataShippingMethodInterface(carrierCode string, methodCode string, amount float32, baseAmount float32, available bool, errorMessage string, priceExclTax float32, priceInclTax float32) *QuoteDataShippingMethodInterface {
	this := QuoteDataShippingMethodInterface{}
	this.CarrierCode = carrierCode
	this.MethodCode = methodCode
	this.Amount = amount
	this.BaseAmount = baseAmount
	this.Available = available
	this.ErrorMessage = errorMessage
	this.PriceExclTax = priceExclTax
	this.PriceInclTax = priceInclTax
	return &this
}

// NewQuoteDataShippingMethodInterfaceWithDefaults instantiates a new QuoteDataShippingMethodInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataShippingMethodInterfaceWithDefaults() *QuoteDataShippingMethodInterface {
	this := QuoteDataShippingMethodInterface{}
	return &this
}

// GetCarrierCode returns the CarrierCode field value
func (o *QuoteDataShippingMethodInterface) GetCarrierCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CarrierCode
}

// GetCarrierCodeOk returns a tuple with the CarrierCode field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetCarrierCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CarrierCode, true
}

// SetCarrierCode sets field value
func (o *QuoteDataShippingMethodInterface) SetCarrierCode(v string) {
	o.CarrierCode = v
}

// GetMethodCode returns the MethodCode field value
func (o *QuoteDataShippingMethodInterface) GetMethodCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodCode
}

// GetMethodCodeOk returns a tuple with the MethodCode field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetMethodCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodCode, true
}

// SetMethodCode sets field value
func (o *QuoteDataShippingMethodInterface) SetMethodCode(v string) {
	o.MethodCode = v
}

// GetCarrierTitle returns the CarrierTitle field value if set, zero value otherwise.
func (o *QuoteDataShippingMethodInterface) GetCarrierTitle() string {
	if o == nil || IsNil(o.CarrierTitle) {
		var ret string
		return ret
	}
	return *o.CarrierTitle
}

// GetCarrierTitleOk returns a tuple with the CarrierTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetCarrierTitleOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierTitle) {
		return nil, false
	}
	return o.CarrierTitle, true
}

// HasCarrierTitle returns a boolean if a field has been set.
func (o *QuoteDataShippingMethodInterface) HasCarrierTitle() bool {
	if o != nil && !IsNil(o.CarrierTitle) {
		return true
	}

	return false
}

// SetCarrierTitle gets a reference to the given string and assigns it to the CarrierTitle field.
func (o *QuoteDataShippingMethodInterface) SetCarrierTitle(v string) {
	o.CarrierTitle = &v
}

// GetMethodTitle returns the MethodTitle field value if set, zero value otherwise.
func (o *QuoteDataShippingMethodInterface) GetMethodTitle() string {
	if o == nil || IsNil(o.MethodTitle) {
		var ret string
		return ret
	}
	return *o.MethodTitle
}

// GetMethodTitleOk returns a tuple with the MethodTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetMethodTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MethodTitle) {
		return nil, false
	}
	return o.MethodTitle, true
}

// HasMethodTitle returns a boolean if a field has been set.
func (o *QuoteDataShippingMethodInterface) HasMethodTitle() bool {
	if o != nil && !IsNil(o.MethodTitle) {
		return true
	}

	return false
}

// SetMethodTitle gets a reference to the given string and assigns it to the MethodTitle field.
func (o *QuoteDataShippingMethodInterface) SetMethodTitle(v string) {
	o.MethodTitle = &v
}

// GetAmount returns the Amount field value
func (o *QuoteDataShippingMethodInterface) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QuoteDataShippingMethodInterface) SetAmount(v float32) {
	o.Amount = v
}

// GetBaseAmount returns the BaseAmount field value
func (o *QuoteDataShippingMethodInterface) GetBaseAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BaseAmount
}

// GetBaseAmountOk returns a tuple with the BaseAmount field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetBaseAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseAmount, true
}

// SetBaseAmount sets field value
func (o *QuoteDataShippingMethodInterface) SetBaseAmount(v float32) {
	o.BaseAmount = v
}

// GetAvailable returns the Available field value
func (o *QuoteDataShippingMethodInterface) GetAvailable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetAvailableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Available, true
}

// SetAvailable sets field value
func (o *QuoteDataShippingMethodInterface) SetAvailable(v bool) {
	o.Available = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *QuoteDataShippingMethodInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *QuoteDataShippingMethodInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *QuoteDataShippingMethodInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

// GetErrorMessage returns the ErrorMessage field value
func (o *QuoteDataShippingMethodInterface) GetErrorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// SetErrorMessage sets field value
func (o *QuoteDataShippingMethodInterface) SetErrorMessage(v string) {
	o.ErrorMessage = v
}

// GetPriceExclTax returns the PriceExclTax field value
func (o *QuoteDataShippingMethodInterface) GetPriceExclTax() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PriceExclTax
}

// GetPriceExclTaxOk returns a tuple with the PriceExclTax field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetPriceExclTaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceExclTax, true
}

// SetPriceExclTax sets field value
func (o *QuoteDataShippingMethodInterface) SetPriceExclTax(v float32) {
	o.PriceExclTax = v
}

// GetPriceInclTax returns the PriceInclTax field value
func (o *QuoteDataShippingMethodInterface) GetPriceInclTax() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PriceInclTax
}

// GetPriceInclTaxOk returns a tuple with the PriceInclTax field value
// and a boolean to check if the value has been set.
func (o *QuoteDataShippingMethodInterface) GetPriceInclTaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceInclTax, true
}

// SetPriceInclTax sets field value
func (o *QuoteDataShippingMethodInterface) SetPriceInclTax(v float32) {
	o.PriceInclTax = v
}

func (o QuoteDataShippingMethodInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataShippingMethodInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["carrier_code"] = o.CarrierCode
	toSerialize["method_code"] = o.MethodCode
	if !IsNil(o.CarrierTitle) {
		toSerialize["carrier_title"] = o.CarrierTitle
	}
	if !IsNil(o.MethodTitle) {
		toSerialize["method_title"] = o.MethodTitle
	}
	toSerialize["amount"] = o.Amount
	toSerialize["base_amount"] = o.BaseAmount
	toSerialize["available"] = o.Available
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	toSerialize["error_message"] = o.ErrorMessage
	toSerialize["price_excl_tax"] = o.PriceExclTax
	toSerialize["price_incl_tax"] = o.PriceInclTax

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataShippingMethodInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"carrier_code",
		"method_code",
		"amount",
		"base_amount",
		"available",
		"error_message",
		"price_excl_tax",
		"price_incl_tax",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuoteDataShippingMethodInterface := _QuoteDataShippingMethodInterface{}

	err = json.Unmarshal(data, &varQuoteDataShippingMethodInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataShippingMethodInterface(varQuoteDataShippingMethodInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "carrier_code")
		delete(additionalProperties, "method_code")
		delete(additionalProperties, "carrier_title")
		delete(additionalProperties, "method_title")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "base_amount")
		delete(additionalProperties, "available")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "error_message")
		delete(additionalProperties, "price_excl_tax")
		delete(additionalProperties, "price_incl_tax")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataShippingMethodInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataShippingMethodInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataShippingMethodInterface struct {
	value *QuoteDataShippingMethodInterface
	isSet bool
}

func (v NullableQuoteDataShippingMethodInterface) Get() *QuoteDataShippingMethodInterface {
	return v.value
}

func (v *NullableQuoteDataShippingMethodInterface) Set(val *QuoteDataShippingMethodInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataShippingMethodInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataShippingMethodInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataShippingMethodInterface(val *QuoteDataShippingMethodInterface) *NullableQuoteDataShippingMethodInterface {
	return &NullableQuoteDataShippingMethodInterface{value: val, isSet: true}
}

func (v NullableQuoteDataShippingMethodInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataShippingMethodInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
