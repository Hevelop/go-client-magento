/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataShipmentTrackInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataShipmentTrackInterface{}

// SalesDataShipmentTrackInterface Shipment track interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. Merchants and customers can track shipments.
type SalesDataShipmentTrackInterface struct {
	// The order_id for the shipment package.
	OrderId int32 `json:"order_id"`
	// Created-at timestamp.
	CreatedAt *string `json:"created_at,omitempty"`
	// Shipment package ID.
	EntityId *int32 `json:"entity_id,omitempty"`
	// Parent ID.
	ParentId int32 `json:"parent_id"`
	// Updated-at timestamp.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Weight.
	Weight float32 `json:"weight"`
	// Quantity.
	Qty float32 `json:"qty"`
	// Description.
	Description string `json:"description"`
	// ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentTrackInterface
	ExtensionAttributes map[string]interface{} `json:"extension_attributes,omitempty"`
	// Track number.
	TrackNumber string `json:"track_number"`
	// Title.
	Title string `json:"title"`
	// Carrier code.
	CarrierCode          string `json:"carrier_code"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataShipmentTrackInterface SalesDataShipmentTrackInterface

// NewSalesDataShipmentTrackInterface instantiates a new SalesDataShipmentTrackInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataShipmentTrackInterface(orderId int32, parentId int32, weight float32, qty float32, description string, trackNumber string, title string, carrierCode string) *SalesDataShipmentTrackInterface {
	this := SalesDataShipmentTrackInterface{}
	this.OrderId = orderId
	this.ParentId = parentId
	this.Weight = weight
	this.Qty = qty
	this.Description = description
	this.TrackNumber = trackNumber
	this.Title = title
	this.CarrierCode = carrierCode
	return &this
}

// NewSalesDataShipmentTrackInterfaceWithDefaults instantiates a new SalesDataShipmentTrackInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataShipmentTrackInterfaceWithDefaults() *SalesDataShipmentTrackInterface {
	this := SalesDataShipmentTrackInterface{}
	return &this
}

// GetOrderId returns the OrderId field value
func (o *SalesDataShipmentTrackInterface) GetOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *SalesDataShipmentTrackInterface) SetOrderId(v int32) {
	o.OrderId = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SalesDataShipmentTrackInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SalesDataShipmentTrackInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SalesDataShipmentTrackInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SalesDataShipmentTrackInterface) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SalesDataShipmentTrackInterface) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *SalesDataShipmentTrackInterface) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetParentId returns the ParentId field value
func (o *SalesDataShipmentTrackInterface) GetParentId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentId, true
}

// SetParentId sets field value
func (o *SalesDataShipmentTrackInterface) SetParentId(v int32) {
	o.ParentId = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SalesDataShipmentTrackInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SalesDataShipmentTrackInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SalesDataShipmentTrackInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWeight returns the Weight field value
func (o *SalesDataShipmentTrackInterface) GetWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *SalesDataShipmentTrackInterface) SetWeight(v float32) {
	o.Weight = v
}

// GetQty returns the Qty field value
func (o *SalesDataShipmentTrackInterface) GetQty() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Qty
}

// GetQtyOk returns a tuple with the Qty field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetQtyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Qty, true
}

// SetQty sets field value
func (o *SalesDataShipmentTrackInterface) SetQty(v float32) {
	o.Qty = v
}

// GetDescription returns the Description field value
func (o *SalesDataShipmentTrackInterface) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SalesDataShipmentTrackInterface) SetDescription(v string) {
	o.Description = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataShipmentTrackInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataShipmentTrackInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *SalesDataShipmentTrackInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

// GetTrackNumber returns the TrackNumber field value
func (o *SalesDataShipmentTrackInterface) GetTrackNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrackNumber
}

// GetTrackNumberOk returns a tuple with the TrackNumber field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetTrackNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackNumber, true
}

// SetTrackNumber sets field value
func (o *SalesDataShipmentTrackInterface) SetTrackNumber(v string) {
	o.TrackNumber = v
}

// GetTitle returns the Title field value
func (o *SalesDataShipmentTrackInterface) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *SalesDataShipmentTrackInterface) SetTitle(v string) {
	o.Title = v
}

// GetCarrierCode returns the CarrierCode field value
func (o *SalesDataShipmentTrackInterface) GetCarrierCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CarrierCode
}

// GetCarrierCodeOk returns a tuple with the CarrierCode field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentTrackInterface) GetCarrierCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CarrierCode, true
}

// SetCarrierCode sets field value
func (o *SalesDataShipmentTrackInterface) SetCarrierCode(v string) {
	o.CarrierCode = v
}

func (o SalesDataShipmentTrackInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataShipmentTrackInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["order_id"] = o.OrderId
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	toSerialize["parent_id"] = o.ParentId
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["weight"] = o.Weight
	toSerialize["qty"] = o.Qty
	toSerialize["description"] = o.Description
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	toSerialize["track_number"] = o.TrackNumber
	toSerialize["title"] = o.Title
	toSerialize["carrier_code"] = o.CarrierCode

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataShipmentTrackInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_id",
		"parent_id",
		"weight",
		"qty",
		"description",
		"track_number",
		"title",
		"carrier_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataShipmentTrackInterface := _SalesDataShipmentTrackInterface{}

	err = json.Unmarshal(data, &varSalesDataShipmentTrackInterface)

	if err != nil {
		return err
	}

	*o = SalesDataShipmentTrackInterface(varSalesDataShipmentTrackInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "order_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "parent_id")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "weight")
		delete(additionalProperties, "qty")
		delete(additionalProperties, "description")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "track_number")
		delete(additionalProperties, "title")
		delete(additionalProperties, "carrier_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataShipmentTrackInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataShipmentTrackInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataShipmentTrackInterface struct {
	value *SalesDataShipmentTrackInterface
	isSet bool
}

func (v NullableSalesDataShipmentTrackInterface) Get() *SalesDataShipmentTrackInterface {
	return v.value
}

func (v *NullableSalesDataShipmentTrackInterface) Set(val *SalesDataShipmentTrackInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataShipmentTrackInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataShipmentTrackInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataShipmentTrackInterface(val *SalesDataShipmentTrackInterface) *NullableSalesDataShipmentTrackInterface {
	return &NullableSalesDataShipmentTrackInterface{value: val, isSet: true}
}

func (v NullableSalesDataShipmentTrackInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataShipmentTrackInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
