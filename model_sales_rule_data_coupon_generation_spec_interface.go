/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesRuleDataCouponGenerationSpecInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesRuleDataCouponGenerationSpecInterface{}

// SalesRuleDataCouponGenerationSpecInterface CouponGenerationSpecInterface
type SalesRuleDataCouponGenerationSpecInterface struct {
	// The id of the rule associated with the coupon
	RuleId int32 `json:"rule_id"`
	// Format of generated coupon code
	Format string `json:"format"`
	// Of coupons to generate
	Quantity int32 `json:"quantity"`
	// Length of coupon code
	Length int32 `json:"length"`
	// The prefix
	Prefix *string `json:"prefix,omitempty"`
	// The suffix
	Suffix *string `json:"suffix,omitempty"`
	// The spacing where the delimiter should exist
	DelimiterAtEvery *int32 `json:"delimiter_at_every,omitempty"`
	// The delimiter
	Delimiter *string `json:"delimiter,omitempty"`
	// ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponGenerationSpecInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesRuleDataCouponGenerationSpecInterface SalesRuleDataCouponGenerationSpecInterface

// NewSalesRuleDataCouponGenerationSpecInterface instantiates a new SalesRuleDataCouponGenerationSpecInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesRuleDataCouponGenerationSpecInterface(ruleId int32, format string, quantity int32, length int32) *SalesRuleDataCouponGenerationSpecInterface {
	this := SalesRuleDataCouponGenerationSpecInterface{}
	this.RuleId = ruleId
	this.Format = format
	this.Quantity = quantity
	this.Length = length
	return &this
}

// NewSalesRuleDataCouponGenerationSpecInterfaceWithDefaults instantiates a new SalesRuleDataCouponGenerationSpecInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesRuleDataCouponGenerationSpecInterfaceWithDefaults() *SalesRuleDataCouponGenerationSpecInterface {
	this := SalesRuleDataCouponGenerationSpecInterface{}
	return &this
}

// GetRuleId returns the RuleId field value
func (o *SalesRuleDataCouponGenerationSpecInterface) GetRuleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetRuleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *SalesRuleDataCouponGenerationSpecInterface) SetRuleId(v int32) {
	o.RuleId = v
}

// GetFormat returns the Format field value
func (o *SalesRuleDataCouponGenerationSpecInterface) GetFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *SalesRuleDataCouponGenerationSpecInterface) SetFormat(v string) {
	o.Format = v
}

// GetQuantity returns the Quantity field value
func (o *SalesRuleDataCouponGenerationSpecInterface) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *SalesRuleDataCouponGenerationSpecInterface) SetQuantity(v int32) {
	o.Quantity = v
}

// GetLength returns the Length field value
func (o *SalesRuleDataCouponGenerationSpecInterface) GetLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Length
}

// GetLengthOk returns a tuple with the Length field value
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Length, true
}

// SetLength sets field value
func (o *SalesRuleDataCouponGenerationSpecInterface) SetLength(v int32) {
	o.Length = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *SalesRuleDataCouponGenerationSpecInterface) SetPrefix(v string) {
	o.Prefix = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetSuffix() string {
	if o == nil || IsNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Suffix) {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) HasSuffix() bool {
	if o != nil && !IsNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *SalesRuleDataCouponGenerationSpecInterface) SetSuffix(v string) {
	o.Suffix = &v
}

// GetDelimiterAtEvery returns the DelimiterAtEvery field value if set, zero value otherwise.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetDelimiterAtEvery() int32 {
	if o == nil || IsNil(o.DelimiterAtEvery) {
		var ret int32
		return ret
	}
	return *o.DelimiterAtEvery
}

// GetDelimiterAtEveryOk returns a tuple with the DelimiterAtEvery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetDelimiterAtEveryOk() (*int32, bool) {
	if o == nil || IsNil(o.DelimiterAtEvery) {
		return nil, false
	}
	return o.DelimiterAtEvery, true
}

// HasDelimiterAtEvery returns a boolean if a field has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) HasDelimiterAtEvery() bool {
	if o != nil && !IsNil(o.DelimiterAtEvery) {
		return true
	}

	return false
}

// SetDelimiterAtEvery gets a reference to the given int32 and assigns it to the DelimiterAtEvery field.
func (o *SalesRuleDataCouponGenerationSpecInterface) SetDelimiterAtEvery(v int32) {
	o.DelimiterAtEvery = &v
}

// GetDelimiter returns the Delimiter field value if set, zero value otherwise.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetDelimiter() string {
	if o == nil || IsNil(o.Delimiter) {
		var ret string
		return ret
	}
	return *o.Delimiter
}

// GetDelimiterOk returns a tuple with the Delimiter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetDelimiterOk() (*string, bool) {
	if o == nil || IsNil(o.Delimiter) {
		return nil, false
	}
	return o.Delimiter, true
}

// HasDelimiter returns a boolean if a field has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) HasDelimiter() bool {
	if o != nil && !IsNil(o.Delimiter) {
		return true
	}

	return false
}

// SetDelimiter gets a reference to the given string and assigns it to the Delimiter field.
func (o *SalesRuleDataCouponGenerationSpecInterface) SetDelimiter(v string) {
	o.Delimiter = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesRuleDataCouponGenerationSpecInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *SalesRuleDataCouponGenerationSpecInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o SalesRuleDataCouponGenerationSpecInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesRuleDataCouponGenerationSpecInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rule_id"] = o.RuleId
	toSerialize["format"] = o.Format
	toSerialize["quantity"] = o.Quantity
	toSerialize["length"] = o.Length
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !IsNil(o.DelimiterAtEvery) {
		toSerialize["delimiter_at_every"] = o.DelimiterAtEvery
	}
	if !IsNil(o.Delimiter) {
		toSerialize["delimiter"] = o.Delimiter
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesRuleDataCouponGenerationSpecInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rule_id",
		"format",
		"quantity",
		"length",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesRuleDataCouponGenerationSpecInterface := _SalesRuleDataCouponGenerationSpecInterface{}

	err = json.Unmarshal(data, &varSalesRuleDataCouponGenerationSpecInterface)

	if err != nil {
		return err
	}

	*o = SalesRuleDataCouponGenerationSpecInterface(varSalesRuleDataCouponGenerationSpecInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "rule_id")
		delete(additionalProperties, "format")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "length")
		delete(additionalProperties, "prefix")
		delete(additionalProperties, "suffix")
		delete(additionalProperties, "delimiter_at_every")
		delete(additionalProperties, "delimiter")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesRuleDataCouponGenerationSpecInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesRuleDataCouponGenerationSpecInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesRuleDataCouponGenerationSpecInterface struct {
	value *SalesRuleDataCouponGenerationSpecInterface
	isSet bool
}

func (v NullableSalesRuleDataCouponGenerationSpecInterface) Get() *SalesRuleDataCouponGenerationSpecInterface {
	return v.value
}

func (v *NullableSalesRuleDataCouponGenerationSpecInterface) Set(val *SalesRuleDataCouponGenerationSpecInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesRuleDataCouponGenerationSpecInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesRuleDataCouponGenerationSpecInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesRuleDataCouponGenerationSpecInterface(val *SalesRuleDataCouponGenerationSpecInterface) *NullableSalesRuleDataCouponGenerationSpecInterface {
	return &NullableSalesRuleDataCouponGenerationSpecInterface{value: val, isSet: true}
}

func (v NullableSalesRuleDataCouponGenerationSpecInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesRuleDataCouponGenerationSpecInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
