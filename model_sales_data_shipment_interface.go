/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataShipmentInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataShipmentInterface{}

// SalesDataShipmentInterface Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.
type SalesDataShipmentInterface struct {
	// Billing address ID.
	BillingAddressId *int32 `json:"billing_address_id,omitempty"`
	// Created-at timestamp.
	CreatedAt *string `json:"created_at,omitempty"`
	// Customer ID.
	CustomerId *int32 `json:"customer_id,omitempty"`
	// Email-sent flag value.
	EmailSent *int32 `json:"email_sent,omitempty"`
	// Shipment ID.
	EntityId *int32 `json:"entity_id,omitempty"`
	// Increment ID.
	IncrementId *string `json:"increment_id,omitempty"`
	// Order ID.
	OrderId int32 `json:"order_id"`
	// Array of packages, if any. Otherwise, null.
	Packages []SalesDataShipmentPackageInterface `json:"packages,omitempty"`
	// Shipment status.
	ShipmentStatus *int32 `json:"shipment_status,omitempty"`
	// Shipping address ID.
	ShippingAddressId *int32 `json:"shipping_address_id,omitempty"`
	// Shipping label.
	ShippingLabel *string `json:"shipping_label,omitempty"`
	// Store ID.
	StoreId *int32 `json:"store_id,omitempty"`
	// Total quantity.
	TotalQty *float32 `json:"total_qty,omitempty"`
	// Total weight.
	TotalWeight *float32 `json:"total_weight,omitempty"`
	// Updated-at timestamp.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Array of items.
	Items []SalesDataShipmentItemInterface `json:"items"`
	// Array of tracks.
	Tracks []SalesDataShipmentTrackInterface `json:"tracks"`
	// Array of comments.
	Comments             []SalesDataShipmentCommentInterface  `json:"comments"`
	ExtensionAttributes  *SalesDataShipmentExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataShipmentInterface SalesDataShipmentInterface

// NewSalesDataShipmentInterface instantiates a new SalesDataShipmentInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataShipmentInterface(orderId int32, items []SalesDataShipmentItemInterface, tracks []SalesDataShipmentTrackInterface, comments []SalesDataShipmentCommentInterface) *SalesDataShipmentInterface {
	this := SalesDataShipmentInterface{}
	this.OrderId = orderId
	this.Items = items
	this.Tracks = tracks
	this.Comments = comments
	return &this
}

// NewSalesDataShipmentInterfaceWithDefaults instantiates a new SalesDataShipmentInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataShipmentInterfaceWithDefaults() *SalesDataShipmentInterface {
	this := SalesDataShipmentInterface{}
	return &this
}

// GetBillingAddressId returns the BillingAddressId field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetBillingAddressId() int32 {
	if o == nil || IsNil(o.BillingAddressId) {
		var ret int32
		return ret
	}
	return *o.BillingAddressId
}

// GetBillingAddressIdOk returns a tuple with the BillingAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetBillingAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingAddressId) {
		return nil, false
	}
	return o.BillingAddressId, true
}

// HasBillingAddressId returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasBillingAddressId() bool {
	if o != nil && !IsNil(o.BillingAddressId) {
		return true
	}

	return false
}

// SetBillingAddressId gets a reference to the given int32 and assigns it to the BillingAddressId field.
func (o *SalesDataShipmentInterface) SetBillingAddressId(v int32) {
	o.BillingAddressId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SalesDataShipmentInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *SalesDataShipmentInterface) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetEmailSent returns the EmailSent field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetEmailSent() int32 {
	if o == nil || IsNil(o.EmailSent) {
		var ret int32
		return ret
	}
	return *o.EmailSent
}

// GetEmailSentOk returns a tuple with the EmailSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetEmailSentOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailSent) {
		return nil, false
	}
	return o.EmailSent, true
}

// HasEmailSent returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasEmailSent() bool {
	if o != nil && !IsNil(o.EmailSent) {
		return true
	}

	return false
}

// SetEmailSent gets a reference to the given int32 and assigns it to the EmailSent field.
func (o *SalesDataShipmentInterface) SetEmailSent(v int32) {
	o.EmailSent = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *SalesDataShipmentInterface) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetIncrementId returns the IncrementId field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetIncrementId() string {
	if o == nil || IsNil(o.IncrementId) {
		var ret string
		return ret
	}
	return *o.IncrementId
}

// GetIncrementIdOk returns a tuple with the IncrementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetIncrementIdOk() (*string, bool) {
	if o == nil || IsNil(o.IncrementId) {
		return nil, false
	}
	return o.IncrementId, true
}

// HasIncrementId returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasIncrementId() bool {
	if o != nil && !IsNil(o.IncrementId) {
		return true
	}

	return false
}

// SetIncrementId gets a reference to the given string and assigns it to the IncrementId field.
func (o *SalesDataShipmentInterface) SetIncrementId(v string) {
	o.IncrementId = &v
}

// GetOrderId returns the OrderId field value
func (o *SalesDataShipmentInterface) GetOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *SalesDataShipmentInterface) SetOrderId(v int32) {
	o.OrderId = v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetPackages() []SalesDataShipmentPackageInterface {
	if o == nil || IsNil(o.Packages) {
		var ret []SalesDataShipmentPackageInterface
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetPackagesOk() ([]SalesDataShipmentPackageInterface, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []SalesDataShipmentPackageInterface and assigns it to the Packages field.
func (o *SalesDataShipmentInterface) SetPackages(v []SalesDataShipmentPackageInterface) {
	o.Packages = v
}

// GetShipmentStatus returns the ShipmentStatus field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetShipmentStatus() int32 {
	if o == nil || IsNil(o.ShipmentStatus) {
		var ret int32
		return ret
	}
	return *o.ShipmentStatus
}

// GetShipmentStatusOk returns a tuple with the ShipmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetShipmentStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.ShipmentStatus) {
		return nil, false
	}
	return o.ShipmentStatus, true
}

// HasShipmentStatus returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasShipmentStatus() bool {
	if o != nil && !IsNil(o.ShipmentStatus) {
		return true
	}

	return false
}

// SetShipmentStatus gets a reference to the given int32 and assigns it to the ShipmentStatus field.
func (o *SalesDataShipmentInterface) SetShipmentStatus(v int32) {
	o.ShipmentStatus = &v
}

// GetShippingAddressId returns the ShippingAddressId field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetShippingAddressId() int32 {
	if o == nil || IsNil(o.ShippingAddressId) {
		var ret int32
		return ret
	}
	return *o.ShippingAddressId
}

// GetShippingAddressIdOk returns a tuple with the ShippingAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetShippingAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShippingAddressId) {
		return nil, false
	}
	return o.ShippingAddressId, true
}

// HasShippingAddressId returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasShippingAddressId() bool {
	if o != nil && !IsNil(o.ShippingAddressId) {
		return true
	}

	return false
}

// SetShippingAddressId gets a reference to the given int32 and assigns it to the ShippingAddressId field.
func (o *SalesDataShipmentInterface) SetShippingAddressId(v int32) {
	o.ShippingAddressId = &v
}

// GetShippingLabel returns the ShippingLabel field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetShippingLabel() string {
	if o == nil || IsNil(o.ShippingLabel) {
		var ret string
		return ret
	}
	return *o.ShippingLabel
}

// GetShippingLabelOk returns a tuple with the ShippingLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetShippingLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingLabel) {
		return nil, false
	}
	return o.ShippingLabel, true
}

// HasShippingLabel returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasShippingLabel() bool {
	if o != nil && !IsNil(o.ShippingLabel) {
		return true
	}

	return false
}

// SetShippingLabel gets a reference to the given string and assigns it to the ShippingLabel field.
func (o *SalesDataShipmentInterface) SetShippingLabel(v string) {
	o.ShippingLabel = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetStoreId() int32 {
	if o == nil || IsNil(o.StoreId) {
		var ret int32
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetStoreIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given int32 and assigns it to the StoreId field.
func (o *SalesDataShipmentInterface) SetStoreId(v int32) {
	o.StoreId = &v
}

// GetTotalQty returns the TotalQty field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetTotalQty() float32 {
	if o == nil || IsNil(o.TotalQty) {
		var ret float32
		return ret
	}
	return *o.TotalQty
}

// GetTotalQtyOk returns a tuple with the TotalQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetTotalQtyOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalQty) {
		return nil, false
	}
	return o.TotalQty, true
}

// HasTotalQty returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasTotalQty() bool {
	if o != nil && !IsNil(o.TotalQty) {
		return true
	}

	return false
}

// SetTotalQty gets a reference to the given float32 and assigns it to the TotalQty field.
func (o *SalesDataShipmentInterface) SetTotalQty(v float32) {
	o.TotalQty = &v
}

// GetTotalWeight returns the TotalWeight field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetTotalWeight() float32 {
	if o == nil || IsNil(o.TotalWeight) {
		var ret float32
		return ret
	}
	return *o.TotalWeight
}

// GetTotalWeightOk returns a tuple with the TotalWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetTotalWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalWeight) {
		return nil, false
	}
	return o.TotalWeight, true
}

// HasTotalWeight returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasTotalWeight() bool {
	if o != nil && !IsNil(o.TotalWeight) {
		return true
	}

	return false
}

// SetTotalWeight gets a reference to the given float32 and assigns it to the TotalWeight field.
func (o *SalesDataShipmentInterface) SetTotalWeight(v float32) {
	o.TotalWeight = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SalesDataShipmentInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetItems returns the Items field value
func (o *SalesDataShipmentInterface) GetItems() []SalesDataShipmentItemInterface {
	if o == nil {
		var ret []SalesDataShipmentItemInterface
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetItemsOk() ([]SalesDataShipmentItemInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *SalesDataShipmentInterface) SetItems(v []SalesDataShipmentItemInterface) {
	o.Items = v
}

// GetTracks returns the Tracks field value
func (o *SalesDataShipmentInterface) GetTracks() []SalesDataShipmentTrackInterface {
	if o == nil {
		var ret []SalesDataShipmentTrackInterface
		return ret
	}

	return o.Tracks
}

// GetTracksOk returns a tuple with the Tracks field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetTracksOk() ([]SalesDataShipmentTrackInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tracks, true
}

// SetTracks sets field value
func (o *SalesDataShipmentInterface) SetTracks(v []SalesDataShipmentTrackInterface) {
	o.Tracks = v
}

// GetComments returns the Comments field value
func (o *SalesDataShipmentInterface) GetComments() []SalesDataShipmentCommentInterface {
	if o == nil {
		var ret []SalesDataShipmentCommentInterface
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetCommentsOk() ([]SalesDataShipmentCommentInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comments, true
}

// SetComments sets field value
func (o *SalesDataShipmentInterface) SetComments(v []SalesDataShipmentCommentInterface) {
	o.Comments = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataShipmentInterface) GetExtensionAttributes() SalesDataShipmentExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret SalesDataShipmentExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShipmentInterface) GetExtensionAttributesOk() (*SalesDataShipmentExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataShipmentInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given SalesDataShipmentExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *SalesDataShipmentInterface) SetExtensionAttributes(v SalesDataShipmentExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o SalesDataShipmentInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataShipmentInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingAddressId) {
		toSerialize["billing_address_id"] = o.BillingAddressId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.EmailSent) {
		toSerialize["email_sent"] = o.EmailSent
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	if !IsNil(o.IncrementId) {
		toSerialize["increment_id"] = o.IncrementId
	}
	toSerialize["order_id"] = o.OrderId
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.ShipmentStatus) {
		toSerialize["shipment_status"] = o.ShipmentStatus
	}
	if !IsNil(o.ShippingAddressId) {
		toSerialize["shipping_address_id"] = o.ShippingAddressId
	}
	if !IsNil(o.ShippingLabel) {
		toSerialize["shipping_label"] = o.ShippingLabel
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.TotalQty) {
		toSerialize["total_qty"] = o.TotalQty
	}
	if !IsNil(o.TotalWeight) {
		toSerialize["total_weight"] = o.TotalWeight
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["items"] = o.Items
	toSerialize["tracks"] = o.Tracks
	toSerialize["comments"] = o.Comments
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataShipmentInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_id",
		"items",
		"tracks",
		"comments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataShipmentInterface := _SalesDataShipmentInterface{}

	err = json.Unmarshal(data, &varSalesDataShipmentInterface)

	if err != nil {
		return err
	}

	*o = SalesDataShipmentInterface(varSalesDataShipmentInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "billing_address_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "email_sent")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "increment_id")
		delete(additionalProperties, "order_id")
		delete(additionalProperties, "packages")
		delete(additionalProperties, "shipment_status")
		delete(additionalProperties, "shipping_address_id")
		delete(additionalProperties, "shipping_label")
		delete(additionalProperties, "store_id")
		delete(additionalProperties, "total_qty")
		delete(additionalProperties, "total_weight")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "items")
		delete(additionalProperties, "tracks")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataShipmentInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataShipmentInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataShipmentInterface struct {
	value *SalesDataShipmentInterface
	isSet bool
}

func (v NullableSalesDataShipmentInterface) Get() *SalesDataShipmentInterface {
	return v.value
}

func (v *NullableSalesDataShipmentInterface) Set(val *SalesDataShipmentInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataShipmentInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataShipmentInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataShipmentInterface(val *SalesDataShipmentInterface) *NullableSalesDataShipmentInterface {
	return &NullableSalesDataShipmentInterface{value: val, isSet: true}
}

func (v NullableSalesDataShipmentInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataShipmentInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
