/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PostV1CouponsDeleteByCodesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostV1CouponsDeleteByCodesRequest{}

// PostV1CouponsDeleteByCodesRequest struct for PostV1CouponsDeleteByCodesRequest
type PostV1CouponsDeleteByCodesRequest struct {
	Codes                []string `json:"codes"`
	IgnoreInvalidCoupons *bool    `json:"ignoreInvalidCoupons,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostV1CouponsDeleteByCodesRequest PostV1CouponsDeleteByCodesRequest

// NewPostV1CouponsDeleteByCodesRequest instantiates a new PostV1CouponsDeleteByCodesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostV1CouponsDeleteByCodesRequest(codes []string) *PostV1CouponsDeleteByCodesRequest {
	this := PostV1CouponsDeleteByCodesRequest{}
	this.Codes = codes
	return &this
}

// NewPostV1CouponsDeleteByCodesRequestWithDefaults instantiates a new PostV1CouponsDeleteByCodesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostV1CouponsDeleteByCodesRequestWithDefaults() *PostV1CouponsDeleteByCodesRequest {
	this := PostV1CouponsDeleteByCodesRequest{}
	return &this
}

// GetCodes returns the Codes field value
func (o *PostV1CouponsDeleteByCodesRequest) GetCodes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value
// and a boolean to check if the value has been set.
func (o *PostV1CouponsDeleteByCodesRequest) GetCodesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Codes, true
}

// SetCodes sets field value
func (o *PostV1CouponsDeleteByCodesRequest) SetCodes(v []string) {
	o.Codes = v
}

// GetIgnoreInvalidCoupons returns the IgnoreInvalidCoupons field value if set, zero value otherwise.
func (o *PostV1CouponsDeleteByCodesRequest) GetIgnoreInvalidCoupons() bool {
	if o == nil || IsNil(o.IgnoreInvalidCoupons) {
		var ret bool
		return ret
	}
	return *o.IgnoreInvalidCoupons
}

// GetIgnoreInvalidCouponsOk returns a tuple with the IgnoreInvalidCoupons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostV1CouponsDeleteByCodesRequest) GetIgnoreInvalidCouponsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreInvalidCoupons) {
		return nil, false
	}
	return o.IgnoreInvalidCoupons, true
}

// HasIgnoreInvalidCoupons returns a boolean if a field has been set.
func (o *PostV1CouponsDeleteByCodesRequest) HasIgnoreInvalidCoupons() bool {
	if o != nil && !IsNil(o.IgnoreInvalidCoupons) {
		return true
	}

	return false
}

// SetIgnoreInvalidCoupons gets a reference to the given bool and assigns it to the IgnoreInvalidCoupons field.
func (o *PostV1CouponsDeleteByCodesRequest) SetIgnoreInvalidCoupons(v bool) {
	o.IgnoreInvalidCoupons = &v
}

func (o PostV1CouponsDeleteByCodesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostV1CouponsDeleteByCodesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["codes"] = o.Codes
	if !IsNil(o.IgnoreInvalidCoupons) {
		toSerialize["ignoreInvalidCoupons"] = o.IgnoreInvalidCoupons
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostV1CouponsDeleteByCodesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"codes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostV1CouponsDeleteByCodesRequest := _PostV1CouponsDeleteByCodesRequest{}

	err = json.Unmarshal(data, &varPostV1CouponsDeleteByCodesRequest)

	if err != nil {
		return err
	}

	*o = PostV1CouponsDeleteByCodesRequest(varPostV1CouponsDeleteByCodesRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "codes")
		delete(additionalProperties, "ignoreInvalidCoupons")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PostV1CouponsDeleteByCodesRequest) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PostV1CouponsDeleteByCodesRequest) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePostV1CouponsDeleteByCodesRequest struct {
	value *PostV1CouponsDeleteByCodesRequest
	isSet bool
}

func (v NullablePostV1CouponsDeleteByCodesRequest) Get() *PostV1CouponsDeleteByCodesRequest {
	return v.value
}

func (v *NullablePostV1CouponsDeleteByCodesRequest) Set(val *PostV1CouponsDeleteByCodesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostV1CouponsDeleteByCodesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostV1CouponsDeleteByCodesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostV1CouponsDeleteByCodesRequest(val *PostV1CouponsDeleteByCodesRequest) *NullablePostV1CouponsDeleteByCodesRequest {
	return &NullablePostV1CouponsDeleteByCodesRequest{value: val, isSet: true}
}

func (v NullablePostV1CouponsDeleteByCodesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostV1CouponsDeleteByCodesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
