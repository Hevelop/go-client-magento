/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the DownloadableDataLinkInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadableDataLinkInterface{}

// DownloadableDataLinkInterface
type DownloadableDataLinkInterface struct {
	// Sample(or link) id
	Id        *int32  `json:"id,omitempty"`
	Title     *string `json:"title,omitempty"`
	SortOrder int32   `json:"sort_order"`
	// Shareable status
	IsShareable int32 `json:"is_shareable"`
	// Price
	Price float32 `json:"price"`
	// Of downloads per user
	NumberOfDownloads *int32 `json:"number_of_downloads,omitempty"`
	LinkType          string `json:"link_type"`
	// relative file path
	LinkFile        *string                               `json:"link_file,omitempty"`
	LinkFileContent *DownloadableDataFileContentInterface `json:"link_file_content,omitempty"`
	// Link url or null when type is 'file'
	LinkUrl    *string `json:"link_url,omitempty"`
	SampleType string  `json:"sample_type"`
	// relative file path
	SampleFile        *string                               `json:"sample_file,omitempty"`
	SampleFileContent *DownloadableDataFileContentInterface `json:"sample_file_content,omitempty"`
	// file URL
	SampleUrl *string `json:"sample_url,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\LinkInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DownloadableDataLinkInterface DownloadableDataLinkInterface

// NewDownloadableDataLinkInterface instantiates a new DownloadableDataLinkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadableDataLinkInterface(sortOrder int32, isShareable int32, price float32, linkType string, sampleType string) *DownloadableDataLinkInterface {
	this := DownloadableDataLinkInterface{}
	this.SortOrder = sortOrder
	this.IsShareable = isShareable
	this.Price = price
	this.LinkType = linkType
	this.SampleType = sampleType
	return &this
}

// NewDownloadableDataLinkInterfaceWithDefaults instantiates a new DownloadableDataLinkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadableDataLinkInterfaceWithDefaults() *DownloadableDataLinkInterface {
	this := DownloadableDataLinkInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DownloadableDataLinkInterface) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DownloadableDataLinkInterface) SetTitle(v string) {
	o.Title = &v
}

// GetSortOrder returns the SortOrder field value
func (o *DownloadableDataLinkInterface) GetSortOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetSortOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SortOrder, true
}

// SetSortOrder sets field value
func (o *DownloadableDataLinkInterface) SetSortOrder(v int32) {
	o.SortOrder = v
}

// GetIsShareable returns the IsShareable field value
func (o *DownloadableDataLinkInterface) GetIsShareable() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IsShareable
}

// GetIsShareableOk returns a tuple with the IsShareable field value
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetIsShareableOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsShareable, true
}

// SetIsShareable sets field value
func (o *DownloadableDataLinkInterface) SetIsShareable(v int32) {
	o.IsShareable = v
}

// GetPrice returns the Price field value
func (o *DownloadableDataLinkInterface) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *DownloadableDataLinkInterface) SetPrice(v float32) {
	o.Price = v
}

// GetNumberOfDownloads returns the NumberOfDownloads field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetNumberOfDownloads() int32 {
	if o == nil || IsNil(o.NumberOfDownloads) {
		var ret int32
		return ret
	}
	return *o.NumberOfDownloads
}

// GetNumberOfDownloadsOk returns a tuple with the NumberOfDownloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetNumberOfDownloadsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfDownloads) {
		return nil, false
	}
	return o.NumberOfDownloads, true
}

// HasNumberOfDownloads returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasNumberOfDownloads() bool {
	if o != nil && !IsNil(o.NumberOfDownloads) {
		return true
	}

	return false
}

// SetNumberOfDownloads gets a reference to the given int32 and assigns it to the NumberOfDownloads field.
func (o *DownloadableDataLinkInterface) SetNumberOfDownloads(v int32) {
	o.NumberOfDownloads = &v
}

// GetLinkType returns the LinkType field value
func (o *DownloadableDataLinkInterface) GetLinkType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkType
}

// GetLinkTypeOk returns a tuple with the LinkType field value
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetLinkTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkType, true
}

// SetLinkType sets field value
func (o *DownloadableDataLinkInterface) SetLinkType(v string) {
	o.LinkType = v
}

// GetLinkFile returns the LinkFile field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetLinkFile() string {
	if o == nil || IsNil(o.LinkFile) {
		var ret string
		return ret
	}
	return *o.LinkFile
}

// GetLinkFileOk returns a tuple with the LinkFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetLinkFileOk() (*string, bool) {
	if o == nil || IsNil(o.LinkFile) {
		return nil, false
	}
	return o.LinkFile, true
}

// HasLinkFile returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasLinkFile() bool {
	if o != nil && !IsNil(o.LinkFile) {
		return true
	}

	return false
}

// SetLinkFile gets a reference to the given string and assigns it to the LinkFile field.
func (o *DownloadableDataLinkInterface) SetLinkFile(v string) {
	o.LinkFile = &v
}

// GetLinkFileContent returns the LinkFileContent field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetLinkFileContent() DownloadableDataFileContentInterface {
	if o == nil || IsNil(o.LinkFileContent) {
		var ret DownloadableDataFileContentInterface
		return ret
	}
	return *o.LinkFileContent
}

// GetLinkFileContentOk returns a tuple with the LinkFileContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetLinkFileContentOk() (*DownloadableDataFileContentInterface, bool) {
	if o == nil || IsNil(o.LinkFileContent) {
		return nil, false
	}
	return o.LinkFileContent, true
}

// HasLinkFileContent returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasLinkFileContent() bool {
	if o != nil && !IsNil(o.LinkFileContent) {
		return true
	}

	return false
}

// SetLinkFileContent gets a reference to the given DownloadableDataFileContentInterface and assigns it to the LinkFileContent field.
func (o *DownloadableDataLinkInterface) SetLinkFileContent(v DownloadableDataFileContentInterface) {
	o.LinkFileContent = &v
}

// GetLinkUrl returns the LinkUrl field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetLinkUrl() string {
	if o == nil || IsNil(o.LinkUrl) {
		var ret string
		return ret
	}
	return *o.LinkUrl
}

// GetLinkUrlOk returns a tuple with the LinkUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetLinkUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LinkUrl) {
		return nil, false
	}
	return o.LinkUrl, true
}

// HasLinkUrl returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasLinkUrl() bool {
	if o != nil && !IsNil(o.LinkUrl) {
		return true
	}

	return false
}

// SetLinkUrl gets a reference to the given string and assigns it to the LinkUrl field.
func (o *DownloadableDataLinkInterface) SetLinkUrl(v string) {
	o.LinkUrl = &v
}

// GetSampleType returns the SampleType field value
func (o *DownloadableDataLinkInterface) GetSampleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SampleType
}

// GetSampleTypeOk returns a tuple with the SampleType field value
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetSampleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SampleType, true
}

// SetSampleType sets field value
func (o *DownloadableDataLinkInterface) SetSampleType(v string) {
	o.SampleType = v
}

// GetSampleFile returns the SampleFile field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetSampleFile() string {
	if o == nil || IsNil(o.SampleFile) {
		var ret string
		return ret
	}
	return *o.SampleFile
}

// GetSampleFileOk returns a tuple with the SampleFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetSampleFileOk() (*string, bool) {
	if o == nil || IsNil(o.SampleFile) {
		return nil, false
	}
	return o.SampleFile, true
}

// HasSampleFile returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasSampleFile() bool {
	if o != nil && !IsNil(o.SampleFile) {
		return true
	}

	return false
}

// SetSampleFile gets a reference to the given string and assigns it to the SampleFile field.
func (o *DownloadableDataLinkInterface) SetSampleFile(v string) {
	o.SampleFile = &v
}

// GetSampleFileContent returns the SampleFileContent field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetSampleFileContent() DownloadableDataFileContentInterface {
	if o == nil || IsNil(o.SampleFileContent) {
		var ret DownloadableDataFileContentInterface
		return ret
	}
	return *o.SampleFileContent
}

// GetSampleFileContentOk returns a tuple with the SampleFileContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetSampleFileContentOk() (*DownloadableDataFileContentInterface, bool) {
	if o == nil || IsNil(o.SampleFileContent) {
		return nil, false
	}
	return o.SampleFileContent, true
}

// HasSampleFileContent returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasSampleFileContent() bool {
	if o != nil && !IsNil(o.SampleFileContent) {
		return true
	}

	return false
}

// SetSampleFileContent gets a reference to the given DownloadableDataFileContentInterface and assigns it to the SampleFileContent field.
func (o *DownloadableDataLinkInterface) SetSampleFileContent(v DownloadableDataFileContentInterface) {
	o.SampleFileContent = &v
}

// GetSampleUrl returns the SampleUrl field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetSampleUrl() string {
	if o == nil || IsNil(o.SampleUrl) {
		var ret string
		return ret
	}
	return *o.SampleUrl
}

// GetSampleUrlOk returns a tuple with the SampleUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetSampleUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SampleUrl) {
		return nil, false
	}
	return o.SampleUrl, true
}

// HasSampleUrl returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasSampleUrl() bool {
	if o != nil && !IsNil(o.SampleUrl) {
		return true
	}

	return false
}

// SetSampleUrl gets a reference to the given string and assigns it to the SampleUrl field.
func (o *DownloadableDataLinkInterface) SetSampleUrl(v string) {
	o.SampleUrl = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *DownloadableDataLinkInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadableDataLinkInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *DownloadableDataLinkInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *DownloadableDataLinkInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o DownloadableDataLinkInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadableDataLinkInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	toSerialize["sort_order"] = o.SortOrder
	toSerialize["is_shareable"] = o.IsShareable
	toSerialize["price"] = o.Price
	if !IsNil(o.NumberOfDownloads) {
		toSerialize["number_of_downloads"] = o.NumberOfDownloads
	}
	toSerialize["link_type"] = o.LinkType
	if !IsNil(o.LinkFile) {
		toSerialize["link_file"] = o.LinkFile
	}
	if !IsNil(o.LinkFileContent) {
		toSerialize["link_file_content"] = o.LinkFileContent
	}
	if !IsNil(o.LinkUrl) {
		toSerialize["link_url"] = o.LinkUrl
	}
	toSerialize["sample_type"] = o.SampleType
	if !IsNil(o.SampleFile) {
		toSerialize["sample_file"] = o.SampleFile
	}
	if !IsNil(o.SampleFileContent) {
		toSerialize["sample_file_content"] = o.SampleFileContent
	}
	if !IsNil(o.SampleUrl) {
		toSerialize["sample_url"] = o.SampleUrl
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DownloadableDataLinkInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sort_order",
		"is_shareable",
		"price",
		"link_type",
		"sample_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDownloadableDataLinkInterface := _DownloadableDataLinkInterface{}

	err = json.Unmarshal(data, &varDownloadableDataLinkInterface)

	if err != nil {
		return err
	}

	*o = DownloadableDataLinkInterface(varDownloadableDataLinkInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "sort_order")
		delete(additionalProperties, "is_shareable")
		delete(additionalProperties, "price")
		delete(additionalProperties, "number_of_downloads")
		delete(additionalProperties, "link_type")
		delete(additionalProperties, "link_file")
		delete(additionalProperties, "link_file_content")
		delete(additionalProperties, "link_url")
		delete(additionalProperties, "sample_type")
		delete(additionalProperties, "sample_file")
		delete(additionalProperties, "sample_file_content")
		delete(additionalProperties, "sample_url")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *DownloadableDataLinkInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *DownloadableDataLinkInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableDownloadableDataLinkInterface struct {
	value *DownloadableDataLinkInterface
	isSet bool
}

func (v NullableDownloadableDataLinkInterface) Get() *DownloadableDataLinkInterface {
	return v.value
}

func (v *NullableDownloadableDataLinkInterface) Set(val *DownloadableDataLinkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadableDataLinkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadableDataLinkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadableDataLinkInterface(val *DownloadableDataLinkInterface) *NullableDownloadableDataLinkInterface {
	return &NullableDownloadableDataLinkInterface{value: val, isSet: true}
}

func (v NullableDownloadableDataLinkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadableDataLinkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
