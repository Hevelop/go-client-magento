/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataCreditmemoInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataCreditmemoInterface{}

// SalesDataCreditmemoInterface Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.
type SalesDataCreditmemoInterface struct {
	// Credit memo adjustment.
	Adjustment *float32 `json:"adjustment,omitempty"`
	// Credit memo negative adjustment.
	AdjustmentNegative *float32 `json:"adjustment_negative,omitempty"`
	// Credit memo positive adjustment.
	AdjustmentPositive *float32 `json:"adjustment_positive,omitempty"`
	// Credit memo base adjustment.
	BaseAdjustment *float32 `json:"base_adjustment,omitempty"`
	// Credit memo negative base adjustment.
	BaseAdjustmentNegative *float32 `json:"base_adjustment_negative,omitempty"`
	// Credit memo positive base adjustment.
	BaseAdjustmentPositive *float32 `json:"base_adjustment_positive,omitempty"`
	// Credit memo base currency code.
	BaseCurrencyCode *string `json:"base_currency_code,omitempty"`
	// Credit memo base discount amount.
	BaseDiscountAmount *float32 `json:"base_discount_amount,omitempty"`
	// Credit memo base grand total.
	BaseGrandTotal *float32 `json:"base_grand_total,omitempty"`
	// Credit memo base discount tax compensation amount.
	BaseDiscountTaxCompensationAmount *float32 `json:"base_discount_tax_compensation_amount,omitempty"`
	// Credit memo base shipping amount.
	BaseShippingAmount *float32 `json:"base_shipping_amount,omitempty"`
	// Credit memo base shipping discount tax compensation amount.
	BaseShippingDiscountTaxCompensationAmnt *float32 `json:"base_shipping_discount_tax_compensation_amnt,omitempty"`
	// Credit memo base shipping including tax.
	BaseShippingInclTax *float32 `json:"base_shipping_incl_tax,omitempty"`
	// Credit memo base shipping tax amount.
	BaseShippingTaxAmount *float32 `json:"base_shipping_tax_amount,omitempty"`
	// Credit memo base subtotal.
	BaseSubtotal *float32 `json:"base_subtotal,omitempty"`
	// Credit memo base subtotal including tax.
	BaseSubtotalInclTax *float32 `json:"base_subtotal_incl_tax,omitempty"`
	// Credit memo base tax amount.
	BaseTaxAmount *float32 `json:"base_tax_amount,omitempty"`
	// Credit memo base-to-global rate.
	BaseToGlobalRate *float32 `json:"base_to_global_rate,omitempty"`
	// Credit memo base-to-order rate.
	BaseToOrderRate *float32 `json:"base_to_order_rate,omitempty"`
	// Credit memo billing address ID.
	BillingAddressId *int32 `json:"billing_address_id,omitempty"`
	// Credit memo created-at timestamp.
	CreatedAt *string `json:"created_at,omitempty"`
	// Credit memo status.
	CreditmemoStatus *int32 `json:"creditmemo_status,omitempty"`
	// Credit memo discount amount.
	DiscountAmount *float32 `json:"discount_amount,omitempty"`
	// Credit memo discount description.
	DiscountDescription *string `json:"discount_description,omitempty"`
	// Credit memo email sent flag value.
	EmailSent *int32 `json:"email_sent,omitempty"`
	// Credit memo ID.
	EntityId *int32 `json:"entity_id,omitempty"`
	// Credit memo global currency code.
	GlobalCurrencyCode *string `json:"global_currency_code,omitempty"`
	// Credit memo grand total.
	GrandTotal *float32 `json:"grand_total,omitempty"`
	// Credit memo discount tax compensation amount.
	DiscountTaxCompensationAmount *float32 `json:"discount_tax_compensation_amount,omitempty"`
	// Credit memo increment ID.
	IncrementId *string `json:"increment_id,omitempty"`
	// Credit memo invoice ID.
	InvoiceId *int32 `json:"invoice_id,omitempty"`
	// Credit memo order currency code.
	OrderCurrencyCode *string `json:"order_currency_code,omitempty"`
	// Credit memo order ID.
	OrderId int32 `json:"order_id"`
	// Credit memo shipping address ID.
	ShippingAddressId *int32 `json:"shipping_address_id,omitempty"`
	// Credit memo shipping amount.
	ShippingAmount *float32 `json:"shipping_amount,omitempty"`
	// Credit memo shipping discount tax compensation amount.
	ShippingDiscountTaxCompensationAmount *float32 `json:"shipping_discount_tax_compensation_amount,omitempty"`
	// Credit memo shipping including tax.
	ShippingInclTax *float32 `json:"shipping_incl_tax,omitempty"`
	// Credit memo shipping tax amount.
	ShippingTaxAmount *float32 `json:"shipping_tax_amount,omitempty"`
	// Credit memo state.
	State *int32 `json:"state,omitempty"`
	// Credit memo store currency code.
	StoreCurrencyCode *string `json:"store_currency_code,omitempty"`
	// Credit memo store ID.
	StoreId *int32 `json:"store_id,omitempty"`
	// Credit memo store-to-base rate.
	StoreToBaseRate *float32 `json:"store_to_base_rate,omitempty"`
	// Credit memo store-to-order rate.
	StoreToOrderRate *float32 `json:"store_to_order_rate,omitempty"`
	// Credit memo subtotal.
	Subtotal *float32 `json:"subtotal,omitempty"`
	// Credit memo subtotal including tax.
	SubtotalInclTax *float32 `json:"subtotal_incl_tax,omitempty"`
	// Credit memo tax amount.
	TaxAmount *float32 `json:"tax_amount,omitempty"`
	// Credit memo transaction ID.
	TransactionId *string `json:"transaction_id,omitempty"`
	// Credit memo updated-at timestamp.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Array of credit memo items.
	Items []SalesDataCreditmemoItemInterface `json:"items"`
	// Array of any credit memo comments. Otherwise, null.
	Comments             []SalesDataCreditmemoCommentInterface  `json:"comments,omitempty"`
	ExtensionAttributes  *SalesDataCreditmemoExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataCreditmemoInterface SalesDataCreditmemoInterface

// NewSalesDataCreditmemoInterface instantiates a new SalesDataCreditmemoInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataCreditmemoInterface(orderId int32, items []SalesDataCreditmemoItemInterface) *SalesDataCreditmemoInterface {
	this := SalesDataCreditmemoInterface{}
	this.OrderId = orderId
	this.Items = items
	return &this
}

// NewSalesDataCreditmemoInterfaceWithDefaults instantiates a new SalesDataCreditmemoInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataCreditmemoInterfaceWithDefaults() *SalesDataCreditmemoInterface {
	this := SalesDataCreditmemoInterface{}
	return &this
}

// GetAdjustment returns the Adjustment field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetAdjustment() float32 {
	if o == nil || IsNil(o.Adjustment) {
		var ret float32
		return ret
	}
	return *o.Adjustment
}

// GetAdjustmentOk returns a tuple with the Adjustment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetAdjustmentOk() (*float32, bool) {
	if o == nil || IsNil(o.Adjustment) {
		return nil, false
	}
	return o.Adjustment, true
}

// HasAdjustment returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasAdjustment() bool {
	if o != nil && !IsNil(o.Adjustment) {
		return true
	}

	return false
}

// SetAdjustment gets a reference to the given float32 and assigns it to the Adjustment field.
func (o *SalesDataCreditmemoInterface) SetAdjustment(v float32) {
	o.Adjustment = &v
}

// GetAdjustmentNegative returns the AdjustmentNegative field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetAdjustmentNegative() float32 {
	if o == nil || IsNil(o.AdjustmentNegative) {
		var ret float32
		return ret
	}
	return *o.AdjustmentNegative
}

// GetAdjustmentNegativeOk returns a tuple with the AdjustmentNegative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetAdjustmentNegativeOk() (*float32, bool) {
	if o == nil || IsNil(o.AdjustmentNegative) {
		return nil, false
	}
	return o.AdjustmentNegative, true
}

// HasAdjustmentNegative returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasAdjustmentNegative() bool {
	if o != nil && !IsNil(o.AdjustmentNegative) {
		return true
	}

	return false
}

// SetAdjustmentNegative gets a reference to the given float32 and assigns it to the AdjustmentNegative field.
func (o *SalesDataCreditmemoInterface) SetAdjustmentNegative(v float32) {
	o.AdjustmentNegative = &v
}

// GetAdjustmentPositive returns the AdjustmentPositive field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetAdjustmentPositive() float32 {
	if o == nil || IsNil(o.AdjustmentPositive) {
		var ret float32
		return ret
	}
	return *o.AdjustmentPositive
}

// GetAdjustmentPositiveOk returns a tuple with the AdjustmentPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetAdjustmentPositiveOk() (*float32, bool) {
	if o == nil || IsNil(o.AdjustmentPositive) {
		return nil, false
	}
	return o.AdjustmentPositive, true
}

// HasAdjustmentPositive returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasAdjustmentPositive() bool {
	if o != nil && !IsNil(o.AdjustmentPositive) {
		return true
	}

	return false
}

// SetAdjustmentPositive gets a reference to the given float32 and assigns it to the AdjustmentPositive field.
func (o *SalesDataCreditmemoInterface) SetAdjustmentPositive(v float32) {
	o.AdjustmentPositive = &v
}

// GetBaseAdjustment returns the BaseAdjustment field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseAdjustment() float32 {
	if o == nil || IsNil(o.BaseAdjustment) {
		var ret float32
		return ret
	}
	return *o.BaseAdjustment
}

// GetBaseAdjustmentOk returns a tuple with the BaseAdjustment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseAdjustmentOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAdjustment) {
		return nil, false
	}
	return o.BaseAdjustment, true
}

// HasBaseAdjustment returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseAdjustment() bool {
	if o != nil && !IsNil(o.BaseAdjustment) {
		return true
	}

	return false
}

// SetBaseAdjustment gets a reference to the given float32 and assigns it to the BaseAdjustment field.
func (o *SalesDataCreditmemoInterface) SetBaseAdjustment(v float32) {
	o.BaseAdjustment = &v
}

// GetBaseAdjustmentNegative returns the BaseAdjustmentNegative field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseAdjustmentNegative() float32 {
	if o == nil || IsNil(o.BaseAdjustmentNegative) {
		var ret float32
		return ret
	}
	return *o.BaseAdjustmentNegative
}

// GetBaseAdjustmentNegativeOk returns a tuple with the BaseAdjustmentNegative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseAdjustmentNegativeOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAdjustmentNegative) {
		return nil, false
	}
	return o.BaseAdjustmentNegative, true
}

// HasBaseAdjustmentNegative returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseAdjustmentNegative() bool {
	if o != nil && !IsNil(o.BaseAdjustmentNegative) {
		return true
	}

	return false
}

// SetBaseAdjustmentNegative gets a reference to the given float32 and assigns it to the BaseAdjustmentNegative field.
func (o *SalesDataCreditmemoInterface) SetBaseAdjustmentNegative(v float32) {
	o.BaseAdjustmentNegative = &v
}

// GetBaseAdjustmentPositive returns the BaseAdjustmentPositive field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseAdjustmentPositive() float32 {
	if o == nil || IsNil(o.BaseAdjustmentPositive) {
		var ret float32
		return ret
	}
	return *o.BaseAdjustmentPositive
}

// GetBaseAdjustmentPositiveOk returns a tuple with the BaseAdjustmentPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseAdjustmentPositiveOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAdjustmentPositive) {
		return nil, false
	}
	return o.BaseAdjustmentPositive, true
}

// HasBaseAdjustmentPositive returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseAdjustmentPositive() bool {
	if o != nil && !IsNil(o.BaseAdjustmentPositive) {
		return true
	}

	return false
}

// SetBaseAdjustmentPositive gets a reference to the given float32 and assigns it to the BaseAdjustmentPositive field.
func (o *SalesDataCreditmemoInterface) SetBaseAdjustmentPositive(v float32) {
	o.BaseAdjustmentPositive = &v
}

// GetBaseCurrencyCode returns the BaseCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseCurrencyCode() string {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		var ret string
		return ret
	}
	return *o.BaseCurrencyCode
}

// GetBaseCurrencyCodeOk returns a tuple with the BaseCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		return nil, false
	}
	return o.BaseCurrencyCode, true
}

// HasBaseCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseCurrencyCode() bool {
	if o != nil && !IsNil(o.BaseCurrencyCode) {
		return true
	}

	return false
}

// SetBaseCurrencyCode gets a reference to the given string and assigns it to the BaseCurrencyCode field.
func (o *SalesDataCreditmemoInterface) SetBaseCurrencyCode(v string) {
	o.BaseCurrencyCode = &v
}

// GetBaseDiscountAmount returns the BaseDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseDiscountAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountAmount
}

// GetBaseDiscountAmountOk returns a tuple with the BaseDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		return nil, false
	}
	return o.BaseDiscountAmount, true
}

// HasBaseDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseDiscountAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountAmount) {
		return true
	}

	return false
}

// SetBaseDiscountAmount gets a reference to the given float32 and assigns it to the BaseDiscountAmount field.
func (o *SalesDataCreditmemoInterface) SetBaseDiscountAmount(v float32) {
	o.BaseDiscountAmount = &v
}

// GetBaseGrandTotal returns the BaseGrandTotal field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseGrandTotal() float32 {
	if o == nil || IsNil(o.BaseGrandTotal) {
		var ret float32
		return ret
	}
	return *o.BaseGrandTotal
}

// GetBaseGrandTotalOk returns a tuple with the BaseGrandTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseGrandTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseGrandTotal) {
		return nil, false
	}
	return o.BaseGrandTotal, true
}

// HasBaseGrandTotal returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseGrandTotal() bool {
	if o != nil && !IsNil(o.BaseGrandTotal) {
		return true
	}

	return false
}

// SetBaseGrandTotal gets a reference to the given float32 and assigns it to the BaseGrandTotal field.
func (o *SalesDataCreditmemoInterface) SetBaseGrandTotal(v float32) {
	o.BaseGrandTotal = &v
}

// GetBaseDiscountTaxCompensationAmount returns the BaseDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationAmount
}

// GetBaseDiscountTaxCompensationAmountOk returns a tuple with the BaseDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationAmount, true
}

// HasBaseDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationAmount field.
func (o *SalesDataCreditmemoInterface) SetBaseDiscountTaxCompensationAmount(v float32) {
	o.BaseDiscountTaxCompensationAmount = &v
}

// GetBaseShippingAmount returns the BaseShippingAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseShippingAmount() float32 {
	if o == nil || IsNil(o.BaseShippingAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingAmount
}

// GetBaseShippingAmountOk returns a tuple with the BaseShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingAmount) {
		return nil, false
	}
	return o.BaseShippingAmount, true
}

// HasBaseShippingAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseShippingAmount() bool {
	if o != nil && !IsNil(o.BaseShippingAmount) {
		return true
	}

	return false
}

// SetBaseShippingAmount gets a reference to the given float32 and assigns it to the BaseShippingAmount field.
func (o *SalesDataCreditmemoInterface) SetBaseShippingAmount(v float32) {
	o.BaseShippingAmount = &v
}

// GetBaseShippingDiscountTaxCompensationAmnt returns the BaseShippingDiscountTaxCompensationAmnt field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseShippingDiscountTaxCompensationAmnt() float32 {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		var ret float32
		return ret
	}
	return *o.BaseShippingDiscountTaxCompensationAmnt
}

// GetBaseShippingDiscountTaxCompensationAmntOk returns a tuple with the BaseShippingDiscountTaxCompensationAmnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseShippingDiscountTaxCompensationAmntOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return nil, false
	}
	return o.BaseShippingDiscountTaxCompensationAmnt, true
}

// HasBaseShippingDiscountTaxCompensationAmnt returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseShippingDiscountTaxCompensationAmnt() bool {
	if o != nil && !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return true
	}

	return false
}

// SetBaseShippingDiscountTaxCompensationAmnt gets a reference to the given float32 and assigns it to the BaseShippingDiscountTaxCompensationAmnt field.
func (o *SalesDataCreditmemoInterface) SetBaseShippingDiscountTaxCompensationAmnt(v float32) {
	o.BaseShippingDiscountTaxCompensationAmnt = &v
}

// GetBaseShippingInclTax returns the BaseShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseShippingInclTax() float32 {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseShippingInclTax
}

// GetBaseShippingInclTaxOk returns a tuple with the BaseShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		return nil, false
	}
	return o.BaseShippingInclTax, true
}

// HasBaseShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseShippingInclTax() bool {
	if o != nil && !IsNil(o.BaseShippingInclTax) {
		return true
	}

	return false
}

// SetBaseShippingInclTax gets a reference to the given float32 and assigns it to the BaseShippingInclTax field.
func (o *SalesDataCreditmemoInterface) SetBaseShippingInclTax(v float32) {
	o.BaseShippingInclTax = &v
}

// GetBaseShippingTaxAmount returns the BaseShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseShippingTaxAmount() float32 {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingTaxAmount
}

// GetBaseShippingTaxAmountOk returns a tuple with the BaseShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		return nil, false
	}
	return o.BaseShippingTaxAmount, true
}

// HasBaseShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseShippingTaxAmount() bool {
	if o != nil && !IsNil(o.BaseShippingTaxAmount) {
		return true
	}

	return false
}

// SetBaseShippingTaxAmount gets a reference to the given float32 and assigns it to the BaseShippingTaxAmount field.
func (o *SalesDataCreditmemoInterface) SetBaseShippingTaxAmount(v float32) {
	o.BaseShippingTaxAmount = &v
}

// GetBaseSubtotal returns the BaseSubtotal field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseSubtotal() float32 {
	if o == nil || IsNil(o.BaseSubtotal) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotal
}

// GetBaseSubtotalOk returns a tuple with the BaseSubtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseSubtotalOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotal) {
		return nil, false
	}
	return o.BaseSubtotal, true
}

// HasBaseSubtotal returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseSubtotal() bool {
	if o != nil && !IsNil(o.BaseSubtotal) {
		return true
	}

	return false
}

// SetBaseSubtotal gets a reference to the given float32 and assigns it to the BaseSubtotal field.
func (o *SalesDataCreditmemoInterface) SetBaseSubtotal(v float32) {
	o.BaseSubtotal = &v
}

// GetBaseSubtotalInclTax returns the BaseSubtotalInclTax field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseSubtotalInclTax() float32 {
	if o == nil || IsNil(o.BaseSubtotalInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotalInclTax
}

// GetBaseSubtotalInclTaxOk returns a tuple with the BaseSubtotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseSubtotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotalInclTax) {
		return nil, false
	}
	return o.BaseSubtotalInclTax, true
}

// HasBaseSubtotalInclTax returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseSubtotalInclTax() bool {
	if o != nil && !IsNil(o.BaseSubtotalInclTax) {
		return true
	}

	return false
}

// SetBaseSubtotalInclTax gets a reference to the given float32 and assigns it to the BaseSubtotalInclTax field.
func (o *SalesDataCreditmemoInterface) SetBaseSubtotalInclTax(v float32) {
	o.BaseSubtotalInclTax = &v
}

// GetBaseTaxAmount returns the BaseTaxAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseTaxAmount() float32 {
	if o == nil || IsNil(o.BaseTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseTaxAmount
}

// GetBaseTaxAmountOk returns a tuple with the BaseTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxAmount) {
		return nil, false
	}
	return o.BaseTaxAmount, true
}

// HasBaseTaxAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseTaxAmount() bool {
	if o != nil && !IsNil(o.BaseTaxAmount) {
		return true
	}

	return false
}

// SetBaseTaxAmount gets a reference to the given float32 and assigns it to the BaseTaxAmount field.
func (o *SalesDataCreditmemoInterface) SetBaseTaxAmount(v float32) {
	o.BaseTaxAmount = &v
}

// GetBaseToGlobalRate returns the BaseToGlobalRate field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseToGlobalRate() float32 {
	if o == nil || IsNil(o.BaseToGlobalRate) {
		var ret float32
		return ret
	}
	return *o.BaseToGlobalRate
}

// GetBaseToGlobalRateOk returns a tuple with the BaseToGlobalRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseToGlobalRateOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseToGlobalRate) {
		return nil, false
	}
	return o.BaseToGlobalRate, true
}

// HasBaseToGlobalRate returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseToGlobalRate() bool {
	if o != nil && !IsNil(o.BaseToGlobalRate) {
		return true
	}

	return false
}

// SetBaseToGlobalRate gets a reference to the given float32 and assigns it to the BaseToGlobalRate field.
func (o *SalesDataCreditmemoInterface) SetBaseToGlobalRate(v float32) {
	o.BaseToGlobalRate = &v
}

// GetBaseToOrderRate returns the BaseToOrderRate field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBaseToOrderRate() float32 {
	if o == nil || IsNil(o.BaseToOrderRate) {
		var ret float32
		return ret
	}
	return *o.BaseToOrderRate
}

// GetBaseToOrderRateOk returns a tuple with the BaseToOrderRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBaseToOrderRateOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseToOrderRate) {
		return nil, false
	}
	return o.BaseToOrderRate, true
}

// HasBaseToOrderRate returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBaseToOrderRate() bool {
	if o != nil && !IsNil(o.BaseToOrderRate) {
		return true
	}

	return false
}

// SetBaseToOrderRate gets a reference to the given float32 and assigns it to the BaseToOrderRate field.
func (o *SalesDataCreditmemoInterface) SetBaseToOrderRate(v float32) {
	o.BaseToOrderRate = &v
}

// GetBillingAddressId returns the BillingAddressId field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetBillingAddressId() int32 {
	if o == nil || IsNil(o.BillingAddressId) {
		var ret int32
		return ret
	}
	return *o.BillingAddressId
}

// GetBillingAddressIdOk returns a tuple with the BillingAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetBillingAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingAddressId) {
		return nil, false
	}
	return o.BillingAddressId, true
}

// HasBillingAddressId returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasBillingAddressId() bool {
	if o != nil && !IsNil(o.BillingAddressId) {
		return true
	}

	return false
}

// SetBillingAddressId gets a reference to the given int32 and assigns it to the BillingAddressId field.
func (o *SalesDataCreditmemoInterface) SetBillingAddressId(v int32) {
	o.BillingAddressId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SalesDataCreditmemoInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreditmemoStatus returns the CreditmemoStatus field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetCreditmemoStatus() int32 {
	if o == nil || IsNil(o.CreditmemoStatus) {
		var ret int32
		return ret
	}
	return *o.CreditmemoStatus
}

// GetCreditmemoStatusOk returns a tuple with the CreditmemoStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetCreditmemoStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.CreditmemoStatus) {
		return nil, false
	}
	return o.CreditmemoStatus, true
}

// HasCreditmemoStatus returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasCreditmemoStatus() bool {
	if o != nil && !IsNil(o.CreditmemoStatus) {
		return true
	}

	return false
}

// SetCreditmemoStatus gets a reference to the given int32 and assigns it to the CreditmemoStatus field.
func (o *SalesDataCreditmemoInterface) SetCreditmemoStatus(v int32) {
	o.CreditmemoStatus = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *SalesDataCreditmemoInterface) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetDiscountDescription returns the DiscountDescription field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetDiscountDescription() string {
	if o == nil || IsNil(o.DiscountDescription) {
		var ret string
		return ret
	}
	return *o.DiscountDescription
}

// GetDiscountDescriptionOk returns a tuple with the DiscountDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetDiscountDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountDescription) {
		return nil, false
	}
	return o.DiscountDescription, true
}

// HasDiscountDescription returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasDiscountDescription() bool {
	if o != nil && !IsNil(o.DiscountDescription) {
		return true
	}

	return false
}

// SetDiscountDescription gets a reference to the given string and assigns it to the DiscountDescription field.
func (o *SalesDataCreditmemoInterface) SetDiscountDescription(v string) {
	o.DiscountDescription = &v
}

// GetEmailSent returns the EmailSent field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetEmailSent() int32 {
	if o == nil || IsNil(o.EmailSent) {
		var ret int32
		return ret
	}
	return *o.EmailSent
}

// GetEmailSentOk returns a tuple with the EmailSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetEmailSentOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailSent) {
		return nil, false
	}
	return o.EmailSent, true
}

// HasEmailSent returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasEmailSent() bool {
	if o != nil && !IsNil(o.EmailSent) {
		return true
	}

	return false
}

// SetEmailSent gets a reference to the given int32 and assigns it to the EmailSent field.
func (o *SalesDataCreditmemoInterface) SetEmailSent(v int32) {
	o.EmailSent = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *SalesDataCreditmemoInterface) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetGlobalCurrencyCode returns the GlobalCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetGlobalCurrencyCode() string {
	if o == nil || IsNil(o.GlobalCurrencyCode) {
		var ret string
		return ret
	}
	return *o.GlobalCurrencyCode
}

// GetGlobalCurrencyCodeOk returns a tuple with the GlobalCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetGlobalCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalCurrencyCode) {
		return nil, false
	}
	return o.GlobalCurrencyCode, true
}

// HasGlobalCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasGlobalCurrencyCode() bool {
	if o != nil && !IsNil(o.GlobalCurrencyCode) {
		return true
	}

	return false
}

// SetGlobalCurrencyCode gets a reference to the given string and assigns it to the GlobalCurrencyCode field.
func (o *SalesDataCreditmemoInterface) SetGlobalCurrencyCode(v string) {
	o.GlobalCurrencyCode = &v
}

// GetGrandTotal returns the GrandTotal field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetGrandTotal() float32 {
	if o == nil || IsNil(o.GrandTotal) {
		var ret float32
		return ret
	}
	return *o.GrandTotal
}

// GetGrandTotalOk returns a tuple with the GrandTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetGrandTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.GrandTotal) {
		return nil, false
	}
	return o.GrandTotal, true
}

// HasGrandTotal returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasGrandTotal() bool {
	if o != nil && !IsNil(o.GrandTotal) {
		return true
	}

	return false
}

// SetGrandTotal gets a reference to the given float32 and assigns it to the GrandTotal field.
func (o *SalesDataCreditmemoInterface) SetGrandTotal(v float32) {
	o.GrandTotal = &v
}

// GetDiscountTaxCompensationAmount returns the DiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationAmount
}

// GetDiscountTaxCompensationAmountOk returns a tuple with the DiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.DiscountTaxCompensationAmount, true
}

// HasDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the DiscountTaxCompensationAmount field.
func (o *SalesDataCreditmemoInterface) SetDiscountTaxCompensationAmount(v float32) {
	o.DiscountTaxCompensationAmount = &v
}

// GetIncrementId returns the IncrementId field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetIncrementId() string {
	if o == nil || IsNil(o.IncrementId) {
		var ret string
		return ret
	}
	return *o.IncrementId
}

// GetIncrementIdOk returns a tuple with the IncrementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetIncrementIdOk() (*string, bool) {
	if o == nil || IsNil(o.IncrementId) {
		return nil, false
	}
	return o.IncrementId, true
}

// HasIncrementId returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasIncrementId() bool {
	if o != nil && !IsNil(o.IncrementId) {
		return true
	}

	return false
}

// SetIncrementId gets a reference to the given string and assigns it to the IncrementId field.
func (o *SalesDataCreditmemoInterface) SetIncrementId(v string) {
	o.IncrementId = &v
}

// GetInvoiceId returns the InvoiceId field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetInvoiceId() int32 {
	if o == nil || IsNil(o.InvoiceId) {
		var ret int32
		return ret
	}
	return *o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetInvoiceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InvoiceId) {
		return nil, false
	}
	return o.InvoiceId, true
}

// HasInvoiceId returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasInvoiceId() bool {
	if o != nil && !IsNil(o.InvoiceId) {
		return true
	}

	return false
}

// SetInvoiceId gets a reference to the given int32 and assigns it to the InvoiceId field.
func (o *SalesDataCreditmemoInterface) SetInvoiceId(v int32) {
	o.InvoiceId = &v
}

// GetOrderCurrencyCode returns the OrderCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetOrderCurrencyCode() string {
	if o == nil || IsNil(o.OrderCurrencyCode) {
		var ret string
		return ret
	}
	return *o.OrderCurrencyCode
}

// GetOrderCurrencyCodeOk returns a tuple with the OrderCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetOrderCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderCurrencyCode) {
		return nil, false
	}
	return o.OrderCurrencyCode, true
}

// HasOrderCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasOrderCurrencyCode() bool {
	if o != nil && !IsNil(o.OrderCurrencyCode) {
		return true
	}

	return false
}

// SetOrderCurrencyCode gets a reference to the given string and assigns it to the OrderCurrencyCode field.
func (o *SalesDataCreditmemoInterface) SetOrderCurrencyCode(v string) {
	o.OrderCurrencyCode = &v
}

// GetOrderId returns the OrderId field value
func (o *SalesDataCreditmemoInterface) GetOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *SalesDataCreditmemoInterface) SetOrderId(v int32) {
	o.OrderId = v
}

// GetShippingAddressId returns the ShippingAddressId field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetShippingAddressId() int32 {
	if o == nil || IsNil(o.ShippingAddressId) {
		var ret int32
		return ret
	}
	return *o.ShippingAddressId
}

// GetShippingAddressIdOk returns a tuple with the ShippingAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetShippingAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShippingAddressId) {
		return nil, false
	}
	return o.ShippingAddressId, true
}

// HasShippingAddressId returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasShippingAddressId() bool {
	if o != nil && !IsNil(o.ShippingAddressId) {
		return true
	}

	return false
}

// SetShippingAddressId gets a reference to the given int32 and assigns it to the ShippingAddressId field.
func (o *SalesDataCreditmemoInterface) SetShippingAddressId(v int32) {
	o.ShippingAddressId = &v
}

// GetShippingAmount returns the ShippingAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetShippingAmount() float32 {
	if o == nil || IsNil(o.ShippingAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingAmount
}

// GetShippingAmountOk returns a tuple with the ShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingAmount) {
		return nil, false
	}
	return o.ShippingAmount, true
}

// HasShippingAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasShippingAmount() bool {
	if o != nil && !IsNil(o.ShippingAmount) {
		return true
	}

	return false
}

// SetShippingAmount gets a reference to the given float32 and assigns it to the ShippingAmount field.
func (o *SalesDataCreditmemoInterface) SetShippingAmount(v float32) {
	o.ShippingAmount = &v
}

// GetShippingDiscountTaxCompensationAmount returns the ShippingDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetShippingDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingDiscountTaxCompensationAmount
}

// GetShippingDiscountTaxCompensationAmountOk returns a tuple with the ShippingDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetShippingDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.ShippingDiscountTaxCompensationAmount, true
}

// HasShippingDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasShippingDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetShippingDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the ShippingDiscountTaxCompensationAmount field.
func (o *SalesDataCreditmemoInterface) SetShippingDiscountTaxCompensationAmount(v float32) {
	o.ShippingDiscountTaxCompensationAmount = &v
}

// GetShippingInclTax returns the ShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetShippingInclTax() float32 {
	if o == nil || IsNil(o.ShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.ShippingInclTax
}

// GetShippingInclTaxOk returns a tuple with the ShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingInclTax) {
		return nil, false
	}
	return o.ShippingInclTax, true
}

// HasShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasShippingInclTax() bool {
	if o != nil && !IsNil(o.ShippingInclTax) {
		return true
	}

	return false
}

// SetShippingInclTax gets a reference to the given float32 and assigns it to the ShippingInclTax field.
func (o *SalesDataCreditmemoInterface) SetShippingInclTax(v float32) {
	o.ShippingInclTax = &v
}

// GetShippingTaxAmount returns the ShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetShippingTaxAmount() float32 {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingTaxAmount
}

// GetShippingTaxAmountOk returns a tuple with the ShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		return nil, false
	}
	return o.ShippingTaxAmount, true
}

// HasShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasShippingTaxAmount() bool {
	if o != nil && !IsNil(o.ShippingTaxAmount) {
		return true
	}

	return false
}

// SetShippingTaxAmount gets a reference to the given float32 and assigns it to the ShippingTaxAmount field.
func (o *SalesDataCreditmemoInterface) SetShippingTaxAmount(v float32) {
	o.ShippingTaxAmount = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetState() int32 {
	if o == nil || IsNil(o.State) {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetStateOk() (*int32, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *SalesDataCreditmemoInterface) SetState(v int32) {
	o.State = &v
}

// GetStoreCurrencyCode returns the StoreCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetStoreCurrencyCode() string {
	if o == nil || IsNil(o.StoreCurrencyCode) {
		var ret string
		return ret
	}
	return *o.StoreCurrencyCode
}

// GetStoreCurrencyCodeOk returns a tuple with the StoreCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetStoreCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StoreCurrencyCode) {
		return nil, false
	}
	return o.StoreCurrencyCode, true
}

// HasStoreCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasStoreCurrencyCode() bool {
	if o != nil && !IsNil(o.StoreCurrencyCode) {
		return true
	}

	return false
}

// SetStoreCurrencyCode gets a reference to the given string and assigns it to the StoreCurrencyCode field.
func (o *SalesDataCreditmemoInterface) SetStoreCurrencyCode(v string) {
	o.StoreCurrencyCode = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetStoreId() int32 {
	if o == nil || IsNil(o.StoreId) {
		var ret int32
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetStoreIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given int32 and assigns it to the StoreId field.
func (o *SalesDataCreditmemoInterface) SetStoreId(v int32) {
	o.StoreId = &v
}

// GetStoreToBaseRate returns the StoreToBaseRate field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetStoreToBaseRate() float32 {
	if o == nil || IsNil(o.StoreToBaseRate) {
		var ret float32
		return ret
	}
	return *o.StoreToBaseRate
}

// GetStoreToBaseRateOk returns a tuple with the StoreToBaseRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetStoreToBaseRateOk() (*float32, bool) {
	if o == nil || IsNil(o.StoreToBaseRate) {
		return nil, false
	}
	return o.StoreToBaseRate, true
}

// HasStoreToBaseRate returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasStoreToBaseRate() bool {
	if o != nil && !IsNil(o.StoreToBaseRate) {
		return true
	}

	return false
}

// SetStoreToBaseRate gets a reference to the given float32 and assigns it to the StoreToBaseRate field.
func (o *SalesDataCreditmemoInterface) SetStoreToBaseRate(v float32) {
	o.StoreToBaseRate = &v
}

// GetStoreToOrderRate returns the StoreToOrderRate field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetStoreToOrderRate() float32 {
	if o == nil || IsNil(o.StoreToOrderRate) {
		var ret float32
		return ret
	}
	return *o.StoreToOrderRate
}

// GetStoreToOrderRateOk returns a tuple with the StoreToOrderRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetStoreToOrderRateOk() (*float32, bool) {
	if o == nil || IsNil(o.StoreToOrderRate) {
		return nil, false
	}
	return o.StoreToOrderRate, true
}

// HasStoreToOrderRate returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasStoreToOrderRate() bool {
	if o != nil && !IsNil(o.StoreToOrderRate) {
		return true
	}

	return false
}

// SetStoreToOrderRate gets a reference to the given float32 and assigns it to the StoreToOrderRate field.
func (o *SalesDataCreditmemoInterface) SetStoreToOrderRate(v float32) {
	o.StoreToOrderRate = &v
}

// GetSubtotal returns the Subtotal field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetSubtotal() float32 {
	if o == nil || IsNil(o.Subtotal) {
		var ret float32
		return ret
	}
	return *o.Subtotal
}

// GetSubtotalOk returns a tuple with the Subtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetSubtotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Subtotal) {
		return nil, false
	}
	return o.Subtotal, true
}

// HasSubtotal returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasSubtotal() bool {
	if o != nil && !IsNil(o.Subtotal) {
		return true
	}

	return false
}

// SetSubtotal gets a reference to the given float32 and assigns it to the Subtotal field.
func (o *SalesDataCreditmemoInterface) SetSubtotal(v float32) {
	o.Subtotal = &v
}

// GetSubtotalInclTax returns the SubtotalInclTax field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetSubtotalInclTax() float32 {
	if o == nil || IsNil(o.SubtotalInclTax) {
		var ret float32
		return ret
	}
	return *o.SubtotalInclTax
}

// GetSubtotalInclTaxOk returns a tuple with the SubtotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetSubtotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.SubtotalInclTax) {
		return nil, false
	}
	return o.SubtotalInclTax, true
}

// HasSubtotalInclTax returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasSubtotalInclTax() bool {
	if o != nil && !IsNil(o.SubtotalInclTax) {
		return true
	}

	return false
}

// SetSubtotalInclTax gets a reference to the given float32 and assigns it to the SubtotalInclTax field.
func (o *SalesDataCreditmemoInterface) SetSubtotalInclTax(v float32) {
	o.SubtotalInclTax = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetTaxAmount() float32 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret float32
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float32 and assigns it to the TaxAmount field.
func (o *SalesDataCreditmemoInterface) SetTaxAmount(v float32) {
	o.TaxAmount = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *SalesDataCreditmemoInterface) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SalesDataCreditmemoInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetItems returns the Items field value
func (o *SalesDataCreditmemoInterface) GetItems() []SalesDataCreditmemoItemInterface {
	if o == nil {
		var ret []SalesDataCreditmemoItemInterface
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetItemsOk() ([]SalesDataCreditmemoItemInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *SalesDataCreditmemoInterface) SetItems(v []SalesDataCreditmemoItemInterface) {
	o.Items = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetComments() []SalesDataCreditmemoCommentInterface {
	if o == nil || IsNil(o.Comments) {
		var ret []SalesDataCreditmemoCommentInterface
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetCommentsOk() ([]SalesDataCreditmemoCommentInterface, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []SalesDataCreditmemoCommentInterface and assigns it to the Comments field.
func (o *SalesDataCreditmemoInterface) SetComments(v []SalesDataCreditmemoCommentInterface) {
	o.Comments = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataCreditmemoInterface) GetExtensionAttributes() SalesDataCreditmemoExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret SalesDataCreditmemoExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataCreditmemoInterface) GetExtensionAttributesOk() (*SalesDataCreditmemoExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataCreditmemoInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given SalesDataCreditmemoExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *SalesDataCreditmemoInterface) SetExtensionAttributes(v SalesDataCreditmemoExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o SalesDataCreditmemoInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataCreditmemoInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Adjustment) {
		toSerialize["adjustment"] = o.Adjustment
	}
	if !IsNil(o.AdjustmentNegative) {
		toSerialize["adjustment_negative"] = o.AdjustmentNegative
	}
	if !IsNil(o.AdjustmentPositive) {
		toSerialize["adjustment_positive"] = o.AdjustmentPositive
	}
	if !IsNil(o.BaseAdjustment) {
		toSerialize["base_adjustment"] = o.BaseAdjustment
	}
	if !IsNil(o.BaseAdjustmentNegative) {
		toSerialize["base_adjustment_negative"] = o.BaseAdjustmentNegative
	}
	if !IsNil(o.BaseAdjustmentPositive) {
		toSerialize["base_adjustment_positive"] = o.BaseAdjustmentPositive
	}
	if !IsNil(o.BaseCurrencyCode) {
		toSerialize["base_currency_code"] = o.BaseCurrencyCode
	}
	if !IsNil(o.BaseDiscountAmount) {
		toSerialize["base_discount_amount"] = o.BaseDiscountAmount
	}
	if !IsNil(o.BaseGrandTotal) {
		toSerialize["base_grand_total"] = o.BaseGrandTotal
	}
	if !IsNil(o.BaseDiscountTaxCompensationAmount) {
		toSerialize["base_discount_tax_compensation_amount"] = o.BaseDiscountTaxCompensationAmount
	}
	if !IsNil(o.BaseShippingAmount) {
		toSerialize["base_shipping_amount"] = o.BaseShippingAmount
	}
	if !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		toSerialize["base_shipping_discount_tax_compensation_amnt"] = o.BaseShippingDiscountTaxCompensationAmnt
	}
	if !IsNil(o.BaseShippingInclTax) {
		toSerialize["base_shipping_incl_tax"] = o.BaseShippingInclTax
	}
	if !IsNil(o.BaseShippingTaxAmount) {
		toSerialize["base_shipping_tax_amount"] = o.BaseShippingTaxAmount
	}
	if !IsNil(o.BaseSubtotal) {
		toSerialize["base_subtotal"] = o.BaseSubtotal
	}
	if !IsNil(o.BaseSubtotalInclTax) {
		toSerialize["base_subtotal_incl_tax"] = o.BaseSubtotalInclTax
	}
	if !IsNil(o.BaseTaxAmount) {
		toSerialize["base_tax_amount"] = o.BaseTaxAmount
	}
	if !IsNil(o.BaseToGlobalRate) {
		toSerialize["base_to_global_rate"] = o.BaseToGlobalRate
	}
	if !IsNil(o.BaseToOrderRate) {
		toSerialize["base_to_order_rate"] = o.BaseToOrderRate
	}
	if !IsNil(o.BillingAddressId) {
		toSerialize["billing_address_id"] = o.BillingAddressId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreditmemoStatus) {
		toSerialize["creditmemo_status"] = o.CreditmemoStatus
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountDescription) {
		toSerialize["discount_description"] = o.DiscountDescription
	}
	if !IsNil(o.EmailSent) {
		toSerialize["email_sent"] = o.EmailSent
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	if !IsNil(o.GlobalCurrencyCode) {
		toSerialize["global_currency_code"] = o.GlobalCurrencyCode
	}
	if !IsNil(o.GrandTotal) {
		toSerialize["grand_total"] = o.GrandTotal
	}
	if !IsNil(o.DiscountTaxCompensationAmount) {
		toSerialize["discount_tax_compensation_amount"] = o.DiscountTaxCompensationAmount
	}
	if !IsNil(o.IncrementId) {
		toSerialize["increment_id"] = o.IncrementId
	}
	if !IsNil(o.InvoiceId) {
		toSerialize["invoice_id"] = o.InvoiceId
	}
	if !IsNil(o.OrderCurrencyCode) {
		toSerialize["order_currency_code"] = o.OrderCurrencyCode
	}
	toSerialize["order_id"] = o.OrderId
	if !IsNil(o.ShippingAddressId) {
		toSerialize["shipping_address_id"] = o.ShippingAddressId
	}
	if !IsNil(o.ShippingAmount) {
		toSerialize["shipping_amount"] = o.ShippingAmount
	}
	if !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		toSerialize["shipping_discount_tax_compensation_amount"] = o.ShippingDiscountTaxCompensationAmount
	}
	if !IsNil(o.ShippingInclTax) {
		toSerialize["shipping_incl_tax"] = o.ShippingInclTax
	}
	if !IsNil(o.ShippingTaxAmount) {
		toSerialize["shipping_tax_amount"] = o.ShippingTaxAmount
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StoreCurrencyCode) {
		toSerialize["store_currency_code"] = o.StoreCurrencyCode
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.StoreToBaseRate) {
		toSerialize["store_to_base_rate"] = o.StoreToBaseRate
	}
	if !IsNil(o.StoreToOrderRate) {
		toSerialize["store_to_order_rate"] = o.StoreToOrderRate
	}
	if !IsNil(o.Subtotal) {
		toSerialize["subtotal"] = o.Subtotal
	}
	if !IsNil(o.SubtotalInclTax) {
		toSerialize["subtotal_incl_tax"] = o.SubtotalInclTax
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["tax_amount"] = o.TaxAmount
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["items"] = o.Items
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataCreditmemoInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_id",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataCreditmemoInterface := _SalesDataCreditmemoInterface{}

	err = json.Unmarshal(data, &varSalesDataCreditmemoInterface)

	if err != nil {
		return err
	}

	*o = SalesDataCreditmemoInterface(varSalesDataCreditmemoInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "adjustment")
		delete(additionalProperties, "adjustment_negative")
		delete(additionalProperties, "adjustment_positive")
		delete(additionalProperties, "base_adjustment")
		delete(additionalProperties, "base_adjustment_negative")
		delete(additionalProperties, "base_adjustment_positive")
		delete(additionalProperties, "base_currency_code")
		delete(additionalProperties, "base_discount_amount")
		delete(additionalProperties, "base_grand_total")
		delete(additionalProperties, "base_discount_tax_compensation_amount")
		delete(additionalProperties, "base_shipping_amount")
		delete(additionalProperties, "base_shipping_discount_tax_compensation_amnt")
		delete(additionalProperties, "base_shipping_incl_tax")
		delete(additionalProperties, "base_shipping_tax_amount")
		delete(additionalProperties, "base_subtotal")
		delete(additionalProperties, "base_subtotal_incl_tax")
		delete(additionalProperties, "base_tax_amount")
		delete(additionalProperties, "base_to_global_rate")
		delete(additionalProperties, "base_to_order_rate")
		delete(additionalProperties, "billing_address_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "creditmemo_status")
		delete(additionalProperties, "discount_amount")
		delete(additionalProperties, "discount_description")
		delete(additionalProperties, "email_sent")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "global_currency_code")
		delete(additionalProperties, "grand_total")
		delete(additionalProperties, "discount_tax_compensation_amount")
		delete(additionalProperties, "increment_id")
		delete(additionalProperties, "invoice_id")
		delete(additionalProperties, "order_currency_code")
		delete(additionalProperties, "order_id")
		delete(additionalProperties, "shipping_address_id")
		delete(additionalProperties, "shipping_amount")
		delete(additionalProperties, "shipping_discount_tax_compensation_amount")
		delete(additionalProperties, "shipping_incl_tax")
		delete(additionalProperties, "shipping_tax_amount")
		delete(additionalProperties, "state")
		delete(additionalProperties, "store_currency_code")
		delete(additionalProperties, "store_id")
		delete(additionalProperties, "store_to_base_rate")
		delete(additionalProperties, "store_to_order_rate")
		delete(additionalProperties, "subtotal")
		delete(additionalProperties, "subtotal_incl_tax")
		delete(additionalProperties, "tax_amount")
		delete(additionalProperties, "transaction_id")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "items")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataCreditmemoInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataCreditmemoInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataCreditmemoInterface struct {
	value *SalesDataCreditmemoInterface
	isSet bool
}

func (v NullableSalesDataCreditmemoInterface) Get() *SalesDataCreditmemoInterface {
	return v.value
}

func (v *NullableSalesDataCreditmemoInterface) Set(val *SalesDataCreditmemoInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataCreditmemoInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataCreditmemoInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataCreditmemoInterface(val *SalesDataCreditmemoInterface) *NullableSalesDataCreditmemoInterface {
	return &NullableSalesDataCreditmemoInterface{value: val, isSet: true}
}

func (v NullableSalesDataCreditmemoInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataCreditmemoInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
