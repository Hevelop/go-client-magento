/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PutV1CartsMineCollecttotalsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutV1CartsMineCollecttotalsRequest{}

// PutV1CartsMineCollecttotalsRequest struct for PutV1CartsMineCollecttotalsRequest
type PutV1CartsMineCollecttotalsRequest struct {
	PaymentMethod QuoteDataPaymentInterface `json:"paymentMethod"`
	// The carrier code.
	ShippingCarrierCode *string `json:"shippingCarrierCode,omitempty"`
	// The shipping method code.
	ShippingMethodCode   *string                                 `json:"shippingMethodCode,omitempty"`
	AdditionalData       *QuoteDataTotalsAdditionalDataInterface `json:"additionalData,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PutV1CartsMineCollecttotalsRequest PutV1CartsMineCollecttotalsRequest

// NewPutV1CartsMineCollecttotalsRequest instantiates a new PutV1CartsMineCollecttotalsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutV1CartsMineCollecttotalsRequest(paymentMethod QuoteDataPaymentInterface) *PutV1CartsMineCollecttotalsRequest {
	this := PutV1CartsMineCollecttotalsRequest{}
	this.PaymentMethod = paymentMethod
	return &this
}

// NewPutV1CartsMineCollecttotalsRequestWithDefaults instantiates a new PutV1CartsMineCollecttotalsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutV1CartsMineCollecttotalsRequestWithDefaults() *PutV1CartsMineCollecttotalsRequest {
	this := PutV1CartsMineCollecttotalsRequest{}
	return &this
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *PutV1CartsMineCollecttotalsRequest) GetPaymentMethod() QuoteDataPaymentInterface {
	if o == nil {
		var ret QuoteDataPaymentInterface
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *PutV1CartsMineCollecttotalsRequest) GetPaymentMethodOk() (*QuoteDataPaymentInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *PutV1CartsMineCollecttotalsRequest) SetPaymentMethod(v QuoteDataPaymentInterface) {
	o.PaymentMethod = v
}

// GetShippingCarrierCode returns the ShippingCarrierCode field value if set, zero value otherwise.
func (o *PutV1CartsMineCollecttotalsRequest) GetShippingCarrierCode() string {
	if o == nil || IsNil(o.ShippingCarrierCode) {
		var ret string
		return ret
	}
	return *o.ShippingCarrierCode
}

// GetShippingCarrierCodeOk returns a tuple with the ShippingCarrierCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutV1CartsMineCollecttotalsRequest) GetShippingCarrierCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingCarrierCode) {
		return nil, false
	}
	return o.ShippingCarrierCode, true
}

// HasShippingCarrierCode returns a boolean if a field has been set.
func (o *PutV1CartsMineCollecttotalsRequest) HasShippingCarrierCode() bool {
	if o != nil && !IsNil(o.ShippingCarrierCode) {
		return true
	}

	return false
}

// SetShippingCarrierCode gets a reference to the given string and assigns it to the ShippingCarrierCode field.
func (o *PutV1CartsMineCollecttotalsRequest) SetShippingCarrierCode(v string) {
	o.ShippingCarrierCode = &v
}

// GetShippingMethodCode returns the ShippingMethodCode field value if set, zero value otherwise.
func (o *PutV1CartsMineCollecttotalsRequest) GetShippingMethodCode() string {
	if o == nil || IsNil(o.ShippingMethodCode) {
		var ret string
		return ret
	}
	return *o.ShippingMethodCode
}

// GetShippingMethodCodeOk returns a tuple with the ShippingMethodCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutV1CartsMineCollecttotalsRequest) GetShippingMethodCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingMethodCode) {
		return nil, false
	}
	return o.ShippingMethodCode, true
}

// HasShippingMethodCode returns a boolean if a field has been set.
func (o *PutV1CartsMineCollecttotalsRequest) HasShippingMethodCode() bool {
	if o != nil && !IsNil(o.ShippingMethodCode) {
		return true
	}

	return false
}

// SetShippingMethodCode gets a reference to the given string and assigns it to the ShippingMethodCode field.
func (o *PutV1CartsMineCollecttotalsRequest) SetShippingMethodCode(v string) {
	o.ShippingMethodCode = &v
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *PutV1CartsMineCollecttotalsRequest) GetAdditionalData() QuoteDataTotalsAdditionalDataInterface {
	if o == nil || IsNil(o.AdditionalData) {
		var ret QuoteDataTotalsAdditionalDataInterface
		return ret
	}
	return *o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutV1CartsMineCollecttotalsRequest) GetAdditionalDataOk() (*QuoteDataTotalsAdditionalDataInterface, bool) {
	if o == nil || IsNil(o.AdditionalData) {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *PutV1CartsMineCollecttotalsRequest) HasAdditionalData() bool {
	if o != nil && !IsNil(o.AdditionalData) {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given QuoteDataTotalsAdditionalDataInterface and assigns it to the AdditionalData field.
func (o *PutV1CartsMineCollecttotalsRequest) SetAdditionalData(v QuoteDataTotalsAdditionalDataInterface) {
	o.AdditionalData = &v
}

func (o PutV1CartsMineCollecttotalsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutV1CartsMineCollecttotalsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["paymentMethod"] = o.PaymentMethod
	if !IsNil(o.ShippingCarrierCode) {
		toSerialize["shippingCarrierCode"] = o.ShippingCarrierCode
	}
	if !IsNil(o.ShippingMethodCode) {
		toSerialize["shippingMethodCode"] = o.ShippingMethodCode
	}
	if !IsNil(o.AdditionalData) {
		toSerialize["additionalData"] = o.AdditionalData
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PutV1CartsMineCollecttotalsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"paymentMethod",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPutV1CartsMineCollecttotalsRequest := _PutV1CartsMineCollecttotalsRequest{}

	err = json.Unmarshal(data, &varPutV1CartsMineCollecttotalsRequest)

	if err != nil {
		return err
	}

	*o = PutV1CartsMineCollecttotalsRequest(varPutV1CartsMineCollecttotalsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "paymentMethod")
		delete(additionalProperties, "shippingCarrierCode")
		delete(additionalProperties, "shippingMethodCode")
		delete(additionalProperties, "additionalData")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PutV1CartsMineCollecttotalsRequest) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PutV1CartsMineCollecttotalsRequest) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePutV1CartsMineCollecttotalsRequest struct {
	value *PutV1CartsMineCollecttotalsRequest
	isSet bool
}

func (v NullablePutV1CartsMineCollecttotalsRequest) Get() *PutV1CartsMineCollecttotalsRequest {
	return v.value
}

func (v *NullablePutV1CartsMineCollecttotalsRequest) Set(val *PutV1CartsMineCollecttotalsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutV1CartsMineCollecttotalsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutV1CartsMineCollecttotalsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutV1CartsMineCollecttotalsRequest(val *PutV1CartsMineCollecttotalsRequest) *NullablePutV1CartsMineCollecttotalsRequest {
	return &NullablePutV1CartsMineCollecttotalsRequest{value: val, isSet: true}
}

func (v NullablePutV1CartsMineCollecttotalsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutV1CartsMineCollecttotalsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
