/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the RequisitionListDataRequisitionListInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequisitionListDataRequisitionListInterface{}

// RequisitionListDataRequisitionListInterface Interface RequisitionListInterface
type RequisitionListDataRequisitionListInterface struct {
	// Requisition List ID
	Id int32 `json:"id"`
	// Customer ID
	CustomerId int32 `json:"customer_id"`
	// Requisition List Name
	Name string `json:"name"`
	// Requisition List Update Time
	UpdatedAt string `json:"updated_at"`
	// Requisition List Description
	Description string `json:"description"`
	// Requisition List Items
	Items []RequisitionListDataRequisitionListItemInterface `json:"items"`
	// ExtensionInterface class for @see \\Magento\\RequisitionList\\Api\\Data\\RequisitionListInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RequisitionListDataRequisitionListInterface RequisitionListDataRequisitionListInterface

// NewRequisitionListDataRequisitionListInterface instantiates a new RequisitionListDataRequisitionListInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequisitionListDataRequisitionListInterface(id int32, customerId int32, name string, updatedAt string, description string, items []RequisitionListDataRequisitionListItemInterface) *RequisitionListDataRequisitionListInterface {
	this := RequisitionListDataRequisitionListInterface{}
	this.Id = id
	this.CustomerId = customerId
	this.Name = name
	this.UpdatedAt = updatedAt
	this.Description = description
	this.Items = items
	return &this
}

// NewRequisitionListDataRequisitionListInterfaceWithDefaults instantiates a new RequisitionListDataRequisitionListInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequisitionListDataRequisitionListInterfaceWithDefaults() *RequisitionListDataRequisitionListInterface {
	this := RequisitionListDataRequisitionListInterface{}
	return &this
}

// GetId returns the Id field value
func (o *RequisitionListDataRequisitionListInterface) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RequisitionListDataRequisitionListInterface) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RequisitionListDataRequisitionListInterface) SetId(v int32) {
	o.Id = v
}

// GetCustomerId returns the CustomerId field value
func (o *RequisitionListDataRequisitionListInterface) GetCustomerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *RequisitionListDataRequisitionListInterface) GetCustomerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *RequisitionListDataRequisitionListInterface) SetCustomerId(v int32) {
	o.CustomerId = v
}

// GetName returns the Name field value
func (o *RequisitionListDataRequisitionListInterface) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RequisitionListDataRequisitionListInterface) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RequisitionListDataRequisitionListInterface) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *RequisitionListDataRequisitionListInterface) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *RequisitionListDataRequisitionListInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *RequisitionListDataRequisitionListInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetDescription returns the Description field value
func (o *RequisitionListDataRequisitionListInterface) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RequisitionListDataRequisitionListInterface) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RequisitionListDataRequisitionListInterface) SetDescription(v string) {
	o.Description = v
}

// GetItems returns the Items field value
func (o *RequisitionListDataRequisitionListInterface) GetItems() []RequisitionListDataRequisitionListItemInterface {
	if o == nil {
		var ret []RequisitionListDataRequisitionListItemInterface
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *RequisitionListDataRequisitionListInterface) GetItemsOk() ([]RequisitionListDataRequisitionListItemInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *RequisitionListDataRequisitionListInterface) SetItems(v []RequisitionListDataRequisitionListItemInterface) {
	o.Items = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *RequisitionListDataRequisitionListInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequisitionListDataRequisitionListInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *RequisitionListDataRequisitionListInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *RequisitionListDataRequisitionListInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o RequisitionListDataRequisitionListInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequisitionListDataRequisitionListInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["name"] = o.Name
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["description"] = o.Description
	toSerialize["items"] = o.Items
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RequisitionListDataRequisitionListInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"customer_id",
		"name",
		"updated_at",
		"description",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequisitionListDataRequisitionListInterface := _RequisitionListDataRequisitionListInterface{}

	err = json.Unmarshal(data, &varRequisitionListDataRequisitionListInterface)

	if err != nil {
		return err
	}

	*o = RequisitionListDataRequisitionListInterface(varRequisitionListDataRequisitionListInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "description")
		delete(additionalProperties, "items")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *RequisitionListDataRequisitionListInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *RequisitionListDataRequisitionListInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableRequisitionListDataRequisitionListInterface struct {
	value *RequisitionListDataRequisitionListInterface
	isSet bool
}

func (v NullableRequisitionListDataRequisitionListInterface) Get() *RequisitionListDataRequisitionListInterface {
	return v.value
}

func (v *NullableRequisitionListDataRequisitionListInterface) Set(val *RequisitionListDataRequisitionListInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableRequisitionListDataRequisitionListInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableRequisitionListDataRequisitionListInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequisitionListDataRequisitionListInterface(val *RequisitionListDataRequisitionListInterface) *NullableRequisitionListDataRequisitionListInterface {
	return &NullableRequisitionListDataRequisitionListInterface{value: val, isSet: true}
}

func (v NullableRequisitionListDataRequisitionListInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequisitionListDataRequisitionListInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
