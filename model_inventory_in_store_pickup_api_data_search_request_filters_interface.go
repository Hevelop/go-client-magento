/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the InventoryInStorePickupApiDataSearchRequestFiltersInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryInStorePickupApiDataSearchRequestFiltersInterface{}

// InventoryInStorePickupApiDataSearchRequestFiltersInterface Filter to filter by Fields. Each field may be filtered with different condition type. Supported condition types restricted by @see \\Magento\\Framework\\Api\\SearchCriteriaInterface
type InventoryInStorePickupApiDataSearchRequestFiltersInterface struct {
	Country              *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"country,omitempty"`
	Postcode             *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"postcode,omitempty"`
	Region               *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"region,omitempty"`
	RegionId             *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"region_id,omitempty"`
	City                 *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"city,omitempty"`
	Street               *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"street,omitempty"`
	Name                 *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"name,omitempty"`
	PickupLocationCode   *InventoryInStorePickupApiDataSearchRequestFilterInterface `json:"pickup_location_code,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InventoryInStorePickupApiDataSearchRequestFiltersInterface InventoryInStorePickupApiDataSearchRequestFiltersInterface

// NewInventoryInStorePickupApiDataSearchRequestFiltersInterface instantiates a new InventoryInStorePickupApiDataSearchRequestFiltersInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryInStorePickupApiDataSearchRequestFiltersInterface() *InventoryInStorePickupApiDataSearchRequestFiltersInterface {
	this := InventoryInStorePickupApiDataSearchRequestFiltersInterface{}
	return &this
}

// NewInventoryInStorePickupApiDataSearchRequestFiltersInterfaceWithDefaults instantiates a new InventoryInStorePickupApiDataSearchRequestFiltersInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryInStorePickupApiDataSearchRequestFiltersInterfaceWithDefaults() *InventoryInStorePickupApiDataSearchRequestFiltersInterface {
	this := InventoryInStorePickupApiDataSearchRequestFiltersInterface{}
	return &this
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetCountry() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.Country) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetCountryOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the Country field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetCountry(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.Country = &v
}

// GetPostcode returns the Postcode field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetPostcode() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.Postcode) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetPostcodeOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.Postcode) {
		return nil, false
	}
	return o.Postcode, true
}

// HasPostcode returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasPostcode() bool {
	if o != nil && !IsNil(o.Postcode) {
		return true
	}

	return false
}

// SetPostcode gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the Postcode field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetPostcode(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.Postcode = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetRegion() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.Region) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetRegionOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the Region field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetRegion(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.Region = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetRegionId() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.RegionId) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetRegionIdOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the RegionId field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetRegionId(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.RegionId = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetCity() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.City) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetCityOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the City field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetCity(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.City = &v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetStreet() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.Street) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetStreetOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.Street) {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasStreet() bool {
	if o != nil && !IsNil(o.Street) {
		return true
	}

	return false
}

// SetStreet gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the Street field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetStreet(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.Street = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetName() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.Name) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetNameOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the Name field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetName(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.Name = &v
}

// GetPickupLocationCode returns the PickupLocationCode field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetPickupLocationCode() InventoryInStorePickupApiDataSearchRequestFilterInterface {
	if o == nil || IsNil(o.PickupLocationCode) {
		var ret InventoryInStorePickupApiDataSearchRequestFilterInterface
		return ret
	}
	return *o.PickupLocationCode
}

// GetPickupLocationCodeOk returns a tuple with the PickupLocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetPickupLocationCodeOk() (*InventoryInStorePickupApiDataSearchRequestFilterInterface, bool) {
	if o == nil || IsNil(o.PickupLocationCode) {
		return nil, false
	}
	return o.PickupLocationCode, true
}

// HasPickupLocationCode returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) HasPickupLocationCode() bool {
	if o != nil && !IsNil(o.PickupLocationCode) {
		return true
	}

	return false
}

// SetPickupLocationCode gets a reference to the given InventoryInStorePickupApiDataSearchRequestFilterInterface and assigns it to the PickupLocationCode field.
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetPickupLocationCode(v InventoryInStorePickupApiDataSearchRequestFilterInterface) {
	o.PickupLocationCode = &v
}

func (o InventoryInStorePickupApiDataSearchRequestFiltersInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryInStorePickupApiDataSearchRequestFiltersInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Postcode) {
		toSerialize["postcode"] = o.Postcode
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RegionId) {
		toSerialize["region_id"] = o.RegionId
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Street) {
		toSerialize["street"] = o.Street
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PickupLocationCode) {
		toSerialize["pickup_location_code"] = o.PickupLocationCode
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) UnmarshalJSON(data []byte) (err error) {
	varInventoryInStorePickupApiDataSearchRequestFiltersInterface := _InventoryInStorePickupApiDataSearchRequestFiltersInterface{}

	err = json.Unmarshal(data, &varInventoryInStorePickupApiDataSearchRequestFiltersInterface)

	if err != nil {
		return err
	}

	*o = InventoryInStorePickupApiDataSearchRequestFiltersInterface(varInventoryInStorePickupApiDataSearchRequestFiltersInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "country")
		delete(additionalProperties, "postcode")
		delete(additionalProperties, "region")
		delete(additionalProperties, "region_id")
		delete(additionalProperties, "city")
		delete(additionalProperties, "street")
		delete(additionalProperties, "name")
		delete(additionalProperties, "pickup_location_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *InventoryInStorePickupApiDataSearchRequestFiltersInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface struct {
	value *InventoryInStorePickupApiDataSearchRequestFiltersInterface
	isSet bool
}

func (v NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface) Get() *InventoryInStorePickupApiDataSearchRequestFiltersInterface {
	return v.value
}

func (v *NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface) Set(val *InventoryInStorePickupApiDataSearchRequestFiltersInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryInStorePickupApiDataSearchRequestFiltersInterface(val *InventoryInStorePickupApiDataSearchRequestFiltersInterface) *NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface {
	return &NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface{value: val, isSet: true}
}

func (v NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryInStorePickupApiDataSearchRequestFiltersInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
