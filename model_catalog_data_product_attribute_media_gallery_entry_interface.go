/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the CatalogDataProductAttributeMediaGalleryEntryInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogDataProductAttributeMediaGalleryEntryInterface{}

// CatalogDataProductAttributeMediaGalleryEntryInterface
type CatalogDataProductAttributeMediaGalleryEntryInterface struct {
	// Gallery entry ID
	Id *int32 `json:"id,omitempty"`
	// Media type
	MediaType string `json:"media_type"`
	// Gallery entry alternative text
	Label string `json:"label"`
	// Gallery entry position (sort order)
	Position int32 `json:"position"`
	// If gallery entry is hidden from product page
	Disabled bool `json:"disabled"`
	// Gallery entry image types (thumbnail, image, small_image etc)
	Types []string `json:"types"`
	// File path
	File                 *string                                                         `json:"file,omitempty"`
	Content              *FrameworkDataImageContentInterface                             `json:"content,omitempty"`
	ExtensionAttributes  *CatalogDataProductAttributeMediaGalleryEntryExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CatalogDataProductAttributeMediaGalleryEntryInterface CatalogDataProductAttributeMediaGalleryEntryInterface

// NewCatalogDataProductAttributeMediaGalleryEntryInterface instantiates a new CatalogDataProductAttributeMediaGalleryEntryInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogDataProductAttributeMediaGalleryEntryInterface(mediaType string, label string, position int32, disabled bool, types []string) *CatalogDataProductAttributeMediaGalleryEntryInterface {
	this := CatalogDataProductAttributeMediaGalleryEntryInterface{}
	this.MediaType = mediaType
	this.Label = label
	this.Position = position
	this.Disabled = disabled
	this.Types = types
	return &this
}

// NewCatalogDataProductAttributeMediaGalleryEntryInterfaceWithDefaults instantiates a new CatalogDataProductAttributeMediaGalleryEntryInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogDataProductAttributeMediaGalleryEntryInterfaceWithDefaults() *CatalogDataProductAttributeMediaGalleryEntryInterface {
	this := CatalogDataProductAttributeMediaGalleryEntryInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetId(v int32) {
	o.Id = &v
}

// GetMediaType returns the MediaType field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetMediaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetMediaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaType, true
}

// SetMediaType sets field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetMediaType(v string) {
	o.MediaType = v
}

// GetLabel returns the Label field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetLabel(v string) {
	o.Label = v
}

// GetPosition returns the Position field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetPosition() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetPositionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetPosition(v int32) {
	o.Position = v
}

// GetDisabled returns the Disabled field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetDisabled(v bool) {
	o.Disabled = v
}

// GetTypes returns the Types field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetTypes(v []string) {
	o.Types = v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetFile() string {
	if o == nil || IsNil(o.File) {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetFileOk() (*string, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetFile(v string) {
	o.File = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetContent() FrameworkDataImageContentInterface {
	if o == nil || IsNil(o.Content) {
		var ret FrameworkDataImageContentInterface
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetContentOk() (*FrameworkDataImageContentInterface, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given FrameworkDataImageContentInterface and assigns it to the Content field.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetContent(v FrameworkDataImageContentInterface) {
	o.Content = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetExtensionAttributes() CatalogDataProductAttributeMediaGalleryEntryExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret CatalogDataProductAttributeMediaGalleryEntryExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetExtensionAttributesOk() (*CatalogDataProductAttributeMediaGalleryEntryExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given CatalogDataProductAttributeMediaGalleryEntryExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetExtensionAttributes(v CatalogDataProductAttributeMediaGalleryEntryExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o CatalogDataProductAttributeMediaGalleryEntryInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogDataProductAttributeMediaGalleryEntryInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["media_type"] = o.MediaType
	toSerialize["label"] = o.Label
	toSerialize["position"] = o.Position
	toSerialize["disabled"] = o.Disabled
	toSerialize["types"] = o.Types
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"media_type",
		"label",
		"position",
		"disabled",
		"types",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogDataProductAttributeMediaGalleryEntryInterface := _CatalogDataProductAttributeMediaGalleryEntryInterface{}

	err = json.Unmarshal(data, &varCatalogDataProductAttributeMediaGalleryEntryInterface)

	if err != nil {
		return err
	}

	*o = CatalogDataProductAttributeMediaGalleryEntryInterface(varCatalogDataProductAttributeMediaGalleryEntryInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "media_type")
		delete(additionalProperties, "label")
		delete(additionalProperties, "position")
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "types")
		delete(additionalProperties, "file")
		delete(additionalProperties, "content")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CatalogDataProductAttributeMediaGalleryEntryInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCatalogDataProductAttributeMediaGalleryEntryInterface struct {
	value *CatalogDataProductAttributeMediaGalleryEntryInterface
	isSet bool
}

func (v NullableCatalogDataProductAttributeMediaGalleryEntryInterface) Get() *CatalogDataProductAttributeMediaGalleryEntryInterface {
	return v.value
}

func (v *NullableCatalogDataProductAttributeMediaGalleryEntryInterface) Set(val *CatalogDataProductAttributeMediaGalleryEntryInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogDataProductAttributeMediaGalleryEntryInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogDataProductAttributeMediaGalleryEntryInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogDataProductAttributeMediaGalleryEntryInterface(val *CatalogDataProductAttributeMediaGalleryEntryInterface) *NullableCatalogDataProductAttributeMediaGalleryEntryInterface {
	return &NullableCatalogDataProductAttributeMediaGalleryEntryInterface{value: val, isSet: true}
}

func (v NullableCatalogDataProductAttributeMediaGalleryEntryInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogDataProductAttributeMediaGalleryEntryInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
