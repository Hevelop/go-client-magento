/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the EavDataAttributeFrontendLabelInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EavDataAttributeFrontendLabelInterface{}

// EavDataAttributeFrontendLabelInterface Interface AttributeFrontendLabelInterface
type EavDataAttributeFrontendLabelInterface struct {
	// Store id
	StoreId *int32 `json:"store_id,omitempty"`
	// Option label
	Label                *string `json:"label,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EavDataAttributeFrontendLabelInterface EavDataAttributeFrontendLabelInterface

// NewEavDataAttributeFrontendLabelInterface instantiates a new EavDataAttributeFrontendLabelInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEavDataAttributeFrontendLabelInterface() *EavDataAttributeFrontendLabelInterface {
	this := EavDataAttributeFrontendLabelInterface{}
	return &this
}

// NewEavDataAttributeFrontendLabelInterfaceWithDefaults instantiates a new EavDataAttributeFrontendLabelInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEavDataAttributeFrontendLabelInterfaceWithDefaults() *EavDataAttributeFrontendLabelInterface {
	this := EavDataAttributeFrontendLabelInterface{}
	return &this
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *EavDataAttributeFrontendLabelInterface) GetStoreId() int32 {
	if o == nil || IsNil(o.StoreId) {
		var ret int32
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EavDataAttributeFrontendLabelInterface) GetStoreIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *EavDataAttributeFrontendLabelInterface) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given int32 and assigns it to the StoreId field.
func (o *EavDataAttributeFrontendLabelInterface) SetStoreId(v int32) {
	o.StoreId = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *EavDataAttributeFrontendLabelInterface) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EavDataAttributeFrontendLabelInterface) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *EavDataAttributeFrontendLabelInterface) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *EavDataAttributeFrontendLabelInterface) SetLabel(v string) {
	o.Label = &v
}

func (o EavDataAttributeFrontendLabelInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EavDataAttributeFrontendLabelInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EavDataAttributeFrontendLabelInterface) UnmarshalJSON(data []byte) (err error) {
	varEavDataAttributeFrontendLabelInterface := _EavDataAttributeFrontendLabelInterface{}

	err = json.Unmarshal(data, &varEavDataAttributeFrontendLabelInterface)

	if err != nil {
		return err
	}

	*o = EavDataAttributeFrontendLabelInterface(varEavDataAttributeFrontendLabelInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "store_id")
		delete(additionalProperties, "label")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *EavDataAttributeFrontendLabelInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *EavDataAttributeFrontendLabelInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableEavDataAttributeFrontendLabelInterface struct {
	value *EavDataAttributeFrontendLabelInterface
	isSet bool
}

func (v NullableEavDataAttributeFrontendLabelInterface) Get() *EavDataAttributeFrontendLabelInterface {
	return v.value
}

func (v *NullableEavDataAttributeFrontendLabelInterface) Set(val *EavDataAttributeFrontendLabelInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableEavDataAttributeFrontendLabelInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableEavDataAttributeFrontendLabelInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEavDataAttributeFrontendLabelInterface(val *EavDataAttributeFrontendLabelInterface) *NullableEavDataAttributeFrontendLabelInterface {
	return &NullableEavDataAttributeFrontendLabelInterface{value: val, isSet: true}
}

func (v NullableEavDataAttributeFrontendLabelInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEavDataAttributeFrontendLabelInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
