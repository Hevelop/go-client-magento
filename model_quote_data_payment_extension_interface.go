/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the QuoteDataPaymentExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataPaymentExtensionInterface{}

// QuoteDataPaymentExtensionInterface ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface
type QuoteDataPaymentExtensionInterface struct {
	AgreementIds         []string `json:"agreement_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuoteDataPaymentExtensionInterface QuoteDataPaymentExtensionInterface

// NewQuoteDataPaymentExtensionInterface instantiates a new QuoteDataPaymentExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataPaymentExtensionInterface() *QuoteDataPaymentExtensionInterface {
	this := QuoteDataPaymentExtensionInterface{}
	return &this
}

// NewQuoteDataPaymentExtensionInterfaceWithDefaults instantiates a new QuoteDataPaymentExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataPaymentExtensionInterfaceWithDefaults() *QuoteDataPaymentExtensionInterface {
	this := QuoteDataPaymentExtensionInterface{}
	return &this
}

// GetAgreementIds returns the AgreementIds field value if set, zero value otherwise.
func (o *QuoteDataPaymentExtensionInterface) GetAgreementIds() []string {
	if o == nil || IsNil(o.AgreementIds) {
		var ret []string
		return ret
	}
	return o.AgreementIds
}

// GetAgreementIdsOk returns a tuple with the AgreementIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataPaymentExtensionInterface) GetAgreementIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AgreementIds) {
		return nil, false
	}
	return o.AgreementIds, true
}

// HasAgreementIds returns a boolean if a field has been set.
func (o *QuoteDataPaymentExtensionInterface) HasAgreementIds() bool {
	if o != nil && !IsNil(o.AgreementIds) {
		return true
	}

	return false
}

// SetAgreementIds gets a reference to the given []string and assigns it to the AgreementIds field.
func (o *QuoteDataPaymentExtensionInterface) SetAgreementIds(v []string) {
	o.AgreementIds = v
}

func (o QuoteDataPaymentExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataPaymentExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgreementIds) {
		toSerialize["agreement_ids"] = o.AgreementIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataPaymentExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varQuoteDataPaymentExtensionInterface := _QuoteDataPaymentExtensionInterface{}

	err = json.Unmarshal(data, &varQuoteDataPaymentExtensionInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataPaymentExtensionInterface(varQuoteDataPaymentExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agreement_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataPaymentExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataPaymentExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataPaymentExtensionInterface struct {
	value *QuoteDataPaymentExtensionInterface
	isSet bool
}

func (v NullableQuoteDataPaymentExtensionInterface) Get() *QuoteDataPaymentExtensionInterface {
	return v.value
}

func (v *NullableQuoteDataPaymentExtensionInterface) Set(val *QuoteDataPaymentExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataPaymentExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataPaymentExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataPaymentExtensionInterface(val *QuoteDataPaymentExtensionInterface) *NullableQuoteDataPaymentExtensionInterface {
	return &NullableQuoteDataPaymentExtensionInterface{value: val, isSet: true}
}

func (v NullableQuoteDataPaymentExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataPaymentExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
