/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the CompanyCreditDataCreditLimitInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyCreditDataCreditLimitInterface{}

// CompanyCreditDataCreditLimitInterface Credit Limit data transfer object interface.
type CompanyCreditDataCreditLimitInterface struct {
	// ID.
	Id *int32 `json:"id,omitempty"`
	// Company id.
	CompanyId *int32 `json:"company_id,omitempty"`
	// Credit Limit.
	CreditLimit *float32 `json:"credit_limit,omitempty"`
	// Balance.
	Balance *float32 `json:"balance,omitempty"`
	// Currency Code.
	CurrencyCode *string `json:"currency_code,omitempty"`
	// Exceed Limit.
	ExceedLimit bool `json:"exceed_limit"`
	// Available Limit.
	AvailableLimit *float32 `json:"available_limit,omitempty"`
	// Credit comment for company credit history.
	CreditComment *string `json:"credit_comment,omitempty"`
	// ExtensionInterface class for @see \\Magento\\CompanyCredit\\Api\\Data\\CreditLimitInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CompanyCreditDataCreditLimitInterface CompanyCreditDataCreditLimitInterface

// NewCompanyCreditDataCreditLimitInterface instantiates a new CompanyCreditDataCreditLimitInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyCreditDataCreditLimitInterface(exceedLimit bool) *CompanyCreditDataCreditLimitInterface {
	this := CompanyCreditDataCreditLimitInterface{}
	this.ExceedLimit = exceedLimit
	return &this
}

// NewCompanyCreditDataCreditLimitInterfaceWithDefaults instantiates a new CompanyCreditDataCreditLimitInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyCreditDataCreditLimitInterfaceWithDefaults() *CompanyCreditDataCreditLimitInterface {
	this := CompanyCreditDataCreditLimitInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CompanyCreditDataCreditLimitInterface) SetId(v int32) {
	o.Id = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *CompanyCreditDataCreditLimitInterface) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetCreditLimit() float32 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret float32
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetCreditLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given float32 and assigns it to the CreditLimit field.
func (o *CompanyCreditDataCreditLimitInterface) SetCreditLimit(v float32) {
	o.CreditLimit = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetBalance() float32 {
	if o == nil || IsNil(o.Balance) {
		var ret float32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float32 and assigns it to the Balance field.
func (o *CompanyCreditDataCreditLimitInterface) SetBalance(v float32) {
	o.Balance = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *CompanyCreditDataCreditLimitInterface) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetExceedLimit returns the ExceedLimit field value
func (o *CompanyCreditDataCreditLimitInterface) GetExceedLimit() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExceedLimit
}

// GetExceedLimitOk returns a tuple with the ExceedLimit field value
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetExceedLimitOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExceedLimit, true
}

// SetExceedLimit sets field value
func (o *CompanyCreditDataCreditLimitInterface) SetExceedLimit(v bool) {
	o.ExceedLimit = v
}

// GetAvailableLimit returns the AvailableLimit field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetAvailableLimit() float32 {
	if o == nil || IsNil(o.AvailableLimit) {
		var ret float32
		return ret
	}
	return *o.AvailableLimit
}

// GetAvailableLimitOk returns a tuple with the AvailableLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetAvailableLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.AvailableLimit) {
		return nil, false
	}
	return o.AvailableLimit, true
}

// HasAvailableLimit returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasAvailableLimit() bool {
	if o != nil && !IsNil(o.AvailableLimit) {
		return true
	}

	return false
}

// SetAvailableLimit gets a reference to the given float32 and assigns it to the AvailableLimit field.
func (o *CompanyCreditDataCreditLimitInterface) SetAvailableLimit(v float32) {
	o.AvailableLimit = &v
}

// GetCreditComment returns the CreditComment field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetCreditComment() string {
	if o == nil || IsNil(o.CreditComment) {
		var ret string
		return ret
	}
	return *o.CreditComment
}

// GetCreditCommentOk returns a tuple with the CreditComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetCreditCommentOk() (*string, bool) {
	if o == nil || IsNil(o.CreditComment) {
		return nil, false
	}
	return o.CreditComment, true
}

// HasCreditComment returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasCreditComment() bool {
	if o != nil && !IsNil(o.CreditComment) {
		return true
	}

	return false
}

// SetCreditComment gets a reference to the given string and assigns it to the CreditComment field.
func (o *CompanyCreditDataCreditLimitInterface) SetCreditComment(v string) {
	o.CreditComment = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CompanyCreditDataCreditLimitInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyCreditDataCreditLimitInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CompanyCreditDataCreditLimitInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *CompanyCreditDataCreditLimitInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o CompanyCreditDataCreditLimitInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyCreditDataCreditLimitInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["credit_limit"] = o.CreditLimit
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	toSerialize["exceed_limit"] = o.ExceedLimit
	if !IsNil(o.AvailableLimit) {
		toSerialize["available_limit"] = o.AvailableLimit
	}
	if !IsNil(o.CreditComment) {
		toSerialize["credit_comment"] = o.CreditComment
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CompanyCreditDataCreditLimitInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"exceed_limit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompanyCreditDataCreditLimitInterface := _CompanyCreditDataCreditLimitInterface{}

	err = json.Unmarshal(data, &varCompanyCreditDataCreditLimitInterface)

	if err != nil {
		return err
	}

	*o = CompanyCreditDataCreditLimitInterface(varCompanyCreditDataCreditLimitInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "credit_limit")
		delete(additionalProperties, "balance")
		delete(additionalProperties, "currency_code")
		delete(additionalProperties, "exceed_limit")
		delete(additionalProperties, "available_limit")
		delete(additionalProperties, "credit_comment")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CompanyCreditDataCreditLimitInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CompanyCreditDataCreditLimitInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCompanyCreditDataCreditLimitInterface struct {
	value *CompanyCreditDataCreditLimitInterface
	isSet bool
}

func (v NullableCompanyCreditDataCreditLimitInterface) Get() *CompanyCreditDataCreditLimitInterface {
	return v.value
}

func (v *NullableCompanyCreditDataCreditLimitInterface) Set(val *CompanyCreditDataCreditLimitInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyCreditDataCreditLimitInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyCreditDataCreditLimitInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyCreditDataCreditLimitInterface(val *CompanyCreditDataCreditLimitInterface) *NullableCompanyCreditDataCreditLimitInterface {
	return &NullableCompanyCreditDataCreditLimitInterface{value: val, isSet: true}
}

func (v NullableCompanyCreditDataCreditLimitInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyCreditDataCreditLimitInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
