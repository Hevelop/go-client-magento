/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentServicesPaypalPaymentConfigResponseInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServicesPaypalPaymentConfigResponseInterface{}

// PaymentServicesPaypalPaymentConfigResponseInterface
type PaymentServicesPaypalPaymentConfigResponseInterface struct {
	ApplePay             PaymentServicesPaypalDataPaymentConfigApplePayInterface     `json:"apple_pay"`
	HostedFields         PaymentServicesPaypalDataPaymentConfigHostedFieldsInterface `json:"hosted_fields"`
	SmartButtons         PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface `json:"smart_buttons"`
	AdditionalProperties map[string]interface{}
}

type _PaymentServicesPaypalPaymentConfigResponseInterface PaymentServicesPaypalPaymentConfigResponseInterface

// NewPaymentServicesPaypalPaymentConfigResponseInterface instantiates a new PaymentServicesPaypalPaymentConfigResponseInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServicesPaypalPaymentConfigResponseInterface(applePay PaymentServicesPaypalDataPaymentConfigApplePayInterface, hostedFields PaymentServicesPaypalDataPaymentConfigHostedFieldsInterface, smartButtons PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) *PaymentServicesPaypalPaymentConfigResponseInterface {
	this := PaymentServicesPaypalPaymentConfigResponseInterface{}
	this.ApplePay = applePay
	this.HostedFields = hostedFields
	this.SmartButtons = smartButtons
	return &this
}

// NewPaymentServicesPaypalPaymentConfigResponseInterfaceWithDefaults instantiates a new PaymentServicesPaypalPaymentConfigResponseInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServicesPaypalPaymentConfigResponseInterfaceWithDefaults() *PaymentServicesPaypalPaymentConfigResponseInterface {
	this := PaymentServicesPaypalPaymentConfigResponseInterface{}
	return &this
}

// GetApplePay returns the ApplePay field value
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) GetApplePay() PaymentServicesPaypalDataPaymentConfigApplePayInterface {
	if o == nil {
		var ret PaymentServicesPaypalDataPaymentConfigApplePayInterface
		return ret
	}

	return o.ApplePay
}

// GetApplePayOk returns a tuple with the ApplePay field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) GetApplePayOk() (*PaymentServicesPaypalDataPaymentConfigApplePayInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplePay, true
}

// SetApplePay sets field value
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) SetApplePay(v PaymentServicesPaypalDataPaymentConfigApplePayInterface) {
	o.ApplePay = v
}

// GetHostedFields returns the HostedFields field value
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) GetHostedFields() PaymentServicesPaypalDataPaymentConfigHostedFieldsInterface {
	if o == nil {
		var ret PaymentServicesPaypalDataPaymentConfigHostedFieldsInterface
		return ret
	}

	return o.HostedFields
}

// GetHostedFieldsOk returns a tuple with the HostedFields field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) GetHostedFieldsOk() (*PaymentServicesPaypalDataPaymentConfigHostedFieldsInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostedFields, true
}

// SetHostedFields sets field value
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) SetHostedFields(v PaymentServicesPaypalDataPaymentConfigHostedFieldsInterface) {
	o.HostedFields = v
}

// GetSmartButtons returns the SmartButtons field value
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) GetSmartButtons() PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface {
	if o == nil {
		var ret PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface
		return ret
	}

	return o.SmartButtons
}

// GetSmartButtonsOk returns a tuple with the SmartButtons field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) GetSmartButtonsOk() (*PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmartButtons, true
}

// SetSmartButtons sets field value
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) SetSmartButtons(v PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) {
	o.SmartButtons = v
}

func (o PaymentServicesPaypalPaymentConfigResponseInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServicesPaypalPaymentConfigResponseInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apple_pay"] = o.ApplePay
	toSerialize["hosted_fields"] = o.HostedFields
	toSerialize["smart_buttons"] = o.SmartButtons

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentServicesPaypalPaymentConfigResponseInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apple_pay",
		"hosted_fields",
		"smart_buttons",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentServicesPaypalPaymentConfigResponseInterface := _PaymentServicesPaypalPaymentConfigResponseInterface{}

	err = json.Unmarshal(data, &varPaymentServicesPaypalPaymentConfigResponseInterface)

	if err != nil {
		return err
	}

	*o = PaymentServicesPaypalPaymentConfigResponseInterface(varPaymentServicesPaypalPaymentConfigResponseInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "apple_pay")
		delete(additionalProperties, "hosted_fields")
		delete(additionalProperties, "smart_buttons")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PaymentServicesPaypalPaymentConfigResponseInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePaymentServicesPaypalPaymentConfigResponseInterface struct {
	value *PaymentServicesPaypalPaymentConfigResponseInterface
	isSet bool
}

func (v NullablePaymentServicesPaypalPaymentConfigResponseInterface) Get() *PaymentServicesPaypalPaymentConfigResponseInterface {
	return v.value
}

func (v *NullablePaymentServicesPaypalPaymentConfigResponseInterface) Set(val *PaymentServicesPaypalPaymentConfigResponseInterface) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServicesPaypalPaymentConfigResponseInterface) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServicesPaypalPaymentConfigResponseInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServicesPaypalPaymentConfigResponseInterface(val *PaymentServicesPaypalPaymentConfigResponseInterface) *NullablePaymentServicesPaypalPaymentConfigResponseInterface {
	return &NullablePaymentServicesPaypalPaymentConfigResponseInterface{value: val, isSet: true}
}

func (v NullablePaymentServicesPaypalPaymentConfigResponseInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServicesPaypalPaymentConfigResponseInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
