/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the CompanyDataCompanyCustomerInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyDataCompanyCustomerInterface{}

// CompanyDataCompanyCustomerInterface Extended customer custom attributes interface.
type CompanyDataCompanyCustomerInterface struct {
	// Customer ID.
	CustomerId *int32 `json:"customer_id,omitempty"`
	// Company ID.
	CompanyId *int32 `json:"company_id,omitempty"`
	// Get job title.
	JobTitle *string `json:"job_title,omitempty"`
	// Customer status.
	Status *int32 `json:"status,omitempty"`
	// Get telephone.
	Telephone *string `json:"telephone,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CompanyDataCompanyCustomerInterface CompanyDataCompanyCustomerInterface

// NewCompanyDataCompanyCustomerInterface instantiates a new CompanyDataCompanyCustomerInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyDataCompanyCustomerInterface() *CompanyDataCompanyCustomerInterface {
	this := CompanyDataCompanyCustomerInterface{}
	return &this
}

// NewCompanyDataCompanyCustomerInterfaceWithDefaults instantiates a new CompanyDataCompanyCustomerInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyDataCompanyCustomerInterfaceWithDefaults() *CompanyDataCompanyCustomerInterface {
	this := CompanyDataCompanyCustomerInterface{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *CompanyDataCompanyCustomerInterface) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyCustomerInterface) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *CompanyDataCompanyCustomerInterface) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *CompanyDataCompanyCustomerInterface) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *CompanyDataCompanyCustomerInterface) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyCustomerInterface) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *CompanyDataCompanyCustomerInterface) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *CompanyDataCompanyCustomerInterface) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *CompanyDataCompanyCustomerInterface) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyCustomerInterface) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *CompanyDataCompanyCustomerInterface) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *CompanyDataCompanyCustomerInterface) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CompanyDataCompanyCustomerInterface) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyCustomerInterface) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CompanyDataCompanyCustomerInterface) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *CompanyDataCompanyCustomerInterface) SetStatus(v int32) {
	o.Status = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *CompanyDataCompanyCustomerInterface) GetTelephone() string {
	if o == nil || IsNil(o.Telephone) {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyCustomerInterface) GetTelephoneOk() (*string, bool) {
	if o == nil || IsNil(o.Telephone) {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *CompanyDataCompanyCustomerInterface) HasTelephone() bool {
	if o != nil && !IsNil(o.Telephone) {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *CompanyDataCompanyCustomerInterface) SetTelephone(v string) {
	o.Telephone = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CompanyDataCompanyCustomerInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyCustomerInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CompanyDataCompanyCustomerInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *CompanyDataCompanyCustomerInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o CompanyDataCompanyCustomerInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyDataCompanyCustomerInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.JobTitle) {
		toSerialize["job_title"] = o.JobTitle
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Telephone) {
		toSerialize["telephone"] = o.Telephone
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CompanyDataCompanyCustomerInterface) UnmarshalJSON(data []byte) (err error) {
	varCompanyDataCompanyCustomerInterface := _CompanyDataCompanyCustomerInterface{}

	err = json.Unmarshal(data, &varCompanyDataCompanyCustomerInterface)

	if err != nil {
		return err
	}

	*o = CompanyDataCompanyCustomerInterface(varCompanyDataCompanyCustomerInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "job_title")
		delete(additionalProperties, "status")
		delete(additionalProperties, "telephone")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CompanyDataCompanyCustomerInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CompanyDataCompanyCustomerInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCompanyDataCompanyCustomerInterface struct {
	value *CompanyDataCompanyCustomerInterface
	isSet bool
}

func (v NullableCompanyDataCompanyCustomerInterface) Get() *CompanyDataCompanyCustomerInterface {
	return v.value
}

func (v *NullableCompanyDataCompanyCustomerInterface) Set(val *CompanyDataCompanyCustomerInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyDataCompanyCustomerInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyDataCompanyCustomerInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyDataCompanyCustomerInterface(val *CompanyDataCompanyCustomerInterface) *NullableCompanyDataCompanyCustomerInterface {
	return &NullableCompanyDataCompanyCustomerInterface{value: val, isSet: true}
}

func (v NullableCompanyDataCompanyCustomerInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyDataCompanyCustomerInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
