/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the CatalogDataProductInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogDataProductInterface{}

// CatalogDataProductInterface
type CatalogDataProductInterface struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Sku
	Sku string `json:"sku"`
	// Name
	Name *string `json:"name,omitempty"`
	// Attribute set id
	AttributeSetId *int32 `json:"attribute_set_id,omitempty"`
	// Price
	Price *float32 `json:"price,omitempty"`
	// Status
	Status *int32 `json:"status,omitempty"`
	// Visibility
	Visibility *int32 `json:"visibility,omitempty"`
	// Type id
	TypeId *string `json:"type_id,omitempty"`
	// Created date
	CreatedAt *string `json:"created_at,omitempty"`
	// Updated date
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Weight
	Weight              *float32                              `json:"weight,omitempty"`
	ExtensionAttributes *CatalogDataProductExtensionInterface `json:"extension_attributes,omitempty"`
	// Product links info
	ProductLinks []CatalogDataProductLinkInterface `json:"product_links,omitempty"`
	// List of product options
	Options []CatalogDataProductCustomOptionInterface `json:"options,omitempty"`
	// Media gallery entries
	MediaGalleryEntries []CatalogDataProductAttributeMediaGalleryEntryInterface `json:"media_gallery_entries,omitempty"`
	// List of product tier prices
	TierPrices []CatalogDataProductTierPriceInterface `json:"tier_prices,omitempty"`
	// Custom attributes values.
	CustomAttributes     []FrameworkAttributeInterface `json:"custom_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CatalogDataProductInterface CatalogDataProductInterface

// NewCatalogDataProductInterface instantiates a new CatalogDataProductInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogDataProductInterface(sku string) *CatalogDataProductInterface {
	this := CatalogDataProductInterface{}
	this.Sku = sku
	return &this
}

// NewCatalogDataProductInterfaceWithDefaults instantiates a new CatalogDataProductInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogDataProductInterfaceWithDefaults() *CatalogDataProductInterface {
	this := CatalogDataProductInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CatalogDataProductInterface) SetId(v int32) {
	o.Id = &v
}

// GetSku returns the Sku field value
func (o *CatalogDataProductInterface) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *CatalogDataProductInterface) SetSku(v string) {
	o.Sku = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogDataProductInterface) SetName(v string) {
	o.Name = &v
}

// GetAttributeSetId returns the AttributeSetId field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetAttributeSetId() int32 {
	if o == nil || IsNil(o.AttributeSetId) {
		var ret int32
		return ret
	}
	return *o.AttributeSetId
}

// GetAttributeSetIdOk returns a tuple with the AttributeSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetAttributeSetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AttributeSetId) {
		return nil, false
	}
	return o.AttributeSetId, true
}

// HasAttributeSetId returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasAttributeSetId() bool {
	if o != nil && !IsNil(o.AttributeSetId) {
		return true
	}

	return false
}

// SetAttributeSetId gets a reference to the given int32 and assigns it to the AttributeSetId field.
func (o *CatalogDataProductInterface) SetAttributeSetId(v int32) {
	o.AttributeSetId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *CatalogDataProductInterface) SetPrice(v float32) {
	o.Price = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *CatalogDataProductInterface) SetStatus(v int32) {
	o.Status = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetVisibility() int32 {
	if o == nil || IsNil(o.Visibility) {
		var ret int32
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetVisibilityOk() (*int32, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given int32 and assigns it to the Visibility field.
func (o *CatalogDataProductInterface) SetVisibility(v int32) {
	o.Visibility = &v
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetTypeId() string {
	if o == nil || IsNil(o.TypeId) {
		var ret string
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.TypeId) {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasTypeId() bool {
	if o != nil && !IsNil(o.TypeId) {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given string and assigns it to the TypeId field.
func (o *CatalogDataProductInterface) SetTypeId(v string) {
	o.TypeId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CatalogDataProductInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CatalogDataProductInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *CatalogDataProductInterface) SetWeight(v float32) {
	o.Weight = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetExtensionAttributes() CatalogDataProductExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret CatalogDataProductExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetExtensionAttributesOk() (*CatalogDataProductExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given CatalogDataProductExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *CatalogDataProductInterface) SetExtensionAttributes(v CatalogDataProductExtensionInterface) {
	o.ExtensionAttributes = &v
}

// GetProductLinks returns the ProductLinks field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetProductLinks() []CatalogDataProductLinkInterface {
	if o == nil || IsNil(o.ProductLinks) {
		var ret []CatalogDataProductLinkInterface
		return ret
	}
	return o.ProductLinks
}

// GetProductLinksOk returns a tuple with the ProductLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetProductLinksOk() ([]CatalogDataProductLinkInterface, bool) {
	if o == nil || IsNil(o.ProductLinks) {
		return nil, false
	}
	return o.ProductLinks, true
}

// HasProductLinks returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasProductLinks() bool {
	if o != nil && !IsNil(o.ProductLinks) {
		return true
	}

	return false
}

// SetProductLinks gets a reference to the given []CatalogDataProductLinkInterface and assigns it to the ProductLinks field.
func (o *CatalogDataProductInterface) SetProductLinks(v []CatalogDataProductLinkInterface) {
	o.ProductLinks = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetOptions() []CatalogDataProductCustomOptionInterface {
	if o == nil || IsNil(o.Options) {
		var ret []CatalogDataProductCustomOptionInterface
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetOptionsOk() ([]CatalogDataProductCustomOptionInterface, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []CatalogDataProductCustomOptionInterface and assigns it to the Options field.
func (o *CatalogDataProductInterface) SetOptions(v []CatalogDataProductCustomOptionInterface) {
	o.Options = v
}

// GetMediaGalleryEntries returns the MediaGalleryEntries field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetMediaGalleryEntries() []CatalogDataProductAttributeMediaGalleryEntryInterface {
	if o == nil || IsNil(o.MediaGalleryEntries) {
		var ret []CatalogDataProductAttributeMediaGalleryEntryInterface
		return ret
	}
	return o.MediaGalleryEntries
}

// GetMediaGalleryEntriesOk returns a tuple with the MediaGalleryEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetMediaGalleryEntriesOk() ([]CatalogDataProductAttributeMediaGalleryEntryInterface, bool) {
	if o == nil || IsNil(o.MediaGalleryEntries) {
		return nil, false
	}
	return o.MediaGalleryEntries, true
}

// HasMediaGalleryEntries returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasMediaGalleryEntries() bool {
	if o != nil && !IsNil(o.MediaGalleryEntries) {
		return true
	}

	return false
}

// SetMediaGalleryEntries gets a reference to the given []CatalogDataProductAttributeMediaGalleryEntryInterface and assigns it to the MediaGalleryEntries field.
func (o *CatalogDataProductInterface) SetMediaGalleryEntries(v []CatalogDataProductAttributeMediaGalleryEntryInterface) {
	o.MediaGalleryEntries = v
}

// GetTierPrices returns the TierPrices field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetTierPrices() []CatalogDataProductTierPriceInterface {
	if o == nil || IsNil(o.TierPrices) {
		var ret []CatalogDataProductTierPriceInterface
		return ret
	}
	return o.TierPrices
}

// GetTierPricesOk returns a tuple with the TierPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetTierPricesOk() ([]CatalogDataProductTierPriceInterface, bool) {
	if o == nil || IsNil(o.TierPrices) {
		return nil, false
	}
	return o.TierPrices, true
}

// HasTierPrices returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasTierPrices() bool {
	if o != nil && !IsNil(o.TierPrices) {
		return true
	}

	return false
}

// SetTierPrices gets a reference to the given []CatalogDataProductTierPriceInterface and assigns it to the TierPrices field.
func (o *CatalogDataProductInterface) SetTierPrices(v []CatalogDataProductTierPriceInterface) {
	o.TierPrices = v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *CatalogDataProductInterface) GetCustomAttributes() []FrameworkAttributeInterface {
	if o == nil || IsNil(o.CustomAttributes) {
		var ret []FrameworkAttributeInterface
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDataProductInterface) GetCustomAttributesOk() ([]FrameworkAttributeInterface, bool) {
	if o == nil || IsNil(o.CustomAttributes) {
		return nil, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *CatalogDataProductInterface) HasCustomAttributes() bool {
	if o != nil && !IsNil(o.CustomAttributes) {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given []FrameworkAttributeInterface and assigns it to the CustomAttributes field.
func (o *CatalogDataProductInterface) SetCustomAttributes(v []FrameworkAttributeInterface) {
	o.CustomAttributes = v
}

func (o CatalogDataProductInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogDataProductInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["sku"] = o.Sku
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AttributeSetId) {
		toSerialize["attribute_set_id"] = o.AttributeSetId
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.TypeId) {
		toSerialize["type_id"] = o.TypeId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.ProductLinks) {
		toSerialize["product_links"] = o.ProductLinks
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.MediaGalleryEntries) {
		toSerialize["media_gallery_entries"] = o.MediaGalleryEntries
	}
	if !IsNil(o.TierPrices) {
		toSerialize["tier_prices"] = o.TierPrices
	}
	if !IsNil(o.CustomAttributes) {
		toSerialize["custom_attributes"] = o.CustomAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CatalogDataProductInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sku",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogDataProductInterface := _CatalogDataProductInterface{}

	err = json.Unmarshal(data, &varCatalogDataProductInterface)

	if err != nil {
		return err
	}

	*o = CatalogDataProductInterface(varCatalogDataProductInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "name")
		delete(additionalProperties, "attribute_set_id")
		delete(additionalProperties, "price")
		delete(additionalProperties, "status")
		delete(additionalProperties, "visibility")
		delete(additionalProperties, "type_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "weight")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "product_links")
		delete(additionalProperties, "options")
		delete(additionalProperties, "media_gallery_entries")
		delete(additionalProperties, "tier_prices")
		delete(additionalProperties, "custom_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CatalogDataProductInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CatalogDataProductInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCatalogDataProductInterface struct {
	value *CatalogDataProductInterface
	isSet bool
}

func (v NullableCatalogDataProductInterface) Get() *CatalogDataProductInterface {
	return v.value
}

func (v *NullableCatalogDataProductInterface) Set(val *CatalogDataProductInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogDataProductInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogDataProductInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogDataProductInterface(val *CatalogDataProductInterface) *NullableCatalogDataProductInterface {
	return &NullableCatalogDataProductInterface{value: val, isSet: true}
}

func (v NullableCatalogDataProductInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogDataProductInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
