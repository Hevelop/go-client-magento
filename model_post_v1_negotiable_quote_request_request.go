/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PostV1NegotiableQuoteRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostV1NegotiableQuoteRequestRequest{}

// PostV1NegotiableQuoteRequestRequest struct for PostV1NegotiableQuoteRequestRequest
type PostV1NegotiableQuoteRequestRequest struct {
	QuoteId              int32                                           `json:"quoteId"`
	QuoteName            string                                          `json:"quoteName"`
	Comment              *string                                         `json:"comment,omitempty"`
	Files                []NegotiableQuoteDataAttachmentContentInterface `json:"files,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostV1NegotiableQuoteRequestRequest PostV1NegotiableQuoteRequestRequest

// NewPostV1NegotiableQuoteRequestRequest instantiates a new PostV1NegotiableQuoteRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostV1NegotiableQuoteRequestRequest(quoteId int32, quoteName string) *PostV1NegotiableQuoteRequestRequest {
	this := PostV1NegotiableQuoteRequestRequest{}
	this.QuoteId = quoteId
	this.QuoteName = quoteName
	return &this
}

// NewPostV1NegotiableQuoteRequestRequestWithDefaults instantiates a new PostV1NegotiableQuoteRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostV1NegotiableQuoteRequestRequestWithDefaults() *PostV1NegotiableQuoteRequestRequest {
	this := PostV1NegotiableQuoteRequestRequest{}
	return &this
}

// GetQuoteId returns the QuoteId field value
func (o *PostV1NegotiableQuoteRequestRequest) GetQuoteId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value
// and a boolean to check if the value has been set.
func (o *PostV1NegotiableQuoteRequestRequest) GetQuoteIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteId, true
}

// SetQuoteId sets field value
func (o *PostV1NegotiableQuoteRequestRequest) SetQuoteId(v int32) {
	o.QuoteId = v
}

// GetQuoteName returns the QuoteName field value
func (o *PostV1NegotiableQuoteRequestRequest) GetQuoteName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteName
}

// GetQuoteNameOk returns a tuple with the QuoteName field value
// and a boolean to check if the value has been set.
func (o *PostV1NegotiableQuoteRequestRequest) GetQuoteNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteName, true
}

// SetQuoteName sets field value
func (o *PostV1NegotiableQuoteRequestRequest) SetQuoteName(v string) {
	o.QuoteName = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PostV1NegotiableQuoteRequestRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostV1NegotiableQuoteRequestRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PostV1NegotiableQuoteRequestRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *PostV1NegotiableQuoteRequestRequest) SetComment(v string) {
	o.Comment = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *PostV1NegotiableQuoteRequestRequest) GetFiles() []NegotiableQuoteDataAttachmentContentInterface {
	if o == nil || IsNil(o.Files) {
		var ret []NegotiableQuoteDataAttachmentContentInterface
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostV1NegotiableQuoteRequestRequest) GetFilesOk() ([]NegotiableQuoteDataAttachmentContentInterface, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *PostV1NegotiableQuoteRequestRequest) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []NegotiableQuoteDataAttachmentContentInterface and assigns it to the Files field.
func (o *PostV1NegotiableQuoteRequestRequest) SetFiles(v []NegotiableQuoteDataAttachmentContentInterface) {
	o.Files = v
}

func (o PostV1NegotiableQuoteRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostV1NegotiableQuoteRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quoteId"] = o.QuoteId
	toSerialize["quoteName"] = o.QuoteName
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostV1NegotiableQuoteRequestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quoteId",
		"quoteName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostV1NegotiableQuoteRequestRequest := _PostV1NegotiableQuoteRequestRequest{}

	err = json.Unmarshal(data, &varPostV1NegotiableQuoteRequestRequest)

	if err != nil {
		return err
	}

	*o = PostV1NegotiableQuoteRequestRequest(varPostV1NegotiableQuoteRequestRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "quoteId")
		delete(additionalProperties, "quoteName")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "files")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PostV1NegotiableQuoteRequestRequest) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PostV1NegotiableQuoteRequestRequest) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePostV1NegotiableQuoteRequestRequest struct {
	value *PostV1NegotiableQuoteRequestRequest
	isSet bool
}

func (v NullablePostV1NegotiableQuoteRequestRequest) Get() *PostV1NegotiableQuoteRequestRequest {
	return v.value
}

func (v *NullablePostV1NegotiableQuoteRequestRequest) Set(val *PostV1NegotiableQuoteRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostV1NegotiableQuoteRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostV1NegotiableQuoteRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostV1NegotiableQuoteRequestRequest(val *PostV1NegotiableQuoteRequestRequest) *NullablePostV1NegotiableQuoteRequestRequest {
	return &NullablePostV1NegotiableQuoteRequestRequest{value: val, isSet: true}
}

func (v NullablePostV1NegotiableQuoteRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostV1NegotiableQuoteRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
