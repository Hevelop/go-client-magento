/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataInvoiceInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataInvoiceInterface{}

// SalesDataInvoiceInterface Invoice interface. An invoice is a record of the receipt of payment for an order.
type SalesDataInvoiceInterface struct {
	// Base currency code.
	BaseCurrencyCode *string `json:"base_currency_code,omitempty"`
	// Base discount amount.
	BaseDiscountAmount *float32 `json:"base_discount_amount,omitempty"`
	// Base grand total.
	BaseGrandTotal *float32 `json:"base_grand_total,omitempty"`
	// Base discount tax compensation amount.
	BaseDiscountTaxCompensationAmount *float32 `json:"base_discount_tax_compensation_amount,omitempty"`
	// Base shipping amount.
	BaseShippingAmount *float32 `json:"base_shipping_amount,omitempty"`
	// Base shipping discount tax compensation amount.
	BaseShippingDiscountTaxCompensationAmnt *float32 `json:"base_shipping_discount_tax_compensation_amnt,omitempty"`
	// Base shipping including tax.
	BaseShippingInclTax *float32 `json:"base_shipping_incl_tax,omitempty"`
	// Base shipping tax amount.
	BaseShippingTaxAmount *float32 `json:"base_shipping_tax_amount,omitempty"`
	// Base subtotal.
	BaseSubtotal *float32 `json:"base_subtotal,omitempty"`
	// Base subtotal including tax.
	BaseSubtotalInclTax *float32 `json:"base_subtotal_incl_tax,omitempty"`
	// Base tax amount.
	BaseTaxAmount *float32 `json:"base_tax_amount,omitempty"`
	// Base total refunded.
	BaseTotalRefunded *float32 `json:"base_total_refunded,omitempty"`
	// Base-to-global rate.
	BaseToGlobalRate *float32 `json:"base_to_global_rate,omitempty"`
	// Base-to-order rate.
	BaseToOrderRate *float32 `json:"base_to_order_rate,omitempty"`
	// Billing address ID.
	BillingAddressId *int32 `json:"billing_address_id,omitempty"`
	// Can void flag value.
	CanVoidFlag *int32 `json:"can_void_flag,omitempty"`
	// Created-at timestamp.
	CreatedAt *string `json:"created_at,omitempty"`
	// Discount amount.
	DiscountAmount *float32 `json:"discount_amount,omitempty"`
	// Discount description.
	DiscountDescription *string `json:"discount_description,omitempty"`
	// Email-sent flag value.
	EmailSent *int32 `json:"email_sent,omitempty"`
	// Invoice ID.
	EntityId *int32 `json:"entity_id,omitempty"`
	// Global currency code.
	GlobalCurrencyCode *string `json:"global_currency_code,omitempty"`
	// Grand total.
	GrandTotal *float32 `json:"grand_total,omitempty"`
	// Discount tax compensation amount.
	DiscountTaxCompensationAmount *float32 `json:"discount_tax_compensation_amount,omitempty"`
	// Increment ID.
	IncrementId *string `json:"increment_id,omitempty"`
	// Is-used-for-refund flag value.
	IsUsedForRefund *int32 `json:"is_used_for_refund,omitempty"`
	// Order currency code.
	OrderCurrencyCode *string `json:"order_currency_code,omitempty"`
	// Order ID.
	OrderId int32 `json:"order_id"`
	// Shipping address ID.
	ShippingAddressId *int32 `json:"shipping_address_id,omitempty"`
	// Shipping amount.
	ShippingAmount *float32 `json:"shipping_amount,omitempty"`
	// Shipping discount tax compensation amount.
	ShippingDiscountTaxCompensationAmount *float32 `json:"shipping_discount_tax_compensation_amount,omitempty"`
	// Shipping including tax.
	ShippingInclTax *float32 `json:"shipping_incl_tax,omitempty"`
	// Shipping tax amount.
	ShippingTaxAmount *float32 `json:"shipping_tax_amount,omitempty"`
	// State.
	State *int32 `json:"state,omitempty"`
	// Store currency code.
	StoreCurrencyCode *string `json:"store_currency_code,omitempty"`
	// Store ID.
	StoreId *int32 `json:"store_id,omitempty"`
	// Store-to-base rate.
	StoreToBaseRate *float32 `json:"store_to_base_rate,omitempty"`
	// Store-to-order rate.
	StoreToOrderRate *float32 `json:"store_to_order_rate,omitempty"`
	// Subtotal.
	Subtotal *float32 `json:"subtotal,omitempty"`
	// Subtotal including tax.
	SubtotalInclTax *float32 `json:"subtotal_incl_tax,omitempty"`
	// Tax amount.
	TaxAmount *float32 `json:"tax_amount,omitempty"`
	// Total quantity.
	TotalQty float32 `json:"total_qty"`
	// Transaction ID.
	TransactionId *string `json:"transaction_id,omitempty"`
	// Updated-at timestamp.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Array of invoice items.
	Items []SalesDataInvoiceItemInterface `json:"items"`
	// Array of any invoice comments. Otherwise, null.
	Comments             []SalesDataInvoiceCommentInterface  `json:"comments,omitempty"`
	ExtensionAttributes  *SalesDataInvoiceExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataInvoiceInterface SalesDataInvoiceInterface

// NewSalesDataInvoiceInterface instantiates a new SalesDataInvoiceInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataInvoiceInterface(orderId int32, totalQty float32, items []SalesDataInvoiceItemInterface) *SalesDataInvoiceInterface {
	this := SalesDataInvoiceInterface{}
	this.OrderId = orderId
	this.TotalQty = totalQty
	this.Items = items
	return &this
}

// NewSalesDataInvoiceInterfaceWithDefaults instantiates a new SalesDataInvoiceInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataInvoiceInterfaceWithDefaults() *SalesDataInvoiceInterface {
	this := SalesDataInvoiceInterface{}
	return &this
}

// GetBaseCurrencyCode returns the BaseCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseCurrencyCode() string {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		var ret string
		return ret
	}
	return *o.BaseCurrencyCode
}

// GetBaseCurrencyCodeOk returns a tuple with the BaseCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		return nil, false
	}
	return o.BaseCurrencyCode, true
}

// HasBaseCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseCurrencyCode() bool {
	if o != nil && !IsNil(o.BaseCurrencyCode) {
		return true
	}

	return false
}

// SetBaseCurrencyCode gets a reference to the given string and assigns it to the BaseCurrencyCode field.
func (o *SalesDataInvoiceInterface) SetBaseCurrencyCode(v string) {
	o.BaseCurrencyCode = &v
}

// GetBaseDiscountAmount returns the BaseDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseDiscountAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountAmount
}

// GetBaseDiscountAmountOk returns a tuple with the BaseDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		return nil, false
	}
	return o.BaseDiscountAmount, true
}

// HasBaseDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseDiscountAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountAmount) {
		return true
	}

	return false
}

// SetBaseDiscountAmount gets a reference to the given float32 and assigns it to the BaseDiscountAmount field.
func (o *SalesDataInvoiceInterface) SetBaseDiscountAmount(v float32) {
	o.BaseDiscountAmount = &v
}

// GetBaseGrandTotal returns the BaseGrandTotal field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseGrandTotal() float32 {
	if o == nil || IsNil(o.BaseGrandTotal) {
		var ret float32
		return ret
	}
	return *o.BaseGrandTotal
}

// GetBaseGrandTotalOk returns a tuple with the BaseGrandTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseGrandTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseGrandTotal) {
		return nil, false
	}
	return o.BaseGrandTotal, true
}

// HasBaseGrandTotal returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseGrandTotal() bool {
	if o != nil && !IsNil(o.BaseGrandTotal) {
		return true
	}

	return false
}

// SetBaseGrandTotal gets a reference to the given float32 and assigns it to the BaseGrandTotal field.
func (o *SalesDataInvoiceInterface) SetBaseGrandTotal(v float32) {
	o.BaseGrandTotal = &v
}

// GetBaseDiscountTaxCompensationAmount returns the BaseDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationAmount
}

// GetBaseDiscountTaxCompensationAmountOk returns a tuple with the BaseDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationAmount, true
}

// HasBaseDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationAmount field.
func (o *SalesDataInvoiceInterface) SetBaseDiscountTaxCompensationAmount(v float32) {
	o.BaseDiscountTaxCompensationAmount = &v
}

// GetBaseShippingAmount returns the BaseShippingAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseShippingAmount() float32 {
	if o == nil || IsNil(o.BaseShippingAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingAmount
}

// GetBaseShippingAmountOk returns a tuple with the BaseShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingAmount) {
		return nil, false
	}
	return o.BaseShippingAmount, true
}

// HasBaseShippingAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseShippingAmount() bool {
	if o != nil && !IsNil(o.BaseShippingAmount) {
		return true
	}

	return false
}

// SetBaseShippingAmount gets a reference to the given float32 and assigns it to the BaseShippingAmount field.
func (o *SalesDataInvoiceInterface) SetBaseShippingAmount(v float32) {
	o.BaseShippingAmount = &v
}

// GetBaseShippingDiscountTaxCompensationAmnt returns the BaseShippingDiscountTaxCompensationAmnt field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseShippingDiscountTaxCompensationAmnt() float32 {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		var ret float32
		return ret
	}
	return *o.BaseShippingDiscountTaxCompensationAmnt
}

// GetBaseShippingDiscountTaxCompensationAmntOk returns a tuple with the BaseShippingDiscountTaxCompensationAmnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseShippingDiscountTaxCompensationAmntOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return nil, false
	}
	return o.BaseShippingDiscountTaxCompensationAmnt, true
}

// HasBaseShippingDiscountTaxCompensationAmnt returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseShippingDiscountTaxCompensationAmnt() bool {
	if o != nil && !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return true
	}

	return false
}

// SetBaseShippingDiscountTaxCompensationAmnt gets a reference to the given float32 and assigns it to the BaseShippingDiscountTaxCompensationAmnt field.
func (o *SalesDataInvoiceInterface) SetBaseShippingDiscountTaxCompensationAmnt(v float32) {
	o.BaseShippingDiscountTaxCompensationAmnt = &v
}

// GetBaseShippingInclTax returns the BaseShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseShippingInclTax() float32 {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseShippingInclTax
}

// GetBaseShippingInclTaxOk returns a tuple with the BaseShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		return nil, false
	}
	return o.BaseShippingInclTax, true
}

// HasBaseShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseShippingInclTax() bool {
	if o != nil && !IsNil(o.BaseShippingInclTax) {
		return true
	}

	return false
}

// SetBaseShippingInclTax gets a reference to the given float32 and assigns it to the BaseShippingInclTax field.
func (o *SalesDataInvoiceInterface) SetBaseShippingInclTax(v float32) {
	o.BaseShippingInclTax = &v
}

// GetBaseShippingTaxAmount returns the BaseShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseShippingTaxAmount() float32 {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingTaxAmount
}

// GetBaseShippingTaxAmountOk returns a tuple with the BaseShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		return nil, false
	}
	return o.BaseShippingTaxAmount, true
}

// HasBaseShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseShippingTaxAmount() bool {
	if o != nil && !IsNil(o.BaseShippingTaxAmount) {
		return true
	}

	return false
}

// SetBaseShippingTaxAmount gets a reference to the given float32 and assigns it to the BaseShippingTaxAmount field.
func (o *SalesDataInvoiceInterface) SetBaseShippingTaxAmount(v float32) {
	o.BaseShippingTaxAmount = &v
}

// GetBaseSubtotal returns the BaseSubtotal field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseSubtotal() float32 {
	if o == nil || IsNil(o.BaseSubtotal) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotal
}

// GetBaseSubtotalOk returns a tuple with the BaseSubtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseSubtotalOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotal) {
		return nil, false
	}
	return o.BaseSubtotal, true
}

// HasBaseSubtotal returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseSubtotal() bool {
	if o != nil && !IsNil(o.BaseSubtotal) {
		return true
	}

	return false
}

// SetBaseSubtotal gets a reference to the given float32 and assigns it to the BaseSubtotal field.
func (o *SalesDataInvoiceInterface) SetBaseSubtotal(v float32) {
	o.BaseSubtotal = &v
}

// GetBaseSubtotalInclTax returns the BaseSubtotalInclTax field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseSubtotalInclTax() float32 {
	if o == nil || IsNil(o.BaseSubtotalInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotalInclTax
}

// GetBaseSubtotalInclTaxOk returns a tuple with the BaseSubtotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseSubtotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotalInclTax) {
		return nil, false
	}
	return o.BaseSubtotalInclTax, true
}

// HasBaseSubtotalInclTax returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseSubtotalInclTax() bool {
	if o != nil && !IsNil(o.BaseSubtotalInclTax) {
		return true
	}

	return false
}

// SetBaseSubtotalInclTax gets a reference to the given float32 and assigns it to the BaseSubtotalInclTax field.
func (o *SalesDataInvoiceInterface) SetBaseSubtotalInclTax(v float32) {
	o.BaseSubtotalInclTax = &v
}

// GetBaseTaxAmount returns the BaseTaxAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseTaxAmount() float32 {
	if o == nil || IsNil(o.BaseTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseTaxAmount
}

// GetBaseTaxAmountOk returns a tuple with the BaseTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxAmount) {
		return nil, false
	}
	return o.BaseTaxAmount, true
}

// HasBaseTaxAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseTaxAmount() bool {
	if o != nil && !IsNil(o.BaseTaxAmount) {
		return true
	}

	return false
}

// SetBaseTaxAmount gets a reference to the given float32 and assigns it to the BaseTaxAmount field.
func (o *SalesDataInvoiceInterface) SetBaseTaxAmount(v float32) {
	o.BaseTaxAmount = &v
}

// GetBaseTotalRefunded returns the BaseTotalRefunded field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseTotalRefunded() float32 {
	if o == nil || IsNil(o.BaseTotalRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseTotalRefunded
}

// GetBaseTotalRefundedOk returns a tuple with the BaseTotalRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseTotalRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalRefunded) {
		return nil, false
	}
	return o.BaseTotalRefunded, true
}

// HasBaseTotalRefunded returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseTotalRefunded() bool {
	if o != nil && !IsNil(o.BaseTotalRefunded) {
		return true
	}

	return false
}

// SetBaseTotalRefunded gets a reference to the given float32 and assigns it to the BaseTotalRefunded field.
func (o *SalesDataInvoiceInterface) SetBaseTotalRefunded(v float32) {
	o.BaseTotalRefunded = &v
}

// GetBaseToGlobalRate returns the BaseToGlobalRate field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseToGlobalRate() float32 {
	if o == nil || IsNil(o.BaseToGlobalRate) {
		var ret float32
		return ret
	}
	return *o.BaseToGlobalRate
}

// GetBaseToGlobalRateOk returns a tuple with the BaseToGlobalRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseToGlobalRateOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseToGlobalRate) {
		return nil, false
	}
	return o.BaseToGlobalRate, true
}

// HasBaseToGlobalRate returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseToGlobalRate() bool {
	if o != nil && !IsNil(o.BaseToGlobalRate) {
		return true
	}

	return false
}

// SetBaseToGlobalRate gets a reference to the given float32 and assigns it to the BaseToGlobalRate field.
func (o *SalesDataInvoiceInterface) SetBaseToGlobalRate(v float32) {
	o.BaseToGlobalRate = &v
}

// GetBaseToOrderRate returns the BaseToOrderRate field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBaseToOrderRate() float32 {
	if o == nil || IsNil(o.BaseToOrderRate) {
		var ret float32
		return ret
	}
	return *o.BaseToOrderRate
}

// GetBaseToOrderRateOk returns a tuple with the BaseToOrderRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBaseToOrderRateOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseToOrderRate) {
		return nil, false
	}
	return o.BaseToOrderRate, true
}

// HasBaseToOrderRate returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBaseToOrderRate() bool {
	if o != nil && !IsNil(o.BaseToOrderRate) {
		return true
	}

	return false
}

// SetBaseToOrderRate gets a reference to the given float32 and assigns it to the BaseToOrderRate field.
func (o *SalesDataInvoiceInterface) SetBaseToOrderRate(v float32) {
	o.BaseToOrderRate = &v
}

// GetBillingAddressId returns the BillingAddressId field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetBillingAddressId() int32 {
	if o == nil || IsNil(o.BillingAddressId) {
		var ret int32
		return ret
	}
	return *o.BillingAddressId
}

// GetBillingAddressIdOk returns a tuple with the BillingAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetBillingAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingAddressId) {
		return nil, false
	}
	return o.BillingAddressId, true
}

// HasBillingAddressId returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasBillingAddressId() bool {
	if o != nil && !IsNil(o.BillingAddressId) {
		return true
	}

	return false
}

// SetBillingAddressId gets a reference to the given int32 and assigns it to the BillingAddressId field.
func (o *SalesDataInvoiceInterface) SetBillingAddressId(v int32) {
	o.BillingAddressId = &v
}

// GetCanVoidFlag returns the CanVoidFlag field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetCanVoidFlag() int32 {
	if o == nil || IsNil(o.CanVoidFlag) {
		var ret int32
		return ret
	}
	return *o.CanVoidFlag
}

// GetCanVoidFlagOk returns a tuple with the CanVoidFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetCanVoidFlagOk() (*int32, bool) {
	if o == nil || IsNil(o.CanVoidFlag) {
		return nil, false
	}
	return o.CanVoidFlag, true
}

// HasCanVoidFlag returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasCanVoidFlag() bool {
	if o != nil && !IsNil(o.CanVoidFlag) {
		return true
	}

	return false
}

// SetCanVoidFlag gets a reference to the given int32 and assigns it to the CanVoidFlag field.
func (o *SalesDataInvoiceInterface) SetCanVoidFlag(v int32) {
	o.CanVoidFlag = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SalesDataInvoiceInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *SalesDataInvoiceInterface) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetDiscountDescription returns the DiscountDescription field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetDiscountDescription() string {
	if o == nil || IsNil(o.DiscountDescription) {
		var ret string
		return ret
	}
	return *o.DiscountDescription
}

// GetDiscountDescriptionOk returns a tuple with the DiscountDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetDiscountDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountDescription) {
		return nil, false
	}
	return o.DiscountDescription, true
}

// HasDiscountDescription returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasDiscountDescription() bool {
	if o != nil && !IsNil(o.DiscountDescription) {
		return true
	}

	return false
}

// SetDiscountDescription gets a reference to the given string and assigns it to the DiscountDescription field.
func (o *SalesDataInvoiceInterface) SetDiscountDescription(v string) {
	o.DiscountDescription = &v
}

// GetEmailSent returns the EmailSent field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetEmailSent() int32 {
	if o == nil || IsNil(o.EmailSent) {
		var ret int32
		return ret
	}
	return *o.EmailSent
}

// GetEmailSentOk returns a tuple with the EmailSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetEmailSentOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailSent) {
		return nil, false
	}
	return o.EmailSent, true
}

// HasEmailSent returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasEmailSent() bool {
	if o != nil && !IsNil(o.EmailSent) {
		return true
	}

	return false
}

// SetEmailSent gets a reference to the given int32 and assigns it to the EmailSent field.
func (o *SalesDataInvoiceInterface) SetEmailSent(v int32) {
	o.EmailSent = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *SalesDataInvoiceInterface) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetGlobalCurrencyCode returns the GlobalCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetGlobalCurrencyCode() string {
	if o == nil || IsNil(o.GlobalCurrencyCode) {
		var ret string
		return ret
	}
	return *o.GlobalCurrencyCode
}

// GetGlobalCurrencyCodeOk returns a tuple with the GlobalCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetGlobalCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalCurrencyCode) {
		return nil, false
	}
	return o.GlobalCurrencyCode, true
}

// HasGlobalCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasGlobalCurrencyCode() bool {
	if o != nil && !IsNil(o.GlobalCurrencyCode) {
		return true
	}

	return false
}

// SetGlobalCurrencyCode gets a reference to the given string and assigns it to the GlobalCurrencyCode field.
func (o *SalesDataInvoiceInterface) SetGlobalCurrencyCode(v string) {
	o.GlobalCurrencyCode = &v
}

// GetGrandTotal returns the GrandTotal field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetGrandTotal() float32 {
	if o == nil || IsNil(o.GrandTotal) {
		var ret float32
		return ret
	}
	return *o.GrandTotal
}

// GetGrandTotalOk returns a tuple with the GrandTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetGrandTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.GrandTotal) {
		return nil, false
	}
	return o.GrandTotal, true
}

// HasGrandTotal returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasGrandTotal() bool {
	if o != nil && !IsNil(o.GrandTotal) {
		return true
	}

	return false
}

// SetGrandTotal gets a reference to the given float32 and assigns it to the GrandTotal field.
func (o *SalesDataInvoiceInterface) SetGrandTotal(v float32) {
	o.GrandTotal = &v
}

// GetDiscountTaxCompensationAmount returns the DiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationAmount
}

// GetDiscountTaxCompensationAmountOk returns a tuple with the DiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.DiscountTaxCompensationAmount, true
}

// HasDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the DiscountTaxCompensationAmount field.
func (o *SalesDataInvoiceInterface) SetDiscountTaxCompensationAmount(v float32) {
	o.DiscountTaxCompensationAmount = &v
}

// GetIncrementId returns the IncrementId field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetIncrementId() string {
	if o == nil || IsNil(o.IncrementId) {
		var ret string
		return ret
	}
	return *o.IncrementId
}

// GetIncrementIdOk returns a tuple with the IncrementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetIncrementIdOk() (*string, bool) {
	if o == nil || IsNil(o.IncrementId) {
		return nil, false
	}
	return o.IncrementId, true
}

// HasIncrementId returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasIncrementId() bool {
	if o != nil && !IsNil(o.IncrementId) {
		return true
	}

	return false
}

// SetIncrementId gets a reference to the given string and assigns it to the IncrementId field.
func (o *SalesDataInvoiceInterface) SetIncrementId(v string) {
	o.IncrementId = &v
}

// GetIsUsedForRefund returns the IsUsedForRefund field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetIsUsedForRefund() int32 {
	if o == nil || IsNil(o.IsUsedForRefund) {
		var ret int32
		return ret
	}
	return *o.IsUsedForRefund
}

// GetIsUsedForRefundOk returns a tuple with the IsUsedForRefund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetIsUsedForRefundOk() (*int32, bool) {
	if o == nil || IsNil(o.IsUsedForRefund) {
		return nil, false
	}
	return o.IsUsedForRefund, true
}

// HasIsUsedForRefund returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasIsUsedForRefund() bool {
	if o != nil && !IsNil(o.IsUsedForRefund) {
		return true
	}

	return false
}

// SetIsUsedForRefund gets a reference to the given int32 and assigns it to the IsUsedForRefund field.
func (o *SalesDataInvoiceInterface) SetIsUsedForRefund(v int32) {
	o.IsUsedForRefund = &v
}

// GetOrderCurrencyCode returns the OrderCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetOrderCurrencyCode() string {
	if o == nil || IsNil(o.OrderCurrencyCode) {
		var ret string
		return ret
	}
	return *o.OrderCurrencyCode
}

// GetOrderCurrencyCodeOk returns a tuple with the OrderCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetOrderCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderCurrencyCode) {
		return nil, false
	}
	return o.OrderCurrencyCode, true
}

// HasOrderCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasOrderCurrencyCode() bool {
	if o != nil && !IsNil(o.OrderCurrencyCode) {
		return true
	}

	return false
}

// SetOrderCurrencyCode gets a reference to the given string and assigns it to the OrderCurrencyCode field.
func (o *SalesDataInvoiceInterface) SetOrderCurrencyCode(v string) {
	o.OrderCurrencyCode = &v
}

// GetOrderId returns the OrderId field value
func (o *SalesDataInvoiceInterface) GetOrderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetOrderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *SalesDataInvoiceInterface) SetOrderId(v int32) {
	o.OrderId = v
}

// GetShippingAddressId returns the ShippingAddressId field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetShippingAddressId() int32 {
	if o == nil || IsNil(o.ShippingAddressId) {
		var ret int32
		return ret
	}
	return *o.ShippingAddressId
}

// GetShippingAddressIdOk returns a tuple with the ShippingAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetShippingAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ShippingAddressId) {
		return nil, false
	}
	return o.ShippingAddressId, true
}

// HasShippingAddressId returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasShippingAddressId() bool {
	if o != nil && !IsNil(o.ShippingAddressId) {
		return true
	}

	return false
}

// SetShippingAddressId gets a reference to the given int32 and assigns it to the ShippingAddressId field.
func (o *SalesDataInvoiceInterface) SetShippingAddressId(v int32) {
	o.ShippingAddressId = &v
}

// GetShippingAmount returns the ShippingAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetShippingAmount() float32 {
	if o == nil || IsNil(o.ShippingAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingAmount
}

// GetShippingAmountOk returns a tuple with the ShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingAmount) {
		return nil, false
	}
	return o.ShippingAmount, true
}

// HasShippingAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasShippingAmount() bool {
	if o != nil && !IsNil(o.ShippingAmount) {
		return true
	}

	return false
}

// SetShippingAmount gets a reference to the given float32 and assigns it to the ShippingAmount field.
func (o *SalesDataInvoiceInterface) SetShippingAmount(v float32) {
	o.ShippingAmount = &v
}

// GetShippingDiscountTaxCompensationAmount returns the ShippingDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetShippingDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingDiscountTaxCompensationAmount
}

// GetShippingDiscountTaxCompensationAmountOk returns a tuple with the ShippingDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetShippingDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.ShippingDiscountTaxCompensationAmount, true
}

// HasShippingDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasShippingDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetShippingDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the ShippingDiscountTaxCompensationAmount field.
func (o *SalesDataInvoiceInterface) SetShippingDiscountTaxCompensationAmount(v float32) {
	o.ShippingDiscountTaxCompensationAmount = &v
}

// GetShippingInclTax returns the ShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetShippingInclTax() float32 {
	if o == nil || IsNil(o.ShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.ShippingInclTax
}

// GetShippingInclTaxOk returns a tuple with the ShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingInclTax) {
		return nil, false
	}
	return o.ShippingInclTax, true
}

// HasShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasShippingInclTax() bool {
	if o != nil && !IsNil(o.ShippingInclTax) {
		return true
	}

	return false
}

// SetShippingInclTax gets a reference to the given float32 and assigns it to the ShippingInclTax field.
func (o *SalesDataInvoiceInterface) SetShippingInclTax(v float32) {
	o.ShippingInclTax = &v
}

// GetShippingTaxAmount returns the ShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetShippingTaxAmount() float32 {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingTaxAmount
}

// GetShippingTaxAmountOk returns a tuple with the ShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		return nil, false
	}
	return o.ShippingTaxAmount, true
}

// HasShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasShippingTaxAmount() bool {
	if o != nil && !IsNil(o.ShippingTaxAmount) {
		return true
	}

	return false
}

// SetShippingTaxAmount gets a reference to the given float32 and assigns it to the ShippingTaxAmount field.
func (o *SalesDataInvoiceInterface) SetShippingTaxAmount(v float32) {
	o.ShippingTaxAmount = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetState() int32 {
	if o == nil || IsNil(o.State) {
		var ret int32
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetStateOk() (*int32, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given int32 and assigns it to the State field.
func (o *SalesDataInvoiceInterface) SetState(v int32) {
	o.State = &v
}

// GetStoreCurrencyCode returns the StoreCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetStoreCurrencyCode() string {
	if o == nil || IsNil(o.StoreCurrencyCode) {
		var ret string
		return ret
	}
	return *o.StoreCurrencyCode
}

// GetStoreCurrencyCodeOk returns a tuple with the StoreCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetStoreCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StoreCurrencyCode) {
		return nil, false
	}
	return o.StoreCurrencyCode, true
}

// HasStoreCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasStoreCurrencyCode() bool {
	if o != nil && !IsNil(o.StoreCurrencyCode) {
		return true
	}

	return false
}

// SetStoreCurrencyCode gets a reference to the given string and assigns it to the StoreCurrencyCode field.
func (o *SalesDataInvoiceInterface) SetStoreCurrencyCode(v string) {
	o.StoreCurrencyCode = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetStoreId() int32 {
	if o == nil || IsNil(o.StoreId) {
		var ret int32
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetStoreIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given int32 and assigns it to the StoreId field.
func (o *SalesDataInvoiceInterface) SetStoreId(v int32) {
	o.StoreId = &v
}

// GetStoreToBaseRate returns the StoreToBaseRate field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetStoreToBaseRate() float32 {
	if o == nil || IsNil(o.StoreToBaseRate) {
		var ret float32
		return ret
	}
	return *o.StoreToBaseRate
}

// GetStoreToBaseRateOk returns a tuple with the StoreToBaseRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetStoreToBaseRateOk() (*float32, bool) {
	if o == nil || IsNil(o.StoreToBaseRate) {
		return nil, false
	}
	return o.StoreToBaseRate, true
}

// HasStoreToBaseRate returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasStoreToBaseRate() bool {
	if o != nil && !IsNil(o.StoreToBaseRate) {
		return true
	}

	return false
}

// SetStoreToBaseRate gets a reference to the given float32 and assigns it to the StoreToBaseRate field.
func (o *SalesDataInvoiceInterface) SetStoreToBaseRate(v float32) {
	o.StoreToBaseRate = &v
}

// GetStoreToOrderRate returns the StoreToOrderRate field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetStoreToOrderRate() float32 {
	if o == nil || IsNil(o.StoreToOrderRate) {
		var ret float32
		return ret
	}
	return *o.StoreToOrderRate
}

// GetStoreToOrderRateOk returns a tuple with the StoreToOrderRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetStoreToOrderRateOk() (*float32, bool) {
	if o == nil || IsNil(o.StoreToOrderRate) {
		return nil, false
	}
	return o.StoreToOrderRate, true
}

// HasStoreToOrderRate returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasStoreToOrderRate() bool {
	if o != nil && !IsNil(o.StoreToOrderRate) {
		return true
	}

	return false
}

// SetStoreToOrderRate gets a reference to the given float32 and assigns it to the StoreToOrderRate field.
func (o *SalesDataInvoiceInterface) SetStoreToOrderRate(v float32) {
	o.StoreToOrderRate = &v
}

// GetSubtotal returns the Subtotal field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetSubtotal() float32 {
	if o == nil || IsNil(o.Subtotal) {
		var ret float32
		return ret
	}
	return *o.Subtotal
}

// GetSubtotalOk returns a tuple with the Subtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetSubtotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Subtotal) {
		return nil, false
	}
	return o.Subtotal, true
}

// HasSubtotal returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasSubtotal() bool {
	if o != nil && !IsNil(o.Subtotal) {
		return true
	}

	return false
}

// SetSubtotal gets a reference to the given float32 and assigns it to the Subtotal field.
func (o *SalesDataInvoiceInterface) SetSubtotal(v float32) {
	o.Subtotal = &v
}

// GetSubtotalInclTax returns the SubtotalInclTax field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetSubtotalInclTax() float32 {
	if o == nil || IsNil(o.SubtotalInclTax) {
		var ret float32
		return ret
	}
	return *o.SubtotalInclTax
}

// GetSubtotalInclTaxOk returns a tuple with the SubtotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetSubtotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.SubtotalInclTax) {
		return nil, false
	}
	return o.SubtotalInclTax, true
}

// HasSubtotalInclTax returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasSubtotalInclTax() bool {
	if o != nil && !IsNil(o.SubtotalInclTax) {
		return true
	}

	return false
}

// SetSubtotalInclTax gets a reference to the given float32 and assigns it to the SubtotalInclTax field.
func (o *SalesDataInvoiceInterface) SetSubtotalInclTax(v float32) {
	o.SubtotalInclTax = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetTaxAmount() float32 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret float32
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float32 and assigns it to the TaxAmount field.
func (o *SalesDataInvoiceInterface) SetTaxAmount(v float32) {
	o.TaxAmount = &v
}

// GetTotalQty returns the TotalQty field value
func (o *SalesDataInvoiceInterface) GetTotalQty() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalQty
}

// GetTotalQtyOk returns a tuple with the TotalQty field value
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetTotalQtyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalQty, true
}

// SetTotalQty sets field value
func (o *SalesDataInvoiceInterface) SetTotalQty(v float32) {
	o.TotalQty = v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *SalesDataInvoiceInterface) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SalesDataInvoiceInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetItems returns the Items field value
func (o *SalesDataInvoiceInterface) GetItems() []SalesDataInvoiceItemInterface {
	if o == nil {
		var ret []SalesDataInvoiceItemInterface
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetItemsOk() ([]SalesDataInvoiceItemInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *SalesDataInvoiceInterface) SetItems(v []SalesDataInvoiceItemInterface) {
	o.Items = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetComments() []SalesDataInvoiceCommentInterface {
	if o == nil || IsNil(o.Comments) {
		var ret []SalesDataInvoiceCommentInterface
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetCommentsOk() ([]SalesDataInvoiceCommentInterface, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []SalesDataInvoiceCommentInterface and assigns it to the Comments field.
func (o *SalesDataInvoiceInterface) SetComments(v []SalesDataInvoiceCommentInterface) {
	o.Comments = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataInvoiceInterface) GetExtensionAttributes() SalesDataInvoiceExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret SalesDataInvoiceExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataInvoiceInterface) GetExtensionAttributesOk() (*SalesDataInvoiceExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataInvoiceInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given SalesDataInvoiceExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *SalesDataInvoiceInterface) SetExtensionAttributes(v SalesDataInvoiceExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o SalesDataInvoiceInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataInvoiceInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseCurrencyCode) {
		toSerialize["base_currency_code"] = o.BaseCurrencyCode
	}
	if !IsNil(o.BaseDiscountAmount) {
		toSerialize["base_discount_amount"] = o.BaseDiscountAmount
	}
	if !IsNil(o.BaseGrandTotal) {
		toSerialize["base_grand_total"] = o.BaseGrandTotal
	}
	if !IsNil(o.BaseDiscountTaxCompensationAmount) {
		toSerialize["base_discount_tax_compensation_amount"] = o.BaseDiscountTaxCompensationAmount
	}
	if !IsNil(o.BaseShippingAmount) {
		toSerialize["base_shipping_amount"] = o.BaseShippingAmount
	}
	if !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		toSerialize["base_shipping_discount_tax_compensation_amnt"] = o.BaseShippingDiscountTaxCompensationAmnt
	}
	if !IsNil(o.BaseShippingInclTax) {
		toSerialize["base_shipping_incl_tax"] = o.BaseShippingInclTax
	}
	if !IsNil(o.BaseShippingTaxAmount) {
		toSerialize["base_shipping_tax_amount"] = o.BaseShippingTaxAmount
	}
	if !IsNil(o.BaseSubtotal) {
		toSerialize["base_subtotal"] = o.BaseSubtotal
	}
	if !IsNil(o.BaseSubtotalInclTax) {
		toSerialize["base_subtotal_incl_tax"] = o.BaseSubtotalInclTax
	}
	if !IsNil(o.BaseTaxAmount) {
		toSerialize["base_tax_amount"] = o.BaseTaxAmount
	}
	if !IsNil(o.BaseTotalRefunded) {
		toSerialize["base_total_refunded"] = o.BaseTotalRefunded
	}
	if !IsNil(o.BaseToGlobalRate) {
		toSerialize["base_to_global_rate"] = o.BaseToGlobalRate
	}
	if !IsNil(o.BaseToOrderRate) {
		toSerialize["base_to_order_rate"] = o.BaseToOrderRate
	}
	if !IsNil(o.BillingAddressId) {
		toSerialize["billing_address_id"] = o.BillingAddressId
	}
	if !IsNil(o.CanVoidFlag) {
		toSerialize["can_void_flag"] = o.CanVoidFlag
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountDescription) {
		toSerialize["discount_description"] = o.DiscountDescription
	}
	if !IsNil(o.EmailSent) {
		toSerialize["email_sent"] = o.EmailSent
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	if !IsNil(o.GlobalCurrencyCode) {
		toSerialize["global_currency_code"] = o.GlobalCurrencyCode
	}
	if !IsNil(o.GrandTotal) {
		toSerialize["grand_total"] = o.GrandTotal
	}
	if !IsNil(o.DiscountTaxCompensationAmount) {
		toSerialize["discount_tax_compensation_amount"] = o.DiscountTaxCompensationAmount
	}
	if !IsNil(o.IncrementId) {
		toSerialize["increment_id"] = o.IncrementId
	}
	if !IsNil(o.IsUsedForRefund) {
		toSerialize["is_used_for_refund"] = o.IsUsedForRefund
	}
	if !IsNil(o.OrderCurrencyCode) {
		toSerialize["order_currency_code"] = o.OrderCurrencyCode
	}
	toSerialize["order_id"] = o.OrderId
	if !IsNil(o.ShippingAddressId) {
		toSerialize["shipping_address_id"] = o.ShippingAddressId
	}
	if !IsNil(o.ShippingAmount) {
		toSerialize["shipping_amount"] = o.ShippingAmount
	}
	if !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		toSerialize["shipping_discount_tax_compensation_amount"] = o.ShippingDiscountTaxCompensationAmount
	}
	if !IsNil(o.ShippingInclTax) {
		toSerialize["shipping_incl_tax"] = o.ShippingInclTax
	}
	if !IsNil(o.ShippingTaxAmount) {
		toSerialize["shipping_tax_amount"] = o.ShippingTaxAmount
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StoreCurrencyCode) {
		toSerialize["store_currency_code"] = o.StoreCurrencyCode
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.StoreToBaseRate) {
		toSerialize["store_to_base_rate"] = o.StoreToBaseRate
	}
	if !IsNil(o.StoreToOrderRate) {
		toSerialize["store_to_order_rate"] = o.StoreToOrderRate
	}
	if !IsNil(o.Subtotal) {
		toSerialize["subtotal"] = o.Subtotal
	}
	if !IsNil(o.SubtotalInclTax) {
		toSerialize["subtotal_incl_tax"] = o.SubtotalInclTax
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["tax_amount"] = o.TaxAmount
	}
	toSerialize["total_qty"] = o.TotalQty
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["items"] = o.Items
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataInvoiceInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"order_id",
		"total_qty",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataInvoiceInterface := _SalesDataInvoiceInterface{}

	err = json.Unmarshal(data, &varSalesDataInvoiceInterface)

	if err != nil {
		return err
	}

	*o = SalesDataInvoiceInterface(varSalesDataInvoiceInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "base_currency_code")
		delete(additionalProperties, "base_discount_amount")
		delete(additionalProperties, "base_grand_total")
		delete(additionalProperties, "base_discount_tax_compensation_amount")
		delete(additionalProperties, "base_shipping_amount")
		delete(additionalProperties, "base_shipping_discount_tax_compensation_amnt")
		delete(additionalProperties, "base_shipping_incl_tax")
		delete(additionalProperties, "base_shipping_tax_amount")
		delete(additionalProperties, "base_subtotal")
		delete(additionalProperties, "base_subtotal_incl_tax")
		delete(additionalProperties, "base_tax_amount")
		delete(additionalProperties, "base_total_refunded")
		delete(additionalProperties, "base_to_global_rate")
		delete(additionalProperties, "base_to_order_rate")
		delete(additionalProperties, "billing_address_id")
		delete(additionalProperties, "can_void_flag")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "discount_amount")
		delete(additionalProperties, "discount_description")
		delete(additionalProperties, "email_sent")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "global_currency_code")
		delete(additionalProperties, "grand_total")
		delete(additionalProperties, "discount_tax_compensation_amount")
		delete(additionalProperties, "increment_id")
		delete(additionalProperties, "is_used_for_refund")
		delete(additionalProperties, "order_currency_code")
		delete(additionalProperties, "order_id")
		delete(additionalProperties, "shipping_address_id")
		delete(additionalProperties, "shipping_amount")
		delete(additionalProperties, "shipping_discount_tax_compensation_amount")
		delete(additionalProperties, "shipping_incl_tax")
		delete(additionalProperties, "shipping_tax_amount")
		delete(additionalProperties, "state")
		delete(additionalProperties, "store_currency_code")
		delete(additionalProperties, "store_id")
		delete(additionalProperties, "store_to_base_rate")
		delete(additionalProperties, "store_to_order_rate")
		delete(additionalProperties, "subtotal")
		delete(additionalProperties, "subtotal_incl_tax")
		delete(additionalProperties, "tax_amount")
		delete(additionalProperties, "total_qty")
		delete(additionalProperties, "transaction_id")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "items")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataInvoiceInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataInvoiceInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataInvoiceInterface struct {
	value *SalesDataInvoiceInterface
	isSet bool
}

func (v NullableSalesDataInvoiceInterface) Get() *SalesDataInvoiceInterface {
	return v.value
}

func (v *NullableSalesDataInvoiceInterface) Set(val *SalesDataInvoiceInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataInvoiceInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataInvoiceInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataInvoiceInterface(val *SalesDataInvoiceInterface) *NullableSalesDataInvoiceInterface {
	return &NullableSalesDataInvoiceInterface{value: val, isSet: true}
}

func (v NullableSalesDataInvoiceInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataInvoiceInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
