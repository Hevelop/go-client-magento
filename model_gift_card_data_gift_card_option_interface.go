/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the GiftCardDataGiftCardOptionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GiftCardDataGiftCardOptionInterface{}

// GiftCardDataGiftCardOptionInterface Interface GiftCardOptionInterface
type GiftCardDataGiftCardOptionInterface struct {
	// Gift card amount.
	GiftcardAmount string `json:"giftcard_amount"`
	// Gift card open amount value.
	CustomGiftcardAmount *float32 `json:"custom_giftcard_amount,omitempty"`
	// Gift card sender name.
	GiftcardSenderName string `json:"giftcard_sender_name"`
	// Gift card recipient name.
	GiftcardRecipientName string `json:"giftcard_recipient_name"`
	// Gift card sender email.
	GiftcardSenderEmail string `json:"giftcard_sender_email"`
	// Gift card recipient email.
	GiftcardRecipientEmail string `json:"giftcard_recipient_email"`
	// Giftcard message.
	GiftcardMessage      *string                                       `json:"giftcard_message,omitempty"`
	ExtensionAttributes  *GiftCardDataGiftCardOptionExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GiftCardDataGiftCardOptionInterface GiftCardDataGiftCardOptionInterface

// NewGiftCardDataGiftCardOptionInterface instantiates a new GiftCardDataGiftCardOptionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftCardDataGiftCardOptionInterface(giftcardAmount string, giftcardSenderName string, giftcardRecipientName string, giftcardSenderEmail string, giftcardRecipientEmail string) *GiftCardDataGiftCardOptionInterface {
	this := GiftCardDataGiftCardOptionInterface{}
	this.GiftcardAmount = giftcardAmount
	this.GiftcardSenderName = giftcardSenderName
	this.GiftcardRecipientName = giftcardRecipientName
	this.GiftcardSenderEmail = giftcardSenderEmail
	this.GiftcardRecipientEmail = giftcardRecipientEmail
	return &this
}

// NewGiftCardDataGiftCardOptionInterfaceWithDefaults instantiates a new GiftCardDataGiftCardOptionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftCardDataGiftCardOptionInterfaceWithDefaults() *GiftCardDataGiftCardOptionInterface {
	this := GiftCardDataGiftCardOptionInterface{}
	return &this
}

// GetGiftcardAmount returns the GiftcardAmount field value
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GiftcardAmount
}

// GetGiftcardAmountOk returns a tuple with the GiftcardAmount field value
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GiftcardAmount, true
}

// SetGiftcardAmount sets field value
func (o *GiftCardDataGiftCardOptionInterface) SetGiftcardAmount(v string) {
	o.GiftcardAmount = v
}

// GetCustomGiftcardAmount returns the CustomGiftcardAmount field value if set, zero value otherwise.
func (o *GiftCardDataGiftCardOptionInterface) GetCustomGiftcardAmount() float32 {
	if o == nil || IsNil(o.CustomGiftcardAmount) {
		var ret float32
		return ret
	}
	return *o.CustomGiftcardAmount
}

// GetCustomGiftcardAmountOk returns a tuple with the CustomGiftcardAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetCustomGiftcardAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.CustomGiftcardAmount) {
		return nil, false
	}
	return o.CustomGiftcardAmount, true
}

// HasCustomGiftcardAmount returns a boolean if a field has been set.
func (o *GiftCardDataGiftCardOptionInterface) HasCustomGiftcardAmount() bool {
	if o != nil && !IsNil(o.CustomGiftcardAmount) {
		return true
	}

	return false
}

// SetCustomGiftcardAmount gets a reference to the given float32 and assigns it to the CustomGiftcardAmount field.
func (o *GiftCardDataGiftCardOptionInterface) SetCustomGiftcardAmount(v float32) {
	o.CustomGiftcardAmount = &v
}

// GetGiftcardSenderName returns the GiftcardSenderName field value
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardSenderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GiftcardSenderName
}

// GetGiftcardSenderNameOk returns a tuple with the GiftcardSenderName field value
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardSenderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GiftcardSenderName, true
}

// SetGiftcardSenderName sets field value
func (o *GiftCardDataGiftCardOptionInterface) SetGiftcardSenderName(v string) {
	o.GiftcardSenderName = v
}

// GetGiftcardRecipientName returns the GiftcardRecipientName field value
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardRecipientName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GiftcardRecipientName
}

// GetGiftcardRecipientNameOk returns a tuple with the GiftcardRecipientName field value
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardRecipientNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GiftcardRecipientName, true
}

// SetGiftcardRecipientName sets field value
func (o *GiftCardDataGiftCardOptionInterface) SetGiftcardRecipientName(v string) {
	o.GiftcardRecipientName = v
}

// GetGiftcardSenderEmail returns the GiftcardSenderEmail field value
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardSenderEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GiftcardSenderEmail
}

// GetGiftcardSenderEmailOk returns a tuple with the GiftcardSenderEmail field value
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardSenderEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GiftcardSenderEmail, true
}

// SetGiftcardSenderEmail sets field value
func (o *GiftCardDataGiftCardOptionInterface) SetGiftcardSenderEmail(v string) {
	o.GiftcardSenderEmail = v
}

// GetGiftcardRecipientEmail returns the GiftcardRecipientEmail field value
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardRecipientEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GiftcardRecipientEmail
}

// GetGiftcardRecipientEmailOk returns a tuple with the GiftcardRecipientEmail field value
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardRecipientEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GiftcardRecipientEmail, true
}

// SetGiftcardRecipientEmail sets field value
func (o *GiftCardDataGiftCardOptionInterface) SetGiftcardRecipientEmail(v string) {
	o.GiftcardRecipientEmail = v
}

// GetGiftcardMessage returns the GiftcardMessage field value if set, zero value otherwise.
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardMessage() string {
	if o == nil || IsNil(o.GiftcardMessage) {
		var ret string
		return ret
	}
	return *o.GiftcardMessage
}

// GetGiftcardMessageOk returns a tuple with the GiftcardMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetGiftcardMessageOk() (*string, bool) {
	if o == nil || IsNil(o.GiftcardMessage) {
		return nil, false
	}
	return o.GiftcardMessage, true
}

// HasGiftcardMessage returns a boolean if a field has been set.
func (o *GiftCardDataGiftCardOptionInterface) HasGiftcardMessage() bool {
	if o != nil && !IsNil(o.GiftcardMessage) {
		return true
	}

	return false
}

// SetGiftcardMessage gets a reference to the given string and assigns it to the GiftcardMessage field.
func (o *GiftCardDataGiftCardOptionInterface) SetGiftcardMessage(v string) {
	o.GiftcardMessage = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *GiftCardDataGiftCardOptionInterface) GetExtensionAttributes() GiftCardDataGiftCardOptionExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret GiftCardDataGiftCardOptionExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardDataGiftCardOptionInterface) GetExtensionAttributesOk() (*GiftCardDataGiftCardOptionExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *GiftCardDataGiftCardOptionInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given GiftCardDataGiftCardOptionExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *GiftCardDataGiftCardOptionInterface) SetExtensionAttributes(v GiftCardDataGiftCardOptionExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o GiftCardDataGiftCardOptionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GiftCardDataGiftCardOptionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["giftcard_amount"] = o.GiftcardAmount
	if !IsNil(o.CustomGiftcardAmount) {
		toSerialize["custom_giftcard_amount"] = o.CustomGiftcardAmount
	}
	toSerialize["giftcard_sender_name"] = o.GiftcardSenderName
	toSerialize["giftcard_recipient_name"] = o.GiftcardRecipientName
	toSerialize["giftcard_sender_email"] = o.GiftcardSenderEmail
	toSerialize["giftcard_recipient_email"] = o.GiftcardRecipientEmail
	if !IsNil(o.GiftcardMessage) {
		toSerialize["giftcard_message"] = o.GiftcardMessage
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GiftCardDataGiftCardOptionInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"giftcard_amount",
		"giftcard_sender_name",
		"giftcard_recipient_name",
		"giftcard_sender_email",
		"giftcard_recipient_email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGiftCardDataGiftCardOptionInterface := _GiftCardDataGiftCardOptionInterface{}

	err = json.Unmarshal(data, &varGiftCardDataGiftCardOptionInterface)

	if err != nil {
		return err
	}

	*o = GiftCardDataGiftCardOptionInterface(varGiftCardDataGiftCardOptionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "giftcard_amount")
		delete(additionalProperties, "custom_giftcard_amount")
		delete(additionalProperties, "giftcard_sender_name")
		delete(additionalProperties, "giftcard_recipient_name")
		delete(additionalProperties, "giftcard_sender_email")
		delete(additionalProperties, "giftcard_recipient_email")
		delete(additionalProperties, "giftcard_message")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *GiftCardDataGiftCardOptionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *GiftCardDataGiftCardOptionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableGiftCardDataGiftCardOptionInterface struct {
	value *GiftCardDataGiftCardOptionInterface
	isSet bool
}

func (v NullableGiftCardDataGiftCardOptionInterface) Get() *GiftCardDataGiftCardOptionInterface {
	return v.value
}

func (v *NullableGiftCardDataGiftCardOptionInterface) Set(val *GiftCardDataGiftCardOptionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftCardDataGiftCardOptionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftCardDataGiftCardOptionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftCardDataGiftCardOptionInterface(val *GiftCardDataGiftCardOptionInterface) *NullableGiftCardDataGiftCardOptionInterface {
	return &NullableGiftCardDataGiftCardOptionInterface{value: val, isSet: true}
}

func (v NullableGiftCardDataGiftCardOptionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftCardDataGiftCardOptionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
