/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the EavDataAttributeGroupExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EavDataAttributeGroupExtensionInterface{}

// EavDataAttributeGroupExtensionInterface ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeGroupInterface
type EavDataAttributeGroupExtensionInterface struct {
	AttributeGroupCode   *string `json:"attribute_group_code,omitempty"`
	SortOrder            *string `json:"sort_order,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EavDataAttributeGroupExtensionInterface EavDataAttributeGroupExtensionInterface

// NewEavDataAttributeGroupExtensionInterface instantiates a new EavDataAttributeGroupExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEavDataAttributeGroupExtensionInterface() *EavDataAttributeGroupExtensionInterface {
	this := EavDataAttributeGroupExtensionInterface{}
	return &this
}

// NewEavDataAttributeGroupExtensionInterfaceWithDefaults instantiates a new EavDataAttributeGroupExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEavDataAttributeGroupExtensionInterfaceWithDefaults() *EavDataAttributeGroupExtensionInterface {
	this := EavDataAttributeGroupExtensionInterface{}
	return &this
}

// GetAttributeGroupCode returns the AttributeGroupCode field value if set, zero value otherwise.
func (o *EavDataAttributeGroupExtensionInterface) GetAttributeGroupCode() string {
	if o == nil || IsNil(o.AttributeGroupCode) {
		var ret string
		return ret
	}
	return *o.AttributeGroupCode
}

// GetAttributeGroupCodeOk returns a tuple with the AttributeGroupCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EavDataAttributeGroupExtensionInterface) GetAttributeGroupCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeGroupCode) {
		return nil, false
	}
	return o.AttributeGroupCode, true
}

// HasAttributeGroupCode returns a boolean if a field has been set.
func (o *EavDataAttributeGroupExtensionInterface) HasAttributeGroupCode() bool {
	if o != nil && !IsNil(o.AttributeGroupCode) {
		return true
	}

	return false
}

// SetAttributeGroupCode gets a reference to the given string and assigns it to the AttributeGroupCode field.
func (o *EavDataAttributeGroupExtensionInterface) SetAttributeGroupCode(v string) {
	o.AttributeGroupCode = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *EavDataAttributeGroupExtensionInterface) GetSortOrder() string {
	if o == nil || IsNil(o.SortOrder) {
		var ret string
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EavDataAttributeGroupExtensionInterface) GetSortOrderOk() (*string, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *EavDataAttributeGroupExtensionInterface) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given string and assigns it to the SortOrder field.
func (o *EavDataAttributeGroupExtensionInterface) SetSortOrder(v string) {
	o.SortOrder = &v
}

func (o EavDataAttributeGroupExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EavDataAttributeGroupExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeGroupCode) {
		toSerialize["attribute_group_code"] = o.AttributeGroupCode
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sort_order"] = o.SortOrder
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EavDataAttributeGroupExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varEavDataAttributeGroupExtensionInterface := _EavDataAttributeGroupExtensionInterface{}

	err = json.Unmarshal(data, &varEavDataAttributeGroupExtensionInterface)

	if err != nil {
		return err
	}

	*o = EavDataAttributeGroupExtensionInterface(varEavDataAttributeGroupExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "attribute_group_code")
		delete(additionalProperties, "sort_order")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *EavDataAttributeGroupExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *EavDataAttributeGroupExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableEavDataAttributeGroupExtensionInterface struct {
	value *EavDataAttributeGroupExtensionInterface
	isSet bool
}

func (v NullableEavDataAttributeGroupExtensionInterface) Get() *EavDataAttributeGroupExtensionInterface {
	return v.value
}

func (v *NullableEavDataAttributeGroupExtensionInterface) Set(val *EavDataAttributeGroupExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableEavDataAttributeGroupExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableEavDataAttributeGroupExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEavDataAttributeGroupExtensionInterface(val *EavDataAttributeGroupExtensionInterface) *NullableEavDataAttributeGroupExtensionInterface {
	return &NullableEavDataAttributeGroupExtensionInterface{value: val, isSet: true}
}

func (v NullableEavDataAttributeGroupExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEavDataAttributeGroupExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
