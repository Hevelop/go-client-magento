/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PostV1GuestcartsCartIdPaymentinformationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostV1GuestcartsCartIdPaymentinformationRequest{}

// PostV1GuestcartsCartIdPaymentinformationRequest struct for PostV1GuestcartsCartIdPaymentinformationRequest
type PostV1GuestcartsCartIdPaymentinformationRequest struct {
	Email                string                     `json:"email"`
	PaymentMethod        QuoteDataPaymentInterface  `json:"paymentMethod"`
	BillingAddress       *QuoteDataAddressInterface `json:"billingAddress,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostV1GuestcartsCartIdPaymentinformationRequest PostV1GuestcartsCartIdPaymentinformationRequest

// NewPostV1GuestcartsCartIdPaymentinformationRequest instantiates a new PostV1GuestcartsCartIdPaymentinformationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostV1GuestcartsCartIdPaymentinformationRequest(email string, paymentMethod QuoteDataPaymentInterface) *PostV1GuestcartsCartIdPaymentinformationRequest {
	this := PostV1GuestcartsCartIdPaymentinformationRequest{}
	this.Email = email
	this.PaymentMethod = paymentMethod
	return &this
}

// NewPostV1GuestcartsCartIdPaymentinformationRequestWithDefaults instantiates a new PostV1GuestcartsCartIdPaymentinformationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostV1GuestcartsCartIdPaymentinformationRequestWithDefaults() *PostV1GuestcartsCartIdPaymentinformationRequest {
	this := PostV1GuestcartsCartIdPaymentinformationRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) SetEmail(v string) {
	o.Email = v
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) GetPaymentMethod() QuoteDataPaymentInterface {
	if o == nil {
		var ret QuoteDataPaymentInterface
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) GetPaymentMethodOk() (*QuoteDataPaymentInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) SetPaymentMethod(v QuoteDataPaymentInterface) {
	o.PaymentMethod = v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) GetBillingAddress() QuoteDataAddressInterface {
	if o == nil || IsNil(o.BillingAddress) {
		var ret QuoteDataAddressInterface
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) GetBillingAddressOk() (*QuoteDataAddressInterface, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given QuoteDataAddressInterface and assigns it to the BillingAddress field.
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) SetBillingAddress(v QuoteDataAddressInterface) {
	o.BillingAddress = &v
}

func (o PostV1GuestcartsCartIdPaymentinformationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostV1GuestcartsCartIdPaymentinformationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["paymentMethod"] = o.PaymentMethod
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostV1GuestcartsCartIdPaymentinformationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"paymentMethod",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostV1GuestcartsCartIdPaymentinformationRequest := _PostV1GuestcartsCartIdPaymentinformationRequest{}

	err = json.Unmarshal(data, &varPostV1GuestcartsCartIdPaymentinformationRequest)

	if err != nil {
		return err
	}

	*o = PostV1GuestcartsCartIdPaymentinformationRequest(varPostV1GuestcartsCartIdPaymentinformationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "paymentMethod")
		delete(additionalProperties, "billingAddress")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PostV1GuestcartsCartIdPaymentinformationRequest) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePostV1GuestcartsCartIdPaymentinformationRequest struct {
	value *PostV1GuestcartsCartIdPaymentinformationRequest
	isSet bool
}

func (v NullablePostV1GuestcartsCartIdPaymentinformationRequest) Get() *PostV1GuestcartsCartIdPaymentinformationRequest {
	return v.value
}

func (v *NullablePostV1GuestcartsCartIdPaymentinformationRequest) Set(val *PostV1GuestcartsCartIdPaymentinformationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostV1GuestcartsCartIdPaymentinformationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostV1GuestcartsCartIdPaymentinformationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostV1GuestcartsCartIdPaymentinformationRequest(val *PostV1GuestcartsCartIdPaymentinformationRequest) *NullablePostV1GuestcartsCartIdPaymentinformationRequest {
	return &NullablePostV1GuestcartsCartIdPaymentinformationRequest{value: val, isSet: true}
}

func (v NullablePostV1GuestcartsCartIdPaymentinformationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostV1GuestcartsCartIdPaymentinformationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
