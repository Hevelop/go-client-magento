/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the CompanyDataTeamInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyDataTeamInterface{}

// CompanyDataTeamInterface Team interface
type CompanyDataTeamInterface struct {
	// ID
	Id *int32 `json:"id,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\TeamInterface
	ExtensionAttributes map[string]interface{} `json:"extension_attributes,omitempty"`
	// Custom attributes values.
	CustomAttributes     []FrameworkAttributeInterface `json:"custom_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CompanyDataTeamInterface CompanyDataTeamInterface

// NewCompanyDataTeamInterface instantiates a new CompanyDataTeamInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyDataTeamInterface() *CompanyDataTeamInterface {
	this := CompanyDataTeamInterface{}
	return &this
}

// NewCompanyDataTeamInterfaceWithDefaults instantiates a new CompanyDataTeamInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyDataTeamInterfaceWithDefaults() *CompanyDataTeamInterface {
	this := CompanyDataTeamInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CompanyDataTeamInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataTeamInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CompanyDataTeamInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CompanyDataTeamInterface) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompanyDataTeamInterface) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataTeamInterface) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompanyDataTeamInterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompanyDataTeamInterface) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CompanyDataTeamInterface) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataTeamInterface) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CompanyDataTeamInterface) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CompanyDataTeamInterface) SetDescription(v string) {
	o.Description = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CompanyDataTeamInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataTeamInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CompanyDataTeamInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *CompanyDataTeamInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *CompanyDataTeamInterface) GetCustomAttributes() []FrameworkAttributeInterface {
	if o == nil || IsNil(o.CustomAttributes) {
		var ret []FrameworkAttributeInterface
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataTeamInterface) GetCustomAttributesOk() ([]FrameworkAttributeInterface, bool) {
	if o == nil || IsNil(o.CustomAttributes) {
		return nil, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *CompanyDataTeamInterface) HasCustomAttributes() bool {
	if o != nil && !IsNil(o.CustomAttributes) {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given []FrameworkAttributeInterface and assigns it to the CustomAttributes field.
func (o *CompanyDataTeamInterface) SetCustomAttributes(v []FrameworkAttributeInterface) {
	o.CustomAttributes = v
}

func (o CompanyDataTeamInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyDataTeamInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.CustomAttributes) {
		toSerialize["custom_attributes"] = o.CustomAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CompanyDataTeamInterface) UnmarshalJSON(data []byte) (err error) {
	varCompanyDataTeamInterface := _CompanyDataTeamInterface{}

	err = json.Unmarshal(data, &varCompanyDataTeamInterface)

	if err != nil {
		return err
	}

	*o = CompanyDataTeamInterface(varCompanyDataTeamInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "custom_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CompanyDataTeamInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CompanyDataTeamInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCompanyDataTeamInterface struct {
	value *CompanyDataTeamInterface
	isSet bool
}

func (v NullableCompanyDataTeamInterface) Get() *CompanyDataTeamInterface {
	return v.value
}

func (v *NullableCompanyDataTeamInterface) Set(val *CompanyDataTeamInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyDataTeamInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyDataTeamInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyDataTeamInterface(val *CompanyDataTeamInterface) *NullableCompanyDataTeamInterface {
	return &NullableCompanyDataTeamInterface{value: val, isSet: true}
}

func (v NullableCompanyDataTeamInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyDataTeamInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
