/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the GiftWrappingDataWrappingInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GiftWrappingDataWrappingInterface{}

// GiftWrappingDataWrappingInterface Interface WrappingInterface
type GiftWrappingDataWrappingInterface struct {
	WrappingId         *int32  `json:"wrapping_id,omitempty"`
	Design             string  `json:"design"`
	Status             int32   `json:"status"`
	BasePrice          float32 `json:"base_price"`
	ImageName          *string `json:"image_name,omitempty"`
	ImageBase64Content *string `json:"image_base64_content,omitempty"`
	BaseCurrencyCode   *string `json:"base_currency_code,omitempty"`
	WebsiteIds         []int32 `json:"website_ids,omitempty"`
	// Wrapping image URL.
	ImageUrl *string `json:"image_url,omitempty"`
	// ExtensionInterface class for @see \\Magento\\GiftWrapping\\Api\\Data\\WrappingInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GiftWrappingDataWrappingInterface GiftWrappingDataWrappingInterface

// NewGiftWrappingDataWrappingInterface instantiates a new GiftWrappingDataWrappingInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftWrappingDataWrappingInterface(design string, status int32, basePrice float32) *GiftWrappingDataWrappingInterface {
	this := GiftWrappingDataWrappingInterface{}
	this.Design = design
	this.Status = status
	this.BasePrice = basePrice
	return &this
}

// NewGiftWrappingDataWrappingInterfaceWithDefaults instantiates a new GiftWrappingDataWrappingInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftWrappingDataWrappingInterfaceWithDefaults() *GiftWrappingDataWrappingInterface {
	this := GiftWrappingDataWrappingInterface{}
	return &this
}

// GetWrappingId returns the WrappingId field value if set, zero value otherwise.
func (o *GiftWrappingDataWrappingInterface) GetWrappingId() int32 {
	if o == nil || IsNil(o.WrappingId) {
		var ret int32
		return ret
	}
	return *o.WrappingId
}

// GetWrappingIdOk returns a tuple with the WrappingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetWrappingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.WrappingId) {
		return nil, false
	}
	return o.WrappingId, true
}

// HasWrappingId returns a boolean if a field has been set.
func (o *GiftWrappingDataWrappingInterface) HasWrappingId() bool {
	if o != nil && !IsNil(o.WrappingId) {
		return true
	}

	return false
}

// SetWrappingId gets a reference to the given int32 and assigns it to the WrappingId field.
func (o *GiftWrappingDataWrappingInterface) SetWrappingId(v int32) {
	o.WrappingId = &v
}

// GetDesign returns the Design field value
func (o *GiftWrappingDataWrappingInterface) GetDesign() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Design
}

// GetDesignOk returns a tuple with the Design field value
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetDesignOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Design, true
}

// SetDesign sets field value
func (o *GiftWrappingDataWrappingInterface) SetDesign(v string) {
	o.Design = v
}

// GetStatus returns the Status field value
func (o *GiftWrappingDataWrappingInterface) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GiftWrappingDataWrappingInterface) SetStatus(v int32) {
	o.Status = v
}

// GetBasePrice returns the BasePrice field value
func (o *GiftWrappingDataWrappingInterface) GetBasePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BasePrice
}

// GetBasePriceOk returns a tuple with the BasePrice field value
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetBasePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasePrice, true
}

// SetBasePrice sets field value
func (o *GiftWrappingDataWrappingInterface) SetBasePrice(v float32) {
	o.BasePrice = v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *GiftWrappingDataWrappingInterface) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *GiftWrappingDataWrappingInterface) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *GiftWrappingDataWrappingInterface) SetImageName(v string) {
	o.ImageName = &v
}

// GetImageBase64Content returns the ImageBase64Content field value if set, zero value otherwise.
func (o *GiftWrappingDataWrappingInterface) GetImageBase64Content() string {
	if o == nil || IsNil(o.ImageBase64Content) {
		var ret string
		return ret
	}
	return *o.ImageBase64Content
}

// GetImageBase64ContentOk returns a tuple with the ImageBase64Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetImageBase64ContentOk() (*string, bool) {
	if o == nil || IsNil(o.ImageBase64Content) {
		return nil, false
	}
	return o.ImageBase64Content, true
}

// HasImageBase64Content returns a boolean if a field has been set.
func (o *GiftWrappingDataWrappingInterface) HasImageBase64Content() bool {
	if o != nil && !IsNil(o.ImageBase64Content) {
		return true
	}

	return false
}

// SetImageBase64Content gets a reference to the given string and assigns it to the ImageBase64Content field.
func (o *GiftWrappingDataWrappingInterface) SetImageBase64Content(v string) {
	o.ImageBase64Content = &v
}

// GetBaseCurrencyCode returns the BaseCurrencyCode field value if set, zero value otherwise.
func (o *GiftWrappingDataWrappingInterface) GetBaseCurrencyCode() string {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		var ret string
		return ret
	}
	return *o.BaseCurrencyCode
}

// GetBaseCurrencyCodeOk returns a tuple with the BaseCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetBaseCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		return nil, false
	}
	return o.BaseCurrencyCode, true
}

// HasBaseCurrencyCode returns a boolean if a field has been set.
func (o *GiftWrappingDataWrappingInterface) HasBaseCurrencyCode() bool {
	if o != nil && !IsNil(o.BaseCurrencyCode) {
		return true
	}

	return false
}

// SetBaseCurrencyCode gets a reference to the given string and assigns it to the BaseCurrencyCode field.
func (o *GiftWrappingDataWrappingInterface) SetBaseCurrencyCode(v string) {
	o.BaseCurrencyCode = &v
}

// GetWebsiteIds returns the WebsiteIds field value if set, zero value otherwise.
func (o *GiftWrappingDataWrappingInterface) GetWebsiteIds() []int32 {
	if o == nil || IsNil(o.WebsiteIds) {
		var ret []int32
		return ret
	}
	return o.WebsiteIds
}

// GetWebsiteIdsOk returns a tuple with the WebsiteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetWebsiteIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.WebsiteIds) {
		return nil, false
	}
	return o.WebsiteIds, true
}

// HasWebsiteIds returns a boolean if a field has been set.
func (o *GiftWrappingDataWrappingInterface) HasWebsiteIds() bool {
	if o != nil && !IsNil(o.WebsiteIds) {
		return true
	}

	return false
}

// SetWebsiteIds gets a reference to the given []int32 and assigns it to the WebsiteIds field.
func (o *GiftWrappingDataWrappingInterface) SetWebsiteIds(v []int32) {
	o.WebsiteIds = v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *GiftWrappingDataWrappingInterface) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *GiftWrappingDataWrappingInterface) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *GiftWrappingDataWrappingInterface) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *GiftWrappingDataWrappingInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftWrappingDataWrappingInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *GiftWrappingDataWrappingInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *GiftWrappingDataWrappingInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o GiftWrappingDataWrappingInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GiftWrappingDataWrappingInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WrappingId) {
		toSerialize["wrapping_id"] = o.WrappingId
	}
	toSerialize["design"] = o.Design
	toSerialize["status"] = o.Status
	toSerialize["base_price"] = o.BasePrice
	if !IsNil(o.ImageName) {
		toSerialize["image_name"] = o.ImageName
	}
	if !IsNil(o.ImageBase64Content) {
		toSerialize["image_base64_content"] = o.ImageBase64Content
	}
	if !IsNil(o.BaseCurrencyCode) {
		toSerialize["base_currency_code"] = o.BaseCurrencyCode
	}
	if !IsNil(o.WebsiteIds) {
		toSerialize["website_ids"] = o.WebsiteIds
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GiftWrappingDataWrappingInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"design",
		"status",
		"base_price",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGiftWrappingDataWrappingInterface := _GiftWrappingDataWrappingInterface{}

	err = json.Unmarshal(data, &varGiftWrappingDataWrappingInterface)

	if err != nil {
		return err
	}

	*o = GiftWrappingDataWrappingInterface(varGiftWrappingDataWrappingInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "wrapping_id")
		delete(additionalProperties, "design")
		delete(additionalProperties, "status")
		delete(additionalProperties, "base_price")
		delete(additionalProperties, "image_name")
		delete(additionalProperties, "image_base64_content")
		delete(additionalProperties, "base_currency_code")
		delete(additionalProperties, "website_ids")
		delete(additionalProperties, "image_url")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *GiftWrappingDataWrappingInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *GiftWrappingDataWrappingInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableGiftWrappingDataWrappingInterface struct {
	value *GiftWrappingDataWrappingInterface
	isSet bool
}

func (v NullableGiftWrappingDataWrappingInterface) Get() *GiftWrappingDataWrappingInterface {
	return v.value
}

func (v *NullableGiftWrappingDataWrappingInterface) Set(val *GiftWrappingDataWrappingInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftWrappingDataWrappingInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftWrappingDataWrappingInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftWrappingDataWrappingInterface(val *GiftWrappingDataWrappingInterface) *NullableGiftWrappingDataWrappingInterface {
	return &NullableGiftWrappingDataWrappingInterface{value: val, isSet: true}
}

func (v NullableGiftWrappingDataWrappingInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftWrappingDataWrappingInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
