/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentServicesPaypalDataPaymentConfigButtonStylesInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServicesPaypalDataPaymentConfigButtonStylesInterface{}

// PaymentServicesPaypalDataPaymentConfigButtonStylesInterface
type PaymentServicesPaypalDataPaymentConfigButtonStylesInterface struct {
	// Layout
	Layout string `json:"layout"`
	// Color
	Color string `json:"color"`
	// Shape
	Shape string `json:"shape"`
	// Label
	Label string `json:"label"`
	// ShowTagline
	Tagline bool `json:"tagline"`
	// Height
	Height int32 `json:"height"`
	// Height
	UseDefaultHeight     bool `json:"use_default_height"`
	AdditionalProperties map[string]interface{}
}

type _PaymentServicesPaypalDataPaymentConfigButtonStylesInterface PaymentServicesPaypalDataPaymentConfigButtonStylesInterface

// NewPaymentServicesPaypalDataPaymentConfigButtonStylesInterface instantiates a new PaymentServicesPaypalDataPaymentConfigButtonStylesInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServicesPaypalDataPaymentConfigButtonStylesInterface(layout string, color string, shape string, label string, tagline bool, height int32, useDefaultHeight bool) *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface {
	this := PaymentServicesPaypalDataPaymentConfigButtonStylesInterface{}
	this.Layout = layout
	this.Color = color
	this.Shape = shape
	this.Label = label
	this.Tagline = tagline
	this.Height = height
	this.UseDefaultHeight = useDefaultHeight
	return &this
}

// NewPaymentServicesPaypalDataPaymentConfigButtonStylesInterfaceWithDefaults instantiates a new PaymentServicesPaypalDataPaymentConfigButtonStylesInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServicesPaypalDataPaymentConfigButtonStylesInterfaceWithDefaults() *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface {
	this := PaymentServicesPaypalDataPaymentConfigButtonStylesInterface{}
	return &this
}

// GetLayout returns the Layout field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetLayout() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetLayoutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Layout, true
}

// SetLayout sets field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetLayout(v string) {
	o.Layout = v
}

// GetColor returns the Color field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetColor(v string) {
	o.Color = v
}

// GetShape returns the Shape field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetShape() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Shape
}

// GetShapeOk returns a tuple with the Shape field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetShapeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Shape, true
}

// SetShape sets field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetShape(v string) {
	o.Shape = v
}

// GetLabel returns the Label field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetLabel(v string) {
	o.Label = v
}

// GetTagline returns the Tagline field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetTagline() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Tagline
}

// GetTaglineOk returns a tuple with the Tagline field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetTaglineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tagline, true
}

// SetTagline sets field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetTagline(v bool) {
	o.Tagline = v
}

// GetHeight returns the Height field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetHeight(v int32) {
	o.Height = v
}

// GetUseDefaultHeight returns the UseDefaultHeight field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetUseDefaultHeight() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseDefaultHeight
}

// GetUseDefaultHeightOk returns a tuple with the UseDefaultHeight field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetUseDefaultHeightOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseDefaultHeight, true
}

// SetUseDefaultHeight sets field value
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetUseDefaultHeight(v bool) {
	o.UseDefaultHeight = v
}

func (o PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["layout"] = o.Layout
	toSerialize["color"] = o.Color
	toSerialize["shape"] = o.Shape
	toSerialize["label"] = o.Label
	toSerialize["tagline"] = o.Tagline
	toSerialize["height"] = o.Height
	toSerialize["use_default_height"] = o.UseDefaultHeight

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"layout",
		"color",
		"shape",
		"label",
		"tagline",
		"height",
		"use_default_height",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentServicesPaypalDataPaymentConfigButtonStylesInterface := _PaymentServicesPaypalDataPaymentConfigButtonStylesInterface{}

	err = json.Unmarshal(data, &varPaymentServicesPaypalDataPaymentConfigButtonStylesInterface)

	if err != nil {
		return err
	}

	*o = PaymentServicesPaypalDataPaymentConfigButtonStylesInterface(varPaymentServicesPaypalDataPaymentConfigButtonStylesInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "layout")
		delete(additionalProperties, "color")
		delete(additionalProperties, "shape")
		delete(additionalProperties, "label")
		delete(additionalProperties, "tagline")
		delete(additionalProperties, "height")
		delete(additionalProperties, "use_default_height")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface struct {
	value *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface
	isSet bool
}

func (v NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface) Get() *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface {
	return v.value
}

func (v *NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface) Set(val *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface(val *PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) *NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface {
	return &NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface{value: val, isSet: true}
}

func (v NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServicesPaypalDataPaymentConfigButtonStylesInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
