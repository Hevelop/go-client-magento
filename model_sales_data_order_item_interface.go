/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataOrderItemInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataOrderItemInterface{}

// SalesDataOrderItemInterface Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
type SalesDataOrderItemInterface struct {
	// Additional data.
	AdditionalData *string `json:"additional_data,omitempty"`
	// Amount refunded.
	AmountRefunded *float32 `json:"amount_refunded,omitempty"`
	// Applied rule IDs.
	AppliedRuleIds *string `json:"applied_rule_ids,omitempty"`
	// Base amount refunded.
	BaseAmountRefunded *float32 `json:"base_amount_refunded,omitempty"`
	// Base cost.
	BaseCost *float32 `json:"base_cost,omitempty"`
	// Base discount amount.
	BaseDiscountAmount *float32 `json:"base_discount_amount,omitempty"`
	// Base discount invoiced.
	BaseDiscountInvoiced *float32 `json:"base_discount_invoiced,omitempty"`
	// Base discount refunded.
	BaseDiscountRefunded *float32 `json:"base_discount_refunded,omitempty"`
	// Base discount tax compensation amount.
	BaseDiscountTaxCompensationAmount *float32 `json:"base_discount_tax_compensation_amount,omitempty"`
	// Base discount tax compensation invoiced.
	BaseDiscountTaxCompensationInvoiced *float32 `json:"base_discount_tax_compensation_invoiced,omitempty"`
	// Base discount tax compensation refunded.
	BaseDiscountTaxCompensationRefunded *float32 `json:"base_discount_tax_compensation_refunded,omitempty"`
	// Base original price.
	BaseOriginalPrice *float32 `json:"base_original_price,omitempty"`
	// Base price.
	BasePrice *float32 `json:"base_price,omitempty"`
	// Base price including tax.
	BasePriceInclTax *float32 `json:"base_price_incl_tax,omitempty"`
	// Base row invoiced.
	BaseRowInvoiced *float32 `json:"base_row_invoiced,omitempty"`
	// Base row total.
	BaseRowTotal *float32 `json:"base_row_total,omitempty"`
	// Base row total including tax.
	BaseRowTotalInclTax *float32 `json:"base_row_total_incl_tax,omitempty"`
	// Base tax amount.
	BaseTaxAmount *float32 `json:"base_tax_amount,omitempty"`
	// Base tax before discount.
	BaseTaxBeforeDiscount *float32 `json:"base_tax_before_discount,omitempty"`
	// Base tax invoiced.
	BaseTaxInvoiced *float32 `json:"base_tax_invoiced,omitempty"`
	// Base tax refunded.
	BaseTaxRefunded *float32 `json:"base_tax_refunded,omitempty"`
	// Base WEEE tax applied amount.
	BaseWeeeTaxAppliedAmount *float32 `json:"base_weee_tax_applied_amount,omitempty"`
	// Base WEEE tax applied row amount.
	BaseWeeeTaxAppliedRowAmnt *float32 `json:"base_weee_tax_applied_row_amnt,omitempty"`
	// Base WEEE tax disposition.
	BaseWeeeTaxDisposition *float32 `json:"base_weee_tax_disposition,omitempty"`
	// Base WEEE tax row disposition.
	BaseWeeeTaxRowDisposition *float32 `json:"base_weee_tax_row_disposition,omitempty"`
	// Created-at timestamp.
	CreatedAt *string `json:"created_at,omitempty"`
	// Description.
	Description *string `json:"description,omitempty"`
	// Discount amount.
	DiscountAmount *float32 `json:"discount_amount,omitempty"`
	// Discount invoiced.
	DiscountInvoiced *float32 `json:"discount_invoiced,omitempty"`
	// Discount percent.
	DiscountPercent *float32 `json:"discount_percent,omitempty"`
	// Discount refunded.
	DiscountRefunded *float32 `json:"discount_refunded,omitempty"`
	// Event ID.
	EventId *int32 `json:"event_id,omitempty"`
	// External order item ID.
	ExtOrderItemId *string `json:"ext_order_item_id,omitempty"`
	// Free-shipping flag value.
	FreeShipping *int32 `json:"free_shipping,omitempty"`
	// GW base price.
	GwBasePrice *float32 `json:"gw_base_price,omitempty"`
	// GW base price invoiced.
	GwBasePriceInvoiced *float32 `json:"gw_base_price_invoiced,omitempty"`
	// GW base price refunded.
	GwBasePriceRefunded *float32 `json:"gw_base_price_refunded,omitempty"`
	// GW base tax amount.
	GwBaseTaxAmount *float32 `json:"gw_base_tax_amount,omitempty"`
	// GW base tax amount invoiced.
	GwBaseTaxAmountInvoiced *float32 `json:"gw_base_tax_amount_invoiced,omitempty"`
	// GW base tax amount refunded.
	GwBaseTaxAmountRefunded *float32 `json:"gw_base_tax_amount_refunded,omitempty"`
	// GW ID.
	GwId *int32 `json:"gw_id,omitempty"`
	// GW price.
	GwPrice *float32 `json:"gw_price,omitempty"`
	// GW price invoiced.
	GwPriceInvoiced *float32 `json:"gw_price_invoiced,omitempty"`
	// GW price refunded.
	GwPriceRefunded *float32 `json:"gw_price_refunded,omitempty"`
	// GW tax amount.
	GwTaxAmount *float32 `json:"gw_tax_amount,omitempty"`
	// GW tax amount invoiced.
	GwTaxAmountInvoiced *float32 `json:"gw_tax_amount_invoiced,omitempty"`
	// GW tax amount refunded.
	GwTaxAmountRefunded *float32 `json:"gw_tax_amount_refunded,omitempty"`
	// Discount tax compensation amount.
	DiscountTaxCompensationAmount *float32 `json:"discount_tax_compensation_amount,omitempty"`
	// Discount tax compensation canceled.
	DiscountTaxCompensationCanceled *float32 `json:"discount_tax_compensation_canceled,omitempty"`
	// Discount tax compensation invoiced.
	DiscountTaxCompensationInvoiced *float32 `json:"discount_tax_compensation_invoiced,omitempty"`
	// Discount tax compensation refunded.
	DiscountTaxCompensationRefunded *float32 `json:"discount_tax_compensation_refunded,omitempty"`
	// Is-quantity-decimal flag value.
	IsQtyDecimal *int32 `json:"is_qty_decimal,omitempty"`
	// Is-virtual flag value.
	IsVirtual *int32 `json:"is_virtual,omitempty"`
	// Item ID.
	ItemId *int32 `json:"item_id,omitempty"`
	// Locked DO invoice flag value.
	LockedDoInvoice *int32 `json:"locked_do_invoice,omitempty"`
	// Locked DO ship flag value.
	LockedDoShip *int32 `json:"locked_do_ship,omitempty"`
	// Name.
	Name *string `json:"name,omitempty"`
	// No-discount flag value.
	NoDiscount *int32 `json:"no_discount,omitempty"`
	// Order ID.
	OrderId *int32 `json:"order_id,omitempty"`
	// Original price.
	OriginalPrice *float32 `json:"original_price,omitempty"`
	// Parent item ID.
	ParentItemId *int32 `json:"parent_item_id,omitempty"`
	// Price.
	Price *float32 `json:"price,omitempty"`
	// Price including tax.
	PriceInclTax *float32 `json:"price_incl_tax,omitempty"`
	// Product ID.
	ProductId *int32 `json:"product_id,omitempty"`
	// Product type.
	ProductType *string `json:"product_type,omitempty"`
	// Quantity backordered.
	QtyBackordered *float32 `json:"qty_backordered,omitempty"`
	// Quantity canceled.
	QtyCanceled *float32 `json:"qty_canceled,omitempty"`
	// Quantity invoiced.
	QtyInvoiced *float32 `json:"qty_invoiced,omitempty"`
	// Quantity ordered.
	QtyOrdered *float32 `json:"qty_ordered,omitempty"`
	// Quantity refunded.
	QtyRefunded *float32 `json:"qty_refunded,omitempty"`
	// Quantity returned.
	QtyReturned *float32 `json:"qty_returned,omitempty"`
	// Quantity shipped.
	QtyShipped *float32 `json:"qty_shipped,omitempty"`
	// Quote item ID.
	QuoteItemId *int32 `json:"quote_item_id,omitempty"`
	// Row invoiced.
	RowInvoiced *float32 `json:"row_invoiced,omitempty"`
	// Row total.
	RowTotal *float32 `json:"row_total,omitempty"`
	// Row total including tax.
	RowTotalInclTax *float32 `json:"row_total_incl_tax,omitempty"`
	// Row weight.
	RowWeight *float32 `json:"row_weight,omitempty"`
	// SKU.
	Sku string `json:"sku"`
	// Store ID.
	StoreId *int32 `json:"store_id,omitempty"`
	// Tax amount.
	TaxAmount *float32 `json:"tax_amount,omitempty"`
	// Tax before discount.
	TaxBeforeDiscount *float32 `json:"tax_before_discount,omitempty"`
	// Tax canceled.
	TaxCanceled *float32 `json:"tax_canceled,omitempty"`
	// Tax invoiced.
	TaxInvoiced *float32 `json:"tax_invoiced,omitempty"`
	// Tax percent.
	TaxPercent *float32 `json:"tax_percent,omitempty"`
	// Tax refunded.
	TaxRefunded *float32 `json:"tax_refunded,omitempty"`
	// Updated-at timestamp.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// WEEE tax applied.
	WeeeTaxApplied *string `json:"weee_tax_applied,omitempty"`
	// WEEE tax applied amount.
	WeeeTaxAppliedAmount *float32 `json:"weee_tax_applied_amount,omitempty"`
	// WEEE tax applied row amount.
	WeeeTaxAppliedRowAmount *float32 `json:"weee_tax_applied_row_amount,omitempty"`
	// WEEE tax disposition.
	WeeeTaxDisposition *float32 `json:"weee_tax_disposition,omitempty"`
	// WEEE tax row disposition.
	WeeeTaxRowDisposition *float32 `json:"weee_tax_row_disposition,omitempty"`
	// Weight.
	Weight               *float32                              `json:"weight,omitempty"`
	ParentItem           *SalesDataOrderItemInterface          `json:"parent_item,omitempty"`
	ProductOption        *CatalogDataProductOptionInterface    `json:"product_option,omitempty"`
	ExtensionAttributes  *SalesDataOrderItemExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataOrderItemInterface SalesDataOrderItemInterface

// NewSalesDataOrderItemInterface instantiates a new SalesDataOrderItemInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataOrderItemInterface(sku string) *SalesDataOrderItemInterface {
	this := SalesDataOrderItemInterface{}
	this.Sku = sku
	return &this
}

// NewSalesDataOrderItemInterfaceWithDefaults instantiates a new SalesDataOrderItemInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataOrderItemInterfaceWithDefaults() *SalesDataOrderItemInterface {
	this := SalesDataOrderItemInterface{}
	return &this
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetAdditionalData() string {
	if o == nil || IsNil(o.AdditionalData) {
		var ret string
		return ret
	}
	return *o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetAdditionalDataOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalData) {
		return nil, false
	}
	return o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasAdditionalData() bool {
	if o != nil && !IsNil(o.AdditionalData) {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given string and assigns it to the AdditionalData field.
func (o *SalesDataOrderItemInterface) SetAdditionalData(v string) {
	o.AdditionalData = &v
}

// GetAmountRefunded returns the AmountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetAmountRefunded() float32 {
	if o == nil || IsNil(o.AmountRefunded) {
		var ret float32
		return ret
	}
	return *o.AmountRefunded
}

// GetAmountRefundedOk returns a tuple with the AmountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetAmountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.AmountRefunded) {
		return nil, false
	}
	return o.AmountRefunded, true
}

// HasAmountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasAmountRefunded() bool {
	if o != nil && !IsNil(o.AmountRefunded) {
		return true
	}

	return false
}

// SetAmountRefunded gets a reference to the given float32 and assigns it to the AmountRefunded field.
func (o *SalesDataOrderItemInterface) SetAmountRefunded(v float32) {
	o.AmountRefunded = &v
}

// GetAppliedRuleIds returns the AppliedRuleIds field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetAppliedRuleIds() string {
	if o == nil || IsNil(o.AppliedRuleIds) {
		var ret string
		return ret
	}
	return *o.AppliedRuleIds
}

// GetAppliedRuleIdsOk returns a tuple with the AppliedRuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetAppliedRuleIdsOk() (*string, bool) {
	if o == nil || IsNil(o.AppliedRuleIds) {
		return nil, false
	}
	return o.AppliedRuleIds, true
}

// HasAppliedRuleIds returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasAppliedRuleIds() bool {
	if o != nil && !IsNil(o.AppliedRuleIds) {
		return true
	}

	return false
}

// SetAppliedRuleIds gets a reference to the given string and assigns it to the AppliedRuleIds field.
func (o *SalesDataOrderItemInterface) SetAppliedRuleIds(v string) {
	o.AppliedRuleIds = &v
}

// GetBaseAmountRefunded returns the BaseAmountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseAmountRefunded() float32 {
	if o == nil || IsNil(o.BaseAmountRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseAmountRefunded
}

// GetBaseAmountRefundedOk returns a tuple with the BaseAmountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseAmountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAmountRefunded) {
		return nil, false
	}
	return o.BaseAmountRefunded, true
}

// HasBaseAmountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseAmountRefunded() bool {
	if o != nil && !IsNil(o.BaseAmountRefunded) {
		return true
	}

	return false
}

// SetBaseAmountRefunded gets a reference to the given float32 and assigns it to the BaseAmountRefunded field.
func (o *SalesDataOrderItemInterface) SetBaseAmountRefunded(v float32) {
	o.BaseAmountRefunded = &v
}

// GetBaseCost returns the BaseCost field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseCost() float32 {
	if o == nil || IsNil(o.BaseCost) {
		var ret float32
		return ret
	}
	return *o.BaseCost
}

// GetBaseCostOk returns a tuple with the BaseCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseCostOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseCost) {
		return nil, false
	}
	return o.BaseCost, true
}

// HasBaseCost returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseCost() bool {
	if o != nil && !IsNil(o.BaseCost) {
		return true
	}

	return false
}

// SetBaseCost gets a reference to the given float32 and assigns it to the BaseCost field.
func (o *SalesDataOrderItemInterface) SetBaseCost(v float32) {
	o.BaseCost = &v
}

// GetBaseDiscountAmount returns the BaseDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseDiscountAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountAmount
}

// GetBaseDiscountAmountOk returns a tuple with the BaseDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		return nil, false
	}
	return o.BaseDiscountAmount, true
}

// HasBaseDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseDiscountAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountAmount) {
		return true
	}

	return false
}

// SetBaseDiscountAmount gets a reference to the given float32 and assigns it to the BaseDiscountAmount field.
func (o *SalesDataOrderItemInterface) SetBaseDiscountAmount(v float32) {
	o.BaseDiscountAmount = &v
}

// GetBaseDiscountInvoiced returns the BaseDiscountInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseDiscountInvoiced() float32 {
	if o == nil || IsNil(o.BaseDiscountInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountInvoiced
}

// GetBaseDiscountInvoicedOk returns a tuple with the BaseDiscountInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseDiscountInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountInvoiced) {
		return nil, false
	}
	return o.BaseDiscountInvoiced, true
}

// HasBaseDiscountInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseDiscountInvoiced() bool {
	if o != nil && !IsNil(o.BaseDiscountInvoiced) {
		return true
	}

	return false
}

// SetBaseDiscountInvoiced gets a reference to the given float32 and assigns it to the BaseDiscountInvoiced field.
func (o *SalesDataOrderItemInterface) SetBaseDiscountInvoiced(v float32) {
	o.BaseDiscountInvoiced = &v
}

// GetBaseDiscountRefunded returns the BaseDiscountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseDiscountRefunded() float32 {
	if o == nil || IsNil(o.BaseDiscountRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountRefunded
}

// GetBaseDiscountRefundedOk returns a tuple with the BaseDiscountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseDiscountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountRefunded) {
		return nil, false
	}
	return o.BaseDiscountRefunded, true
}

// HasBaseDiscountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseDiscountRefunded() bool {
	if o != nil && !IsNil(o.BaseDiscountRefunded) {
		return true
	}

	return false
}

// SetBaseDiscountRefunded gets a reference to the given float32 and assigns it to the BaseDiscountRefunded field.
func (o *SalesDataOrderItemInterface) SetBaseDiscountRefunded(v float32) {
	o.BaseDiscountRefunded = &v
}

// GetBaseDiscountTaxCompensationAmount returns the BaseDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationAmount
}

// GetBaseDiscountTaxCompensationAmountOk returns a tuple with the BaseDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationAmount, true
}

// HasBaseDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationAmount field.
func (o *SalesDataOrderItemInterface) SetBaseDiscountTaxCompensationAmount(v float32) {
	o.BaseDiscountTaxCompensationAmount = &v
}

// GetBaseDiscountTaxCompensationInvoiced returns the BaseDiscountTaxCompensationInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseDiscountTaxCompensationInvoiced() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationInvoiced
}

// GetBaseDiscountTaxCompensationInvoicedOk returns a tuple with the BaseDiscountTaxCompensationInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseDiscountTaxCompensationInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationInvoiced, true
}

// HasBaseDiscountTaxCompensationInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseDiscountTaxCompensationInvoiced() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationInvoiced gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationInvoiced field.
func (o *SalesDataOrderItemInterface) SetBaseDiscountTaxCompensationInvoiced(v float32) {
	o.BaseDiscountTaxCompensationInvoiced = &v
}

// GetBaseDiscountTaxCompensationRefunded returns the BaseDiscountTaxCompensationRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseDiscountTaxCompensationRefunded() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationRefunded
}

// GetBaseDiscountTaxCompensationRefundedOk returns a tuple with the BaseDiscountTaxCompensationRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseDiscountTaxCompensationRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationRefunded) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationRefunded, true
}

// HasBaseDiscountTaxCompensationRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseDiscountTaxCompensationRefunded() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationRefunded) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationRefunded gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationRefunded field.
func (o *SalesDataOrderItemInterface) SetBaseDiscountTaxCompensationRefunded(v float32) {
	o.BaseDiscountTaxCompensationRefunded = &v
}

// GetBaseOriginalPrice returns the BaseOriginalPrice field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseOriginalPrice() float32 {
	if o == nil || IsNil(o.BaseOriginalPrice) {
		var ret float32
		return ret
	}
	return *o.BaseOriginalPrice
}

// GetBaseOriginalPriceOk returns a tuple with the BaseOriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseOriginalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseOriginalPrice) {
		return nil, false
	}
	return o.BaseOriginalPrice, true
}

// HasBaseOriginalPrice returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseOriginalPrice() bool {
	if o != nil && !IsNil(o.BaseOriginalPrice) {
		return true
	}

	return false
}

// SetBaseOriginalPrice gets a reference to the given float32 and assigns it to the BaseOriginalPrice field.
func (o *SalesDataOrderItemInterface) SetBaseOriginalPrice(v float32) {
	o.BaseOriginalPrice = &v
}

// GetBasePrice returns the BasePrice field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBasePrice() float32 {
	if o == nil || IsNil(o.BasePrice) {
		var ret float32
		return ret
	}
	return *o.BasePrice
}

// GetBasePriceOk returns a tuple with the BasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBasePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.BasePrice) {
		return nil, false
	}
	return o.BasePrice, true
}

// HasBasePrice returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBasePrice() bool {
	if o != nil && !IsNil(o.BasePrice) {
		return true
	}

	return false
}

// SetBasePrice gets a reference to the given float32 and assigns it to the BasePrice field.
func (o *SalesDataOrderItemInterface) SetBasePrice(v float32) {
	o.BasePrice = &v
}

// GetBasePriceInclTax returns the BasePriceInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBasePriceInclTax() float32 {
	if o == nil || IsNil(o.BasePriceInclTax) {
		var ret float32
		return ret
	}
	return *o.BasePriceInclTax
}

// GetBasePriceInclTaxOk returns a tuple with the BasePriceInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBasePriceInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BasePriceInclTax) {
		return nil, false
	}
	return o.BasePriceInclTax, true
}

// HasBasePriceInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBasePriceInclTax() bool {
	if o != nil && !IsNil(o.BasePriceInclTax) {
		return true
	}

	return false
}

// SetBasePriceInclTax gets a reference to the given float32 and assigns it to the BasePriceInclTax field.
func (o *SalesDataOrderItemInterface) SetBasePriceInclTax(v float32) {
	o.BasePriceInclTax = &v
}

// GetBaseRowInvoiced returns the BaseRowInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseRowInvoiced() float32 {
	if o == nil || IsNil(o.BaseRowInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseRowInvoiced
}

// GetBaseRowInvoicedOk returns a tuple with the BaseRowInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseRowInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseRowInvoiced) {
		return nil, false
	}
	return o.BaseRowInvoiced, true
}

// HasBaseRowInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseRowInvoiced() bool {
	if o != nil && !IsNil(o.BaseRowInvoiced) {
		return true
	}

	return false
}

// SetBaseRowInvoiced gets a reference to the given float32 and assigns it to the BaseRowInvoiced field.
func (o *SalesDataOrderItemInterface) SetBaseRowInvoiced(v float32) {
	o.BaseRowInvoiced = &v
}

// GetBaseRowTotal returns the BaseRowTotal field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseRowTotal() float32 {
	if o == nil || IsNil(o.BaseRowTotal) {
		var ret float32
		return ret
	}
	return *o.BaseRowTotal
}

// GetBaseRowTotalOk returns a tuple with the BaseRowTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseRowTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseRowTotal) {
		return nil, false
	}
	return o.BaseRowTotal, true
}

// HasBaseRowTotal returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseRowTotal() bool {
	if o != nil && !IsNil(o.BaseRowTotal) {
		return true
	}

	return false
}

// SetBaseRowTotal gets a reference to the given float32 and assigns it to the BaseRowTotal field.
func (o *SalesDataOrderItemInterface) SetBaseRowTotal(v float32) {
	o.BaseRowTotal = &v
}

// GetBaseRowTotalInclTax returns the BaseRowTotalInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseRowTotalInclTax() float32 {
	if o == nil || IsNil(o.BaseRowTotalInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseRowTotalInclTax
}

// GetBaseRowTotalInclTaxOk returns a tuple with the BaseRowTotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseRowTotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseRowTotalInclTax) {
		return nil, false
	}
	return o.BaseRowTotalInclTax, true
}

// HasBaseRowTotalInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseRowTotalInclTax() bool {
	if o != nil && !IsNil(o.BaseRowTotalInclTax) {
		return true
	}

	return false
}

// SetBaseRowTotalInclTax gets a reference to the given float32 and assigns it to the BaseRowTotalInclTax field.
func (o *SalesDataOrderItemInterface) SetBaseRowTotalInclTax(v float32) {
	o.BaseRowTotalInclTax = &v
}

// GetBaseTaxAmount returns the BaseTaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseTaxAmount() float32 {
	if o == nil || IsNil(o.BaseTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseTaxAmount
}

// GetBaseTaxAmountOk returns a tuple with the BaseTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxAmount) {
		return nil, false
	}
	return o.BaseTaxAmount, true
}

// HasBaseTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseTaxAmount() bool {
	if o != nil && !IsNil(o.BaseTaxAmount) {
		return true
	}

	return false
}

// SetBaseTaxAmount gets a reference to the given float32 and assigns it to the BaseTaxAmount field.
func (o *SalesDataOrderItemInterface) SetBaseTaxAmount(v float32) {
	o.BaseTaxAmount = &v
}

// GetBaseTaxBeforeDiscount returns the BaseTaxBeforeDiscount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseTaxBeforeDiscount() float32 {
	if o == nil || IsNil(o.BaseTaxBeforeDiscount) {
		var ret float32
		return ret
	}
	return *o.BaseTaxBeforeDiscount
}

// GetBaseTaxBeforeDiscountOk returns a tuple with the BaseTaxBeforeDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseTaxBeforeDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxBeforeDiscount) {
		return nil, false
	}
	return o.BaseTaxBeforeDiscount, true
}

// HasBaseTaxBeforeDiscount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseTaxBeforeDiscount() bool {
	if o != nil && !IsNil(o.BaseTaxBeforeDiscount) {
		return true
	}

	return false
}

// SetBaseTaxBeforeDiscount gets a reference to the given float32 and assigns it to the BaseTaxBeforeDiscount field.
func (o *SalesDataOrderItemInterface) SetBaseTaxBeforeDiscount(v float32) {
	o.BaseTaxBeforeDiscount = &v
}

// GetBaseTaxInvoiced returns the BaseTaxInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseTaxInvoiced() float32 {
	if o == nil || IsNil(o.BaseTaxInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseTaxInvoiced
}

// GetBaseTaxInvoicedOk returns a tuple with the BaseTaxInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseTaxInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxInvoiced) {
		return nil, false
	}
	return o.BaseTaxInvoiced, true
}

// HasBaseTaxInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseTaxInvoiced() bool {
	if o != nil && !IsNil(o.BaseTaxInvoiced) {
		return true
	}

	return false
}

// SetBaseTaxInvoiced gets a reference to the given float32 and assigns it to the BaseTaxInvoiced field.
func (o *SalesDataOrderItemInterface) SetBaseTaxInvoiced(v float32) {
	o.BaseTaxInvoiced = &v
}

// GetBaseTaxRefunded returns the BaseTaxRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseTaxRefunded() float32 {
	if o == nil || IsNil(o.BaseTaxRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseTaxRefunded
}

// GetBaseTaxRefundedOk returns a tuple with the BaseTaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxRefunded) {
		return nil, false
	}
	return o.BaseTaxRefunded, true
}

// HasBaseTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseTaxRefunded() bool {
	if o != nil && !IsNil(o.BaseTaxRefunded) {
		return true
	}

	return false
}

// SetBaseTaxRefunded gets a reference to the given float32 and assigns it to the BaseTaxRefunded field.
func (o *SalesDataOrderItemInterface) SetBaseTaxRefunded(v float32) {
	o.BaseTaxRefunded = &v
}

// GetBaseWeeeTaxAppliedAmount returns the BaseWeeeTaxAppliedAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxAppliedAmount() float32 {
	if o == nil || IsNil(o.BaseWeeeTaxAppliedAmount) {
		var ret float32
		return ret
	}
	return *o.BaseWeeeTaxAppliedAmount
}

// GetBaseWeeeTaxAppliedAmountOk returns a tuple with the BaseWeeeTaxAppliedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxAppliedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseWeeeTaxAppliedAmount) {
		return nil, false
	}
	return o.BaseWeeeTaxAppliedAmount, true
}

// HasBaseWeeeTaxAppliedAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseWeeeTaxAppliedAmount() bool {
	if o != nil && !IsNil(o.BaseWeeeTaxAppliedAmount) {
		return true
	}

	return false
}

// SetBaseWeeeTaxAppliedAmount gets a reference to the given float32 and assigns it to the BaseWeeeTaxAppliedAmount field.
func (o *SalesDataOrderItemInterface) SetBaseWeeeTaxAppliedAmount(v float32) {
	o.BaseWeeeTaxAppliedAmount = &v
}

// GetBaseWeeeTaxAppliedRowAmnt returns the BaseWeeeTaxAppliedRowAmnt field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxAppliedRowAmnt() float32 {
	if o == nil || IsNil(o.BaseWeeeTaxAppliedRowAmnt) {
		var ret float32
		return ret
	}
	return *o.BaseWeeeTaxAppliedRowAmnt
}

// GetBaseWeeeTaxAppliedRowAmntOk returns a tuple with the BaseWeeeTaxAppliedRowAmnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxAppliedRowAmntOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseWeeeTaxAppliedRowAmnt) {
		return nil, false
	}
	return o.BaseWeeeTaxAppliedRowAmnt, true
}

// HasBaseWeeeTaxAppliedRowAmnt returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseWeeeTaxAppliedRowAmnt() bool {
	if o != nil && !IsNil(o.BaseWeeeTaxAppliedRowAmnt) {
		return true
	}

	return false
}

// SetBaseWeeeTaxAppliedRowAmnt gets a reference to the given float32 and assigns it to the BaseWeeeTaxAppliedRowAmnt field.
func (o *SalesDataOrderItemInterface) SetBaseWeeeTaxAppliedRowAmnt(v float32) {
	o.BaseWeeeTaxAppliedRowAmnt = &v
}

// GetBaseWeeeTaxDisposition returns the BaseWeeeTaxDisposition field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxDisposition() float32 {
	if o == nil || IsNil(o.BaseWeeeTaxDisposition) {
		var ret float32
		return ret
	}
	return *o.BaseWeeeTaxDisposition
}

// GetBaseWeeeTaxDispositionOk returns a tuple with the BaseWeeeTaxDisposition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxDispositionOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseWeeeTaxDisposition) {
		return nil, false
	}
	return o.BaseWeeeTaxDisposition, true
}

// HasBaseWeeeTaxDisposition returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseWeeeTaxDisposition() bool {
	if o != nil && !IsNil(o.BaseWeeeTaxDisposition) {
		return true
	}

	return false
}

// SetBaseWeeeTaxDisposition gets a reference to the given float32 and assigns it to the BaseWeeeTaxDisposition field.
func (o *SalesDataOrderItemInterface) SetBaseWeeeTaxDisposition(v float32) {
	o.BaseWeeeTaxDisposition = &v
}

// GetBaseWeeeTaxRowDisposition returns the BaseWeeeTaxRowDisposition field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxRowDisposition() float32 {
	if o == nil || IsNil(o.BaseWeeeTaxRowDisposition) {
		var ret float32
		return ret
	}
	return *o.BaseWeeeTaxRowDisposition
}

// GetBaseWeeeTaxRowDispositionOk returns a tuple with the BaseWeeeTaxRowDisposition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetBaseWeeeTaxRowDispositionOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseWeeeTaxRowDisposition) {
		return nil, false
	}
	return o.BaseWeeeTaxRowDisposition, true
}

// HasBaseWeeeTaxRowDisposition returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasBaseWeeeTaxRowDisposition() bool {
	if o != nil && !IsNil(o.BaseWeeeTaxRowDisposition) {
		return true
	}

	return false
}

// SetBaseWeeeTaxRowDisposition gets a reference to the given float32 and assigns it to the BaseWeeeTaxRowDisposition field.
func (o *SalesDataOrderItemInterface) SetBaseWeeeTaxRowDisposition(v float32) {
	o.BaseWeeeTaxRowDisposition = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SalesDataOrderItemInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SalesDataOrderItemInterface) SetDescription(v string) {
	o.Description = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *SalesDataOrderItemInterface) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetDiscountInvoiced returns the DiscountInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountInvoiced() float32 {
	if o == nil || IsNil(o.DiscountInvoiced) {
		var ret float32
		return ret
	}
	return *o.DiscountInvoiced
}

// GetDiscountInvoicedOk returns a tuple with the DiscountInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountInvoiced) {
		return nil, false
	}
	return o.DiscountInvoiced, true
}

// HasDiscountInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountInvoiced() bool {
	if o != nil && !IsNil(o.DiscountInvoiced) {
		return true
	}

	return false
}

// SetDiscountInvoiced gets a reference to the given float32 and assigns it to the DiscountInvoiced field.
func (o *SalesDataOrderItemInterface) SetDiscountInvoiced(v float32) {
	o.DiscountInvoiced = &v
}

// GetDiscountPercent returns the DiscountPercent field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountPercent() float32 {
	if o == nil || IsNil(o.DiscountPercent) {
		var ret float32
		return ret
	}
	return *o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountPercent) {
		return nil, false
	}
	return o.DiscountPercent, true
}

// HasDiscountPercent returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountPercent() bool {
	if o != nil && !IsNil(o.DiscountPercent) {
		return true
	}

	return false
}

// SetDiscountPercent gets a reference to the given float32 and assigns it to the DiscountPercent field.
func (o *SalesDataOrderItemInterface) SetDiscountPercent(v float32) {
	o.DiscountPercent = &v
}

// GetDiscountRefunded returns the DiscountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountRefunded() float32 {
	if o == nil || IsNil(o.DiscountRefunded) {
		var ret float32
		return ret
	}
	return *o.DiscountRefunded
}

// GetDiscountRefundedOk returns a tuple with the DiscountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountRefunded) {
		return nil, false
	}
	return o.DiscountRefunded, true
}

// HasDiscountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountRefunded() bool {
	if o != nil && !IsNil(o.DiscountRefunded) {
		return true
	}

	return false
}

// SetDiscountRefunded gets a reference to the given float32 and assigns it to the DiscountRefunded field.
func (o *SalesDataOrderItemInterface) SetDiscountRefunded(v float32) {
	o.DiscountRefunded = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetEventId() int32 {
	if o == nil || IsNil(o.EventId) {
		var ret int32
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetEventIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given int32 and assigns it to the EventId field.
func (o *SalesDataOrderItemInterface) SetEventId(v int32) {
	o.EventId = &v
}

// GetExtOrderItemId returns the ExtOrderItemId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetExtOrderItemId() string {
	if o == nil || IsNil(o.ExtOrderItemId) {
		var ret string
		return ret
	}
	return *o.ExtOrderItemId
}

// GetExtOrderItemIdOk returns a tuple with the ExtOrderItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetExtOrderItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExtOrderItemId) {
		return nil, false
	}
	return o.ExtOrderItemId, true
}

// HasExtOrderItemId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasExtOrderItemId() bool {
	if o != nil && !IsNil(o.ExtOrderItemId) {
		return true
	}

	return false
}

// SetExtOrderItemId gets a reference to the given string and assigns it to the ExtOrderItemId field.
func (o *SalesDataOrderItemInterface) SetExtOrderItemId(v string) {
	o.ExtOrderItemId = &v
}

// GetFreeShipping returns the FreeShipping field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetFreeShipping() int32 {
	if o == nil || IsNil(o.FreeShipping) {
		var ret int32
		return ret
	}
	return *o.FreeShipping
}

// GetFreeShippingOk returns a tuple with the FreeShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetFreeShippingOk() (*int32, bool) {
	if o == nil || IsNil(o.FreeShipping) {
		return nil, false
	}
	return o.FreeShipping, true
}

// HasFreeShipping returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasFreeShipping() bool {
	if o != nil && !IsNil(o.FreeShipping) {
		return true
	}

	return false
}

// SetFreeShipping gets a reference to the given int32 and assigns it to the FreeShipping field.
func (o *SalesDataOrderItemInterface) SetFreeShipping(v int32) {
	o.FreeShipping = &v
}

// GetGwBasePrice returns the GwBasePrice field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwBasePrice() float32 {
	if o == nil || IsNil(o.GwBasePrice) {
		var ret float32
		return ret
	}
	return *o.GwBasePrice
}

// GetGwBasePriceOk returns a tuple with the GwBasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwBasePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.GwBasePrice) {
		return nil, false
	}
	return o.GwBasePrice, true
}

// HasGwBasePrice returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwBasePrice() bool {
	if o != nil && !IsNil(o.GwBasePrice) {
		return true
	}

	return false
}

// SetGwBasePrice gets a reference to the given float32 and assigns it to the GwBasePrice field.
func (o *SalesDataOrderItemInterface) SetGwBasePrice(v float32) {
	o.GwBasePrice = &v
}

// GetGwBasePriceInvoiced returns the GwBasePriceInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwBasePriceInvoiced() float32 {
	if o == nil || IsNil(o.GwBasePriceInvoiced) {
		var ret float32
		return ret
	}
	return *o.GwBasePriceInvoiced
}

// GetGwBasePriceInvoicedOk returns a tuple with the GwBasePriceInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwBasePriceInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwBasePriceInvoiced) {
		return nil, false
	}
	return o.GwBasePriceInvoiced, true
}

// HasGwBasePriceInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwBasePriceInvoiced() bool {
	if o != nil && !IsNil(o.GwBasePriceInvoiced) {
		return true
	}

	return false
}

// SetGwBasePriceInvoiced gets a reference to the given float32 and assigns it to the GwBasePriceInvoiced field.
func (o *SalesDataOrderItemInterface) SetGwBasePriceInvoiced(v float32) {
	o.GwBasePriceInvoiced = &v
}

// GetGwBasePriceRefunded returns the GwBasePriceRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwBasePriceRefunded() float32 {
	if o == nil || IsNil(o.GwBasePriceRefunded) {
		var ret float32
		return ret
	}
	return *o.GwBasePriceRefunded
}

// GetGwBasePriceRefundedOk returns a tuple with the GwBasePriceRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwBasePriceRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwBasePriceRefunded) {
		return nil, false
	}
	return o.GwBasePriceRefunded, true
}

// HasGwBasePriceRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwBasePriceRefunded() bool {
	if o != nil && !IsNil(o.GwBasePriceRefunded) {
		return true
	}

	return false
}

// SetGwBasePriceRefunded gets a reference to the given float32 and assigns it to the GwBasePriceRefunded field.
func (o *SalesDataOrderItemInterface) SetGwBasePriceRefunded(v float32) {
	o.GwBasePriceRefunded = &v
}

// GetGwBaseTaxAmount returns the GwBaseTaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwBaseTaxAmount() float32 {
	if o == nil || IsNil(o.GwBaseTaxAmount) {
		var ret float32
		return ret
	}
	return *o.GwBaseTaxAmount
}

// GetGwBaseTaxAmountOk returns a tuple with the GwBaseTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwBaseTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.GwBaseTaxAmount) {
		return nil, false
	}
	return o.GwBaseTaxAmount, true
}

// HasGwBaseTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwBaseTaxAmount() bool {
	if o != nil && !IsNil(o.GwBaseTaxAmount) {
		return true
	}

	return false
}

// SetGwBaseTaxAmount gets a reference to the given float32 and assigns it to the GwBaseTaxAmount field.
func (o *SalesDataOrderItemInterface) SetGwBaseTaxAmount(v float32) {
	o.GwBaseTaxAmount = &v
}

// GetGwBaseTaxAmountInvoiced returns the GwBaseTaxAmountInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwBaseTaxAmountInvoiced() float32 {
	if o == nil || IsNil(o.GwBaseTaxAmountInvoiced) {
		var ret float32
		return ret
	}
	return *o.GwBaseTaxAmountInvoiced
}

// GetGwBaseTaxAmountInvoicedOk returns a tuple with the GwBaseTaxAmountInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwBaseTaxAmountInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwBaseTaxAmountInvoiced) {
		return nil, false
	}
	return o.GwBaseTaxAmountInvoiced, true
}

// HasGwBaseTaxAmountInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwBaseTaxAmountInvoiced() bool {
	if o != nil && !IsNil(o.GwBaseTaxAmountInvoiced) {
		return true
	}

	return false
}

// SetGwBaseTaxAmountInvoiced gets a reference to the given float32 and assigns it to the GwBaseTaxAmountInvoiced field.
func (o *SalesDataOrderItemInterface) SetGwBaseTaxAmountInvoiced(v float32) {
	o.GwBaseTaxAmountInvoiced = &v
}

// GetGwBaseTaxAmountRefunded returns the GwBaseTaxAmountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwBaseTaxAmountRefunded() float32 {
	if o == nil || IsNil(o.GwBaseTaxAmountRefunded) {
		var ret float32
		return ret
	}
	return *o.GwBaseTaxAmountRefunded
}

// GetGwBaseTaxAmountRefundedOk returns a tuple with the GwBaseTaxAmountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwBaseTaxAmountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwBaseTaxAmountRefunded) {
		return nil, false
	}
	return o.GwBaseTaxAmountRefunded, true
}

// HasGwBaseTaxAmountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwBaseTaxAmountRefunded() bool {
	if o != nil && !IsNil(o.GwBaseTaxAmountRefunded) {
		return true
	}

	return false
}

// SetGwBaseTaxAmountRefunded gets a reference to the given float32 and assigns it to the GwBaseTaxAmountRefunded field.
func (o *SalesDataOrderItemInterface) SetGwBaseTaxAmountRefunded(v float32) {
	o.GwBaseTaxAmountRefunded = &v
}

// GetGwId returns the GwId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwId() int32 {
	if o == nil || IsNil(o.GwId) {
		var ret int32
		return ret
	}
	return *o.GwId
}

// GetGwIdOk returns a tuple with the GwId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GwId) {
		return nil, false
	}
	return o.GwId, true
}

// HasGwId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwId() bool {
	if o != nil && !IsNil(o.GwId) {
		return true
	}

	return false
}

// SetGwId gets a reference to the given int32 and assigns it to the GwId field.
func (o *SalesDataOrderItemInterface) SetGwId(v int32) {
	o.GwId = &v
}

// GetGwPrice returns the GwPrice field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwPrice() float32 {
	if o == nil || IsNil(o.GwPrice) {
		var ret float32
		return ret
	}
	return *o.GwPrice
}

// GetGwPriceOk returns a tuple with the GwPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.GwPrice) {
		return nil, false
	}
	return o.GwPrice, true
}

// HasGwPrice returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwPrice() bool {
	if o != nil && !IsNil(o.GwPrice) {
		return true
	}

	return false
}

// SetGwPrice gets a reference to the given float32 and assigns it to the GwPrice field.
func (o *SalesDataOrderItemInterface) SetGwPrice(v float32) {
	o.GwPrice = &v
}

// GetGwPriceInvoiced returns the GwPriceInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwPriceInvoiced() float32 {
	if o == nil || IsNil(o.GwPriceInvoiced) {
		var ret float32
		return ret
	}
	return *o.GwPriceInvoiced
}

// GetGwPriceInvoicedOk returns a tuple with the GwPriceInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwPriceInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwPriceInvoiced) {
		return nil, false
	}
	return o.GwPriceInvoiced, true
}

// HasGwPriceInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwPriceInvoiced() bool {
	if o != nil && !IsNil(o.GwPriceInvoiced) {
		return true
	}

	return false
}

// SetGwPriceInvoiced gets a reference to the given float32 and assigns it to the GwPriceInvoiced field.
func (o *SalesDataOrderItemInterface) SetGwPriceInvoiced(v float32) {
	o.GwPriceInvoiced = &v
}

// GetGwPriceRefunded returns the GwPriceRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwPriceRefunded() float32 {
	if o == nil || IsNil(o.GwPriceRefunded) {
		var ret float32
		return ret
	}
	return *o.GwPriceRefunded
}

// GetGwPriceRefundedOk returns a tuple with the GwPriceRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwPriceRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwPriceRefunded) {
		return nil, false
	}
	return o.GwPriceRefunded, true
}

// HasGwPriceRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwPriceRefunded() bool {
	if o != nil && !IsNil(o.GwPriceRefunded) {
		return true
	}

	return false
}

// SetGwPriceRefunded gets a reference to the given float32 and assigns it to the GwPriceRefunded field.
func (o *SalesDataOrderItemInterface) SetGwPriceRefunded(v float32) {
	o.GwPriceRefunded = &v
}

// GetGwTaxAmount returns the GwTaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwTaxAmount() float32 {
	if o == nil || IsNil(o.GwTaxAmount) {
		var ret float32
		return ret
	}
	return *o.GwTaxAmount
}

// GetGwTaxAmountOk returns a tuple with the GwTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.GwTaxAmount) {
		return nil, false
	}
	return o.GwTaxAmount, true
}

// HasGwTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwTaxAmount() bool {
	if o != nil && !IsNil(o.GwTaxAmount) {
		return true
	}

	return false
}

// SetGwTaxAmount gets a reference to the given float32 and assigns it to the GwTaxAmount field.
func (o *SalesDataOrderItemInterface) SetGwTaxAmount(v float32) {
	o.GwTaxAmount = &v
}

// GetGwTaxAmountInvoiced returns the GwTaxAmountInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwTaxAmountInvoiced() float32 {
	if o == nil || IsNil(o.GwTaxAmountInvoiced) {
		var ret float32
		return ret
	}
	return *o.GwTaxAmountInvoiced
}

// GetGwTaxAmountInvoicedOk returns a tuple with the GwTaxAmountInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwTaxAmountInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwTaxAmountInvoiced) {
		return nil, false
	}
	return o.GwTaxAmountInvoiced, true
}

// HasGwTaxAmountInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwTaxAmountInvoiced() bool {
	if o != nil && !IsNil(o.GwTaxAmountInvoiced) {
		return true
	}

	return false
}

// SetGwTaxAmountInvoiced gets a reference to the given float32 and assigns it to the GwTaxAmountInvoiced field.
func (o *SalesDataOrderItemInterface) SetGwTaxAmountInvoiced(v float32) {
	o.GwTaxAmountInvoiced = &v
}

// GetGwTaxAmountRefunded returns the GwTaxAmountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetGwTaxAmountRefunded() float32 {
	if o == nil || IsNil(o.GwTaxAmountRefunded) {
		var ret float32
		return ret
	}
	return *o.GwTaxAmountRefunded
}

// GetGwTaxAmountRefundedOk returns a tuple with the GwTaxAmountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetGwTaxAmountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.GwTaxAmountRefunded) {
		return nil, false
	}
	return o.GwTaxAmountRefunded, true
}

// HasGwTaxAmountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasGwTaxAmountRefunded() bool {
	if o != nil && !IsNil(o.GwTaxAmountRefunded) {
		return true
	}

	return false
}

// SetGwTaxAmountRefunded gets a reference to the given float32 and assigns it to the GwTaxAmountRefunded field.
func (o *SalesDataOrderItemInterface) SetGwTaxAmountRefunded(v float32) {
	o.GwTaxAmountRefunded = &v
}

// GetDiscountTaxCompensationAmount returns the DiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationAmount
}

// GetDiscountTaxCompensationAmountOk returns a tuple with the DiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.DiscountTaxCompensationAmount, true
}

// HasDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the DiscountTaxCompensationAmount field.
func (o *SalesDataOrderItemInterface) SetDiscountTaxCompensationAmount(v float32) {
	o.DiscountTaxCompensationAmount = &v
}

// GetDiscountTaxCompensationCanceled returns the DiscountTaxCompensationCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationCanceled() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationCanceled) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationCanceled
}

// GetDiscountTaxCompensationCanceledOk returns a tuple with the DiscountTaxCompensationCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationCanceled) {
		return nil, false
	}
	return o.DiscountTaxCompensationCanceled, true
}

// HasDiscountTaxCompensationCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountTaxCompensationCanceled() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationCanceled) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationCanceled gets a reference to the given float32 and assigns it to the DiscountTaxCompensationCanceled field.
func (o *SalesDataOrderItemInterface) SetDiscountTaxCompensationCanceled(v float32) {
	o.DiscountTaxCompensationCanceled = &v
}

// GetDiscountTaxCompensationInvoiced returns the DiscountTaxCompensationInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationInvoiced() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationInvoiced) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationInvoiced
}

// GetDiscountTaxCompensationInvoicedOk returns a tuple with the DiscountTaxCompensationInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationInvoiced) {
		return nil, false
	}
	return o.DiscountTaxCompensationInvoiced, true
}

// HasDiscountTaxCompensationInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountTaxCompensationInvoiced() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationInvoiced) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationInvoiced gets a reference to the given float32 and assigns it to the DiscountTaxCompensationInvoiced field.
func (o *SalesDataOrderItemInterface) SetDiscountTaxCompensationInvoiced(v float32) {
	o.DiscountTaxCompensationInvoiced = &v
}

// GetDiscountTaxCompensationRefunded returns the DiscountTaxCompensationRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationRefunded() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationRefunded) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationRefunded
}

// GetDiscountTaxCompensationRefundedOk returns a tuple with the DiscountTaxCompensationRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetDiscountTaxCompensationRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationRefunded) {
		return nil, false
	}
	return o.DiscountTaxCompensationRefunded, true
}

// HasDiscountTaxCompensationRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasDiscountTaxCompensationRefunded() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationRefunded) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationRefunded gets a reference to the given float32 and assigns it to the DiscountTaxCompensationRefunded field.
func (o *SalesDataOrderItemInterface) SetDiscountTaxCompensationRefunded(v float32) {
	o.DiscountTaxCompensationRefunded = &v
}

// GetIsQtyDecimal returns the IsQtyDecimal field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetIsQtyDecimal() int32 {
	if o == nil || IsNil(o.IsQtyDecimal) {
		var ret int32
		return ret
	}
	return *o.IsQtyDecimal
}

// GetIsQtyDecimalOk returns a tuple with the IsQtyDecimal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetIsQtyDecimalOk() (*int32, bool) {
	if o == nil || IsNil(o.IsQtyDecimal) {
		return nil, false
	}
	return o.IsQtyDecimal, true
}

// HasIsQtyDecimal returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasIsQtyDecimal() bool {
	if o != nil && !IsNil(o.IsQtyDecimal) {
		return true
	}

	return false
}

// SetIsQtyDecimal gets a reference to the given int32 and assigns it to the IsQtyDecimal field.
func (o *SalesDataOrderItemInterface) SetIsQtyDecimal(v int32) {
	o.IsQtyDecimal = &v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetIsVirtual() int32 {
	if o == nil || IsNil(o.IsVirtual) {
		var ret int32
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetIsVirtualOk() (*int32, bool) {
	if o == nil || IsNil(o.IsVirtual) {
		return nil, false
	}
	return o.IsVirtual, true
}

// HasIsVirtual returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasIsVirtual() bool {
	if o != nil && !IsNil(o.IsVirtual) {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given int32 and assigns it to the IsVirtual field.
func (o *SalesDataOrderItemInterface) SetIsVirtual(v int32) {
	o.IsVirtual = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetItemId() int32 {
	if o == nil || IsNil(o.ItemId) {
		var ret int32
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int32 and assigns it to the ItemId field.
func (o *SalesDataOrderItemInterface) SetItemId(v int32) {
	o.ItemId = &v
}

// GetLockedDoInvoice returns the LockedDoInvoice field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetLockedDoInvoice() int32 {
	if o == nil || IsNil(o.LockedDoInvoice) {
		var ret int32
		return ret
	}
	return *o.LockedDoInvoice
}

// GetLockedDoInvoiceOk returns a tuple with the LockedDoInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetLockedDoInvoiceOk() (*int32, bool) {
	if o == nil || IsNil(o.LockedDoInvoice) {
		return nil, false
	}
	return o.LockedDoInvoice, true
}

// HasLockedDoInvoice returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasLockedDoInvoice() bool {
	if o != nil && !IsNil(o.LockedDoInvoice) {
		return true
	}

	return false
}

// SetLockedDoInvoice gets a reference to the given int32 and assigns it to the LockedDoInvoice field.
func (o *SalesDataOrderItemInterface) SetLockedDoInvoice(v int32) {
	o.LockedDoInvoice = &v
}

// GetLockedDoShip returns the LockedDoShip field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetLockedDoShip() int32 {
	if o == nil || IsNil(o.LockedDoShip) {
		var ret int32
		return ret
	}
	return *o.LockedDoShip
}

// GetLockedDoShipOk returns a tuple with the LockedDoShip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetLockedDoShipOk() (*int32, bool) {
	if o == nil || IsNil(o.LockedDoShip) {
		return nil, false
	}
	return o.LockedDoShip, true
}

// HasLockedDoShip returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasLockedDoShip() bool {
	if o != nil && !IsNil(o.LockedDoShip) {
		return true
	}

	return false
}

// SetLockedDoShip gets a reference to the given int32 and assigns it to the LockedDoShip field.
func (o *SalesDataOrderItemInterface) SetLockedDoShip(v int32) {
	o.LockedDoShip = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SalesDataOrderItemInterface) SetName(v string) {
	o.Name = &v
}

// GetNoDiscount returns the NoDiscount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetNoDiscount() int32 {
	if o == nil || IsNil(o.NoDiscount) {
		var ret int32
		return ret
	}
	return *o.NoDiscount
}

// GetNoDiscountOk returns a tuple with the NoDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetNoDiscountOk() (*int32, bool) {
	if o == nil || IsNil(o.NoDiscount) {
		return nil, false
	}
	return o.NoDiscount, true
}

// HasNoDiscount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasNoDiscount() bool {
	if o != nil && !IsNil(o.NoDiscount) {
		return true
	}

	return false
}

// SetNoDiscount gets a reference to the given int32 and assigns it to the NoDiscount field.
func (o *SalesDataOrderItemInterface) SetNoDiscount(v int32) {
	o.NoDiscount = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetOrderId() int32 {
	if o == nil || IsNil(o.OrderId) {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *SalesDataOrderItemInterface) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetOriginalPrice returns the OriginalPrice field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetOriginalPrice() float32 {
	if o == nil || IsNil(o.OriginalPrice) {
		var ret float32
		return ret
	}
	return *o.OriginalPrice
}

// GetOriginalPriceOk returns a tuple with the OriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetOriginalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalPrice) {
		return nil, false
	}
	return o.OriginalPrice, true
}

// HasOriginalPrice returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasOriginalPrice() bool {
	if o != nil && !IsNil(o.OriginalPrice) {
		return true
	}

	return false
}

// SetOriginalPrice gets a reference to the given float32 and assigns it to the OriginalPrice field.
func (o *SalesDataOrderItemInterface) SetOriginalPrice(v float32) {
	o.OriginalPrice = &v
}

// GetParentItemId returns the ParentItemId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetParentItemId() int32 {
	if o == nil || IsNil(o.ParentItemId) {
		var ret int32
		return ret
	}
	return *o.ParentItemId
}

// GetParentItemIdOk returns a tuple with the ParentItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetParentItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ParentItemId) {
		return nil, false
	}
	return o.ParentItemId, true
}

// HasParentItemId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasParentItemId() bool {
	if o != nil && !IsNil(o.ParentItemId) {
		return true
	}

	return false
}

// SetParentItemId gets a reference to the given int32 and assigns it to the ParentItemId field.
func (o *SalesDataOrderItemInterface) SetParentItemId(v int32) {
	o.ParentItemId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *SalesDataOrderItemInterface) SetPrice(v float32) {
	o.Price = &v
}

// GetPriceInclTax returns the PriceInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetPriceInclTax() float32 {
	if o == nil || IsNil(o.PriceInclTax) {
		var ret float32
		return ret
	}
	return *o.PriceInclTax
}

// GetPriceInclTaxOk returns a tuple with the PriceInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetPriceInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.PriceInclTax) {
		return nil, false
	}
	return o.PriceInclTax, true
}

// HasPriceInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasPriceInclTax() bool {
	if o != nil && !IsNil(o.PriceInclTax) {
		return true
	}

	return false
}

// SetPriceInclTax gets a reference to the given float32 and assigns it to the PriceInclTax field.
func (o *SalesDataOrderItemInterface) SetPriceInclTax(v float32) {
	o.PriceInclTax = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetProductId() int32 {
	if o == nil || IsNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetProductIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *SalesDataOrderItemInterface) SetProductId(v int32) {
	o.ProductId = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *SalesDataOrderItemInterface) SetProductType(v string) {
	o.ProductType = &v
}

// GetQtyBackordered returns the QtyBackordered field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQtyBackordered() float32 {
	if o == nil || IsNil(o.QtyBackordered) {
		var ret float32
		return ret
	}
	return *o.QtyBackordered
}

// GetQtyBackorderedOk returns a tuple with the QtyBackordered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQtyBackorderedOk() (*float32, bool) {
	if o == nil || IsNil(o.QtyBackordered) {
		return nil, false
	}
	return o.QtyBackordered, true
}

// HasQtyBackordered returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQtyBackordered() bool {
	if o != nil && !IsNil(o.QtyBackordered) {
		return true
	}

	return false
}

// SetQtyBackordered gets a reference to the given float32 and assigns it to the QtyBackordered field.
func (o *SalesDataOrderItemInterface) SetQtyBackordered(v float32) {
	o.QtyBackordered = &v
}

// GetQtyCanceled returns the QtyCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQtyCanceled() float32 {
	if o == nil || IsNil(o.QtyCanceled) {
		var ret float32
		return ret
	}
	return *o.QtyCanceled
}

// GetQtyCanceledOk returns a tuple with the QtyCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQtyCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.QtyCanceled) {
		return nil, false
	}
	return o.QtyCanceled, true
}

// HasQtyCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQtyCanceled() bool {
	if o != nil && !IsNil(o.QtyCanceled) {
		return true
	}

	return false
}

// SetQtyCanceled gets a reference to the given float32 and assigns it to the QtyCanceled field.
func (o *SalesDataOrderItemInterface) SetQtyCanceled(v float32) {
	o.QtyCanceled = &v
}

// GetQtyInvoiced returns the QtyInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQtyInvoiced() float32 {
	if o == nil || IsNil(o.QtyInvoiced) {
		var ret float32
		return ret
	}
	return *o.QtyInvoiced
}

// GetQtyInvoicedOk returns a tuple with the QtyInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQtyInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.QtyInvoiced) {
		return nil, false
	}
	return o.QtyInvoiced, true
}

// HasQtyInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQtyInvoiced() bool {
	if o != nil && !IsNil(o.QtyInvoiced) {
		return true
	}

	return false
}

// SetQtyInvoiced gets a reference to the given float32 and assigns it to the QtyInvoiced field.
func (o *SalesDataOrderItemInterface) SetQtyInvoiced(v float32) {
	o.QtyInvoiced = &v
}

// GetQtyOrdered returns the QtyOrdered field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQtyOrdered() float32 {
	if o == nil || IsNil(o.QtyOrdered) {
		var ret float32
		return ret
	}
	return *o.QtyOrdered
}

// GetQtyOrderedOk returns a tuple with the QtyOrdered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQtyOrderedOk() (*float32, bool) {
	if o == nil || IsNil(o.QtyOrdered) {
		return nil, false
	}
	return o.QtyOrdered, true
}

// HasQtyOrdered returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQtyOrdered() bool {
	if o != nil && !IsNil(o.QtyOrdered) {
		return true
	}

	return false
}

// SetQtyOrdered gets a reference to the given float32 and assigns it to the QtyOrdered field.
func (o *SalesDataOrderItemInterface) SetQtyOrdered(v float32) {
	o.QtyOrdered = &v
}

// GetQtyRefunded returns the QtyRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQtyRefunded() float32 {
	if o == nil || IsNil(o.QtyRefunded) {
		var ret float32
		return ret
	}
	return *o.QtyRefunded
}

// GetQtyRefundedOk returns a tuple with the QtyRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQtyRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.QtyRefunded) {
		return nil, false
	}
	return o.QtyRefunded, true
}

// HasQtyRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQtyRefunded() bool {
	if o != nil && !IsNil(o.QtyRefunded) {
		return true
	}

	return false
}

// SetQtyRefunded gets a reference to the given float32 and assigns it to the QtyRefunded field.
func (o *SalesDataOrderItemInterface) SetQtyRefunded(v float32) {
	o.QtyRefunded = &v
}

// GetQtyReturned returns the QtyReturned field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQtyReturned() float32 {
	if o == nil || IsNil(o.QtyReturned) {
		var ret float32
		return ret
	}
	return *o.QtyReturned
}

// GetQtyReturnedOk returns a tuple with the QtyReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQtyReturnedOk() (*float32, bool) {
	if o == nil || IsNil(o.QtyReturned) {
		return nil, false
	}
	return o.QtyReturned, true
}

// HasQtyReturned returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQtyReturned() bool {
	if o != nil && !IsNil(o.QtyReturned) {
		return true
	}

	return false
}

// SetQtyReturned gets a reference to the given float32 and assigns it to the QtyReturned field.
func (o *SalesDataOrderItemInterface) SetQtyReturned(v float32) {
	o.QtyReturned = &v
}

// GetQtyShipped returns the QtyShipped field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQtyShipped() float32 {
	if o == nil || IsNil(o.QtyShipped) {
		var ret float32
		return ret
	}
	return *o.QtyShipped
}

// GetQtyShippedOk returns a tuple with the QtyShipped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQtyShippedOk() (*float32, bool) {
	if o == nil || IsNil(o.QtyShipped) {
		return nil, false
	}
	return o.QtyShipped, true
}

// HasQtyShipped returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQtyShipped() bool {
	if o != nil && !IsNil(o.QtyShipped) {
		return true
	}

	return false
}

// SetQtyShipped gets a reference to the given float32 and assigns it to the QtyShipped field.
func (o *SalesDataOrderItemInterface) SetQtyShipped(v float32) {
	o.QtyShipped = &v
}

// GetQuoteItemId returns the QuoteItemId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetQuoteItemId() int32 {
	if o == nil || IsNil(o.QuoteItemId) {
		var ret int32
		return ret
	}
	return *o.QuoteItemId
}

// GetQuoteItemIdOk returns a tuple with the QuoteItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetQuoteItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuoteItemId) {
		return nil, false
	}
	return o.QuoteItemId, true
}

// HasQuoteItemId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasQuoteItemId() bool {
	if o != nil && !IsNil(o.QuoteItemId) {
		return true
	}

	return false
}

// SetQuoteItemId gets a reference to the given int32 and assigns it to the QuoteItemId field.
func (o *SalesDataOrderItemInterface) SetQuoteItemId(v int32) {
	o.QuoteItemId = &v
}

// GetRowInvoiced returns the RowInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetRowInvoiced() float32 {
	if o == nil || IsNil(o.RowInvoiced) {
		var ret float32
		return ret
	}
	return *o.RowInvoiced
}

// GetRowInvoicedOk returns a tuple with the RowInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetRowInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.RowInvoiced) {
		return nil, false
	}
	return o.RowInvoiced, true
}

// HasRowInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasRowInvoiced() bool {
	if o != nil && !IsNil(o.RowInvoiced) {
		return true
	}

	return false
}

// SetRowInvoiced gets a reference to the given float32 and assigns it to the RowInvoiced field.
func (o *SalesDataOrderItemInterface) SetRowInvoiced(v float32) {
	o.RowInvoiced = &v
}

// GetRowTotal returns the RowTotal field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetRowTotal() float32 {
	if o == nil || IsNil(o.RowTotal) {
		var ret float32
		return ret
	}
	return *o.RowTotal
}

// GetRowTotalOk returns a tuple with the RowTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetRowTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.RowTotal) {
		return nil, false
	}
	return o.RowTotal, true
}

// HasRowTotal returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasRowTotal() bool {
	if o != nil && !IsNil(o.RowTotal) {
		return true
	}

	return false
}

// SetRowTotal gets a reference to the given float32 and assigns it to the RowTotal field.
func (o *SalesDataOrderItemInterface) SetRowTotal(v float32) {
	o.RowTotal = &v
}

// GetRowTotalInclTax returns the RowTotalInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetRowTotalInclTax() float32 {
	if o == nil || IsNil(o.RowTotalInclTax) {
		var ret float32
		return ret
	}
	return *o.RowTotalInclTax
}

// GetRowTotalInclTaxOk returns a tuple with the RowTotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetRowTotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.RowTotalInclTax) {
		return nil, false
	}
	return o.RowTotalInclTax, true
}

// HasRowTotalInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasRowTotalInclTax() bool {
	if o != nil && !IsNil(o.RowTotalInclTax) {
		return true
	}

	return false
}

// SetRowTotalInclTax gets a reference to the given float32 and assigns it to the RowTotalInclTax field.
func (o *SalesDataOrderItemInterface) SetRowTotalInclTax(v float32) {
	o.RowTotalInclTax = &v
}

// GetRowWeight returns the RowWeight field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetRowWeight() float32 {
	if o == nil || IsNil(o.RowWeight) {
		var ret float32
		return ret
	}
	return *o.RowWeight
}

// GetRowWeightOk returns a tuple with the RowWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetRowWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.RowWeight) {
		return nil, false
	}
	return o.RowWeight, true
}

// HasRowWeight returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasRowWeight() bool {
	if o != nil && !IsNil(o.RowWeight) {
		return true
	}

	return false
}

// SetRowWeight gets a reference to the given float32 and assigns it to the RowWeight field.
func (o *SalesDataOrderItemInterface) SetRowWeight(v float32) {
	o.RowWeight = &v
}

// GetSku returns the Sku field value
func (o *SalesDataOrderItemInterface) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *SalesDataOrderItemInterface) SetSku(v string) {
	o.Sku = v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetStoreId() int32 {
	if o == nil || IsNil(o.StoreId) {
		var ret int32
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetStoreIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given int32 and assigns it to the StoreId field.
func (o *SalesDataOrderItemInterface) SetStoreId(v int32) {
	o.StoreId = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetTaxAmount() float32 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret float32
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float32 and assigns it to the TaxAmount field.
func (o *SalesDataOrderItemInterface) SetTaxAmount(v float32) {
	o.TaxAmount = &v
}

// GetTaxBeforeDiscount returns the TaxBeforeDiscount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetTaxBeforeDiscount() float32 {
	if o == nil || IsNil(o.TaxBeforeDiscount) {
		var ret float32
		return ret
	}
	return *o.TaxBeforeDiscount
}

// GetTaxBeforeDiscountOk returns a tuple with the TaxBeforeDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetTaxBeforeDiscountOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxBeforeDiscount) {
		return nil, false
	}
	return o.TaxBeforeDiscount, true
}

// HasTaxBeforeDiscount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasTaxBeforeDiscount() bool {
	if o != nil && !IsNil(o.TaxBeforeDiscount) {
		return true
	}

	return false
}

// SetTaxBeforeDiscount gets a reference to the given float32 and assigns it to the TaxBeforeDiscount field.
func (o *SalesDataOrderItemInterface) SetTaxBeforeDiscount(v float32) {
	o.TaxBeforeDiscount = &v
}

// GetTaxCanceled returns the TaxCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetTaxCanceled() float32 {
	if o == nil || IsNil(o.TaxCanceled) {
		var ret float32
		return ret
	}
	return *o.TaxCanceled
}

// GetTaxCanceledOk returns a tuple with the TaxCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetTaxCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxCanceled) {
		return nil, false
	}
	return o.TaxCanceled, true
}

// HasTaxCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasTaxCanceled() bool {
	if o != nil && !IsNil(o.TaxCanceled) {
		return true
	}

	return false
}

// SetTaxCanceled gets a reference to the given float32 and assigns it to the TaxCanceled field.
func (o *SalesDataOrderItemInterface) SetTaxCanceled(v float32) {
	o.TaxCanceled = &v
}

// GetTaxInvoiced returns the TaxInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetTaxInvoiced() float32 {
	if o == nil || IsNil(o.TaxInvoiced) {
		var ret float32
		return ret
	}
	return *o.TaxInvoiced
}

// GetTaxInvoicedOk returns a tuple with the TaxInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetTaxInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxInvoiced) {
		return nil, false
	}
	return o.TaxInvoiced, true
}

// HasTaxInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasTaxInvoiced() bool {
	if o != nil && !IsNil(o.TaxInvoiced) {
		return true
	}

	return false
}

// SetTaxInvoiced gets a reference to the given float32 and assigns it to the TaxInvoiced field.
func (o *SalesDataOrderItemInterface) SetTaxInvoiced(v float32) {
	o.TaxInvoiced = &v
}

// GetTaxPercent returns the TaxPercent field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetTaxPercent() float32 {
	if o == nil || IsNil(o.TaxPercent) {
		var ret float32
		return ret
	}
	return *o.TaxPercent
}

// GetTaxPercentOk returns a tuple with the TaxPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetTaxPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxPercent) {
		return nil, false
	}
	return o.TaxPercent, true
}

// HasTaxPercent returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasTaxPercent() bool {
	if o != nil && !IsNil(o.TaxPercent) {
		return true
	}

	return false
}

// SetTaxPercent gets a reference to the given float32 and assigns it to the TaxPercent field.
func (o *SalesDataOrderItemInterface) SetTaxPercent(v float32) {
	o.TaxPercent = &v
}

// GetTaxRefunded returns the TaxRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetTaxRefunded() float32 {
	if o == nil || IsNil(o.TaxRefunded) {
		var ret float32
		return ret
	}
	return *o.TaxRefunded
}

// GetTaxRefundedOk returns a tuple with the TaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxRefunded) {
		return nil, false
	}
	return o.TaxRefunded, true
}

// HasTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasTaxRefunded() bool {
	if o != nil && !IsNil(o.TaxRefunded) {
		return true
	}

	return false
}

// SetTaxRefunded gets a reference to the given float32 and assigns it to the TaxRefunded field.
func (o *SalesDataOrderItemInterface) SetTaxRefunded(v float32) {
	o.TaxRefunded = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SalesDataOrderItemInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWeeeTaxApplied returns the WeeeTaxApplied field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetWeeeTaxApplied() string {
	if o == nil || IsNil(o.WeeeTaxApplied) {
		var ret string
		return ret
	}
	return *o.WeeeTaxApplied
}

// GetWeeeTaxAppliedOk returns a tuple with the WeeeTaxApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetWeeeTaxAppliedOk() (*string, bool) {
	if o == nil || IsNil(o.WeeeTaxApplied) {
		return nil, false
	}
	return o.WeeeTaxApplied, true
}

// HasWeeeTaxApplied returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasWeeeTaxApplied() bool {
	if o != nil && !IsNil(o.WeeeTaxApplied) {
		return true
	}

	return false
}

// SetWeeeTaxApplied gets a reference to the given string and assigns it to the WeeeTaxApplied field.
func (o *SalesDataOrderItemInterface) SetWeeeTaxApplied(v string) {
	o.WeeeTaxApplied = &v
}

// GetWeeeTaxAppliedAmount returns the WeeeTaxAppliedAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetWeeeTaxAppliedAmount() float32 {
	if o == nil || IsNil(o.WeeeTaxAppliedAmount) {
		var ret float32
		return ret
	}
	return *o.WeeeTaxAppliedAmount
}

// GetWeeeTaxAppliedAmountOk returns a tuple with the WeeeTaxAppliedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetWeeeTaxAppliedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.WeeeTaxAppliedAmount) {
		return nil, false
	}
	return o.WeeeTaxAppliedAmount, true
}

// HasWeeeTaxAppliedAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasWeeeTaxAppliedAmount() bool {
	if o != nil && !IsNil(o.WeeeTaxAppliedAmount) {
		return true
	}

	return false
}

// SetWeeeTaxAppliedAmount gets a reference to the given float32 and assigns it to the WeeeTaxAppliedAmount field.
func (o *SalesDataOrderItemInterface) SetWeeeTaxAppliedAmount(v float32) {
	o.WeeeTaxAppliedAmount = &v
}

// GetWeeeTaxAppliedRowAmount returns the WeeeTaxAppliedRowAmount field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetWeeeTaxAppliedRowAmount() float32 {
	if o == nil || IsNil(o.WeeeTaxAppliedRowAmount) {
		var ret float32
		return ret
	}
	return *o.WeeeTaxAppliedRowAmount
}

// GetWeeeTaxAppliedRowAmountOk returns a tuple with the WeeeTaxAppliedRowAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetWeeeTaxAppliedRowAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.WeeeTaxAppliedRowAmount) {
		return nil, false
	}
	return o.WeeeTaxAppliedRowAmount, true
}

// HasWeeeTaxAppliedRowAmount returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasWeeeTaxAppliedRowAmount() bool {
	if o != nil && !IsNil(o.WeeeTaxAppliedRowAmount) {
		return true
	}

	return false
}

// SetWeeeTaxAppliedRowAmount gets a reference to the given float32 and assigns it to the WeeeTaxAppliedRowAmount field.
func (o *SalesDataOrderItemInterface) SetWeeeTaxAppliedRowAmount(v float32) {
	o.WeeeTaxAppliedRowAmount = &v
}

// GetWeeeTaxDisposition returns the WeeeTaxDisposition field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetWeeeTaxDisposition() float32 {
	if o == nil || IsNil(o.WeeeTaxDisposition) {
		var ret float32
		return ret
	}
	return *o.WeeeTaxDisposition
}

// GetWeeeTaxDispositionOk returns a tuple with the WeeeTaxDisposition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetWeeeTaxDispositionOk() (*float32, bool) {
	if o == nil || IsNil(o.WeeeTaxDisposition) {
		return nil, false
	}
	return o.WeeeTaxDisposition, true
}

// HasWeeeTaxDisposition returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasWeeeTaxDisposition() bool {
	if o != nil && !IsNil(o.WeeeTaxDisposition) {
		return true
	}

	return false
}

// SetWeeeTaxDisposition gets a reference to the given float32 and assigns it to the WeeeTaxDisposition field.
func (o *SalesDataOrderItemInterface) SetWeeeTaxDisposition(v float32) {
	o.WeeeTaxDisposition = &v
}

// GetWeeeTaxRowDisposition returns the WeeeTaxRowDisposition field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetWeeeTaxRowDisposition() float32 {
	if o == nil || IsNil(o.WeeeTaxRowDisposition) {
		var ret float32
		return ret
	}
	return *o.WeeeTaxRowDisposition
}

// GetWeeeTaxRowDispositionOk returns a tuple with the WeeeTaxRowDisposition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetWeeeTaxRowDispositionOk() (*float32, bool) {
	if o == nil || IsNil(o.WeeeTaxRowDisposition) {
		return nil, false
	}
	return o.WeeeTaxRowDisposition, true
}

// HasWeeeTaxRowDisposition returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasWeeeTaxRowDisposition() bool {
	if o != nil && !IsNil(o.WeeeTaxRowDisposition) {
		return true
	}

	return false
}

// SetWeeeTaxRowDisposition gets a reference to the given float32 and assigns it to the WeeeTaxRowDisposition field.
func (o *SalesDataOrderItemInterface) SetWeeeTaxRowDisposition(v float32) {
	o.WeeeTaxRowDisposition = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *SalesDataOrderItemInterface) SetWeight(v float32) {
	o.Weight = &v
}

// GetParentItem returns the ParentItem field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetParentItem() SalesDataOrderItemInterface {
	if o == nil || IsNil(o.ParentItem) {
		var ret SalesDataOrderItemInterface
		return ret
	}
	return *o.ParentItem
}

// GetParentItemOk returns a tuple with the ParentItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetParentItemOk() (*SalesDataOrderItemInterface, bool) {
	if o == nil || IsNil(o.ParentItem) {
		return nil, false
	}
	return o.ParentItem, true
}

// HasParentItem returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasParentItem() bool {
	if o != nil && !IsNil(o.ParentItem) {
		return true
	}

	return false
}

// SetParentItem gets a reference to the given SalesDataOrderItemInterface and assigns it to the ParentItem field.
func (o *SalesDataOrderItemInterface) SetParentItem(v SalesDataOrderItemInterface) {
	o.ParentItem = &v
}

// GetProductOption returns the ProductOption field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetProductOption() CatalogDataProductOptionInterface {
	if o == nil || IsNil(o.ProductOption) {
		var ret CatalogDataProductOptionInterface
		return ret
	}
	return *o.ProductOption
}

// GetProductOptionOk returns a tuple with the ProductOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetProductOptionOk() (*CatalogDataProductOptionInterface, bool) {
	if o == nil || IsNil(o.ProductOption) {
		return nil, false
	}
	return o.ProductOption, true
}

// HasProductOption returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasProductOption() bool {
	if o != nil && !IsNil(o.ProductOption) {
		return true
	}

	return false
}

// SetProductOption gets a reference to the given CatalogDataProductOptionInterface and assigns it to the ProductOption field.
func (o *SalesDataOrderItemInterface) SetProductOption(v CatalogDataProductOptionInterface) {
	o.ProductOption = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataOrderItemInterface) GetExtensionAttributes() SalesDataOrderItemExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret SalesDataOrderItemExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderItemInterface) GetExtensionAttributesOk() (*SalesDataOrderItemExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataOrderItemInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given SalesDataOrderItemExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *SalesDataOrderItemInterface) SetExtensionAttributes(v SalesDataOrderItemExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o SalesDataOrderItemInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataOrderItemInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalData) {
		toSerialize["additional_data"] = o.AdditionalData
	}
	if !IsNil(o.AmountRefunded) {
		toSerialize["amount_refunded"] = o.AmountRefunded
	}
	if !IsNil(o.AppliedRuleIds) {
		toSerialize["applied_rule_ids"] = o.AppliedRuleIds
	}
	if !IsNil(o.BaseAmountRefunded) {
		toSerialize["base_amount_refunded"] = o.BaseAmountRefunded
	}
	if !IsNil(o.BaseCost) {
		toSerialize["base_cost"] = o.BaseCost
	}
	if !IsNil(o.BaseDiscountAmount) {
		toSerialize["base_discount_amount"] = o.BaseDiscountAmount
	}
	if !IsNil(o.BaseDiscountInvoiced) {
		toSerialize["base_discount_invoiced"] = o.BaseDiscountInvoiced
	}
	if !IsNil(o.BaseDiscountRefunded) {
		toSerialize["base_discount_refunded"] = o.BaseDiscountRefunded
	}
	if !IsNil(o.BaseDiscountTaxCompensationAmount) {
		toSerialize["base_discount_tax_compensation_amount"] = o.BaseDiscountTaxCompensationAmount
	}
	if !IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		toSerialize["base_discount_tax_compensation_invoiced"] = o.BaseDiscountTaxCompensationInvoiced
	}
	if !IsNil(o.BaseDiscountTaxCompensationRefunded) {
		toSerialize["base_discount_tax_compensation_refunded"] = o.BaseDiscountTaxCompensationRefunded
	}
	if !IsNil(o.BaseOriginalPrice) {
		toSerialize["base_original_price"] = o.BaseOriginalPrice
	}
	if !IsNil(o.BasePrice) {
		toSerialize["base_price"] = o.BasePrice
	}
	if !IsNil(o.BasePriceInclTax) {
		toSerialize["base_price_incl_tax"] = o.BasePriceInclTax
	}
	if !IsNil(o.BaseRowInvoiced) {
		toSerialize["base_row_invoiced"] = o.BaseRowInvoiced
	}
	if !IsNil(o.BaseRowTotal) {
		toSerialize["base_row_total"] = o.BaseRowTotal
	}
	if !IsNil(o.BaseRowTotalInclTax) {
		toSerialize["base_row_total_incl_tax"] = o.BaseRowTotalInclTax
	}
	if !IsNil(o.BaseTaxAmount) {
		toSerialize["base_tax_amount"] = o.BaseTaxAmount
	}
	if !IsNil(o.BaseTaxBeforeDiscount) {
		toSerialize["base_tax_before_discount"] = o.BaseTaxBeforeDiscount
	}
	if !IsNil(o.BaseTaxInvoiced) {
		toSerialize["base_tax_invoiced"] = o.BaseTaxInvoiced
	}
	if !IsNil(o.BaseTaxRefunded) {
		toSerialize["base_tax_refunded"] = o.BaseTaxRefunded
	}
	if !IsNil(o.BaseWeeeTaxAppliedAmount) {
		toSerialize["base_weee_tax_applied_amount"] = o.BaseWeeeTaxAppliedAmount
	}
	if !IsNil(o.BaseWeeeTaxAppliedRowAmnt) {
		toSerialize["base_weee_tax_applied_row_amnt"] = o.BaseWeeeTaxAppliedRowAmnt
	}
	if !IsNil(o.BaseWeeeTaxDisposition) {
		toSerialize["base_weee_tax_disposition"] = o.BaseWeeeTaxDisposition
	}
	if !IsNil(o.BaseWeeeTaxRowDisposition) {
		toSerialize["base_weee_tax_row_disposition"] = o.BaseWeeeTaxRowDisposition
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountInvoiced) {
		toSerialize["discount_invoiced"] = o.DiscountInvoiced
	}
	if !IsNil(o.DiscountPercent) {
		toSerialize["discount_percent"] = o.DiscountPercent
	}
	if !IsNil(o.DiscountRefunded) {
		toSerialize["discount_refunded"] = o.DiscountRefunded
	}
	if !IsNil(o.EventId) {
		toSerialize["event_id"] = o.EventId
	}
	if !IsNil(o.ExtOrderItemId) {
		toSerialize["ext_order_item_id"] = o.ExtOrderItemId
	}
	if !IsNil(o.FreeShipping) {
		toSerialize["free_shipping"] = o.FreeShipping
	}
	if !IsNil(o.GwBasePrice) {
		toSerialize["gw_base_price"] = o.GwBasePrice
	}
	if !IsNil(o.GwBasePriceInvoiced) {
		toSerialize["gw_base_price_invoiced"] = o.GwBasePriceInvoiced
	}
	if !IsNil(o.GwBasePriceRefunded) {
		toSerialize["gw_base_price_refunded"] = o.GwBasePriceRefunded
	}
	if !IsNil(o.GwBaseTaxAmount) {
		toSerialize["gw_base_tax_amount"] = o.GwBaseTaxAmount
	}
	if !IsNil(o.GwBaseTaxAmountInvoiced) {
		toSerialize["gw_base_tax_amount_invoiced"] = o.GwBaseTaxAmountInvoiced
	}
	if !IsNil(o.GwBaseTaxAmountRefunded) {
		toSerialize["gw_base_tax_amount_refunded"] = o.GwBaseTaxAmountRefunded
	}
	if !IsNil(o.GwId) {
		toSerialize["gw_id"] = o.GwId
	}
	if !IsNil(o.GwPrice) {
		toSerialize["gw_price"] = o.GwPrice
	}
	if !IsNil(o.GwPriceInvoiced) {
		toSerialize["gw_price_invoiced"] = o.GwPriceInvoiced
	}
	if !IsNil(o.GwPriceRefunded) {
		toSerialize["gw_price_refunded"] = o.GwPriceRefunded
	}
	if !IsNil(o.GwTaxAmount) {
		toSerialize["gw_tax_amount"] = o.GwTaxAmount
	}
	if !IsNil(o.GwTaxAmountInvoiced) {
		toSerialize["gw_tax_amount_invoiced"] = o.GwTaxAmountInvoiced
	}
	if !IsNil(o.GwTaxAmountRefunded) {
		toSerialize["gw_tax_amount_refunded"] = o.GwTaxAmountRefunded
	}
	if !IsNil(o.DiscountTaxCompensationAmount) {
		toSerialize["discount_tax_compensation_amount"] = o.DiscountTaxCompensationAmount
	}
	if !IsNil(o.DiscountTaxCompensationCanceled) {
		toSerialize["discount_tax_compensation_canceled"] = o.DiscountTaxCompensationCanceled
	}
	if !IsNil(o.DiscountTaxCompensationInvoiced) {
		toSerialize["discount_tax_compensation_invoiced"] = o.DiscountTaxCompensationInvoiced
	}
	if !IsNil(o.DiscountTaxCompensationRefunded) {
		toSerialize["discount_tax_compensation_refunded"] = o.DiscountTaxCompensationRefunded
	}
	if !IsNil(o.IsQtyDecimal) {
		toSerialize["is_qty_decimal"] = o.IsQtyDecimal
	}
	if !IsNil(o.IsVirtual) {
		toSerialize["is_virtual"] = o.IsVirtual
	}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.LockedDoInvoice) {
		toSerialize["locked_do_invoice"] = o.LockedDoInvoice
	}
	if !IsNil(o.LockedDoShip) {
		toSerialize["locked_do_ship"] = o.LockedDoShip
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NoDiscount) {
		toSerialize["no_discount"] = o.NoDiscount
	}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.OriginalPrice) {
		toSerialize["original_price"] = o.OriginalPrice
	}
	if !IsNil(o.ParentItemId) {
		toSerialize["parent_item_id"] = o.ParentItemId
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceInclTax) {
		toSerialize["price_incl_tax"] = o.PriceInclTax
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}
	if !IsNil(o.QtyBackordered) {
		toSerialize["qty_backordered"] = o.QtyBackordered
	}
	if !IsNil(o.QtyCanceled) {
		toSerialize["qty_canceled"] = o.QtyCanceled
	}
	if !IsNil(o.QtyInvoiced) {
		toSerialize["qty_invoiced"] = o.QtyInvoiced
	}
	if !IsNil(o.QtyOrdered) {
		toSerialize["qty_ordered"] = o.QtyOrdered
	}
	if !IsNil(o.QtyRefunded) {
		toSerialize["qty_refunded"] = o.QtyRefunded
	}
	if !IsNil(o.QtyReturned) {
		toSerialize["qty_returned"] = o.QtyReturned
	}
	if !IsNil(o.QtyShipped) {
		toSerialize["qty_shipped"] = o.QtyShipped
	}
	if !IsNil(o.QuoteItemId) {
		toSerialize["quote_item_id"] = o.QuoteItemId
	}
	if !IsNil(o.RowInvoiced) {
		toSerialize["row_invoiced"] = o.RowInvoiced
	}
	if !IsNil(o.RowTotal) {
		toSerialize["row_total"] = o.RowTotal
	}
	if !IsNil(o.RowTotalInclTax) {
		toSerialize["row_total_incl_tax"] = o.RowTotalInclTax
	}
	if !IsNil(o.RowWeight) {
		toSerialize["row_weight"] = o.RowWeight
	}
	toSerialize["sku"] = o.Sku
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["tax_amount"] = o.TaxAmount
	}
	if !IsNil(o.TaxBeforeDiscount) {
		toSerialize["tax_before_discount"] = o.TaxBeforeDiscount
	}
	if !IsNil(o.TaxCanceled) {
		toSerialize["tax_canceled"] = o.TaxCanceled
	}
	if !IsNil(o.TaxInvoiced) {
		toSerialize["tax_invoiced"] = o.TaxInvoiced
	}
	if !IsNil(o.TaxPercent) {
		toSerialize["tax_percent"] = o.TaxPercent
	}
	if !IsNil(o.TaxRefunded) {
		toSerialize["tax_refunded"] = o.TaxRefunded
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.WeeeTaxApplied) {
		toSerialize["weee_tax_applied"] = o.WeeeTaxApplied
	}
	if !IsNil(o.WeeeTaxAppliedAmount) {
		toSerialize["weee_tax_applied_amount"] = o.WeeeTaxAppliedAmount
	}
	if !IsNil(o.WeeeTaxAppliedRowAmount) {
		toSerialize["weee_tax_applied_row_amount"] = o.WeeeTaxAppliedRowAmount
	}
	if !IsNil(o.WeeeTaxDisposition) {
		toSerialize["weee_tax_disposition"] = o.WeeeTaxDisposition
	}
	if !IsNil(o.WeeeTaxRowDisposition) {
		toSerialize["weee_tax_row_disposition"] = o.WeeeTaxRowDisposition
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.ParentItem) {
		toSerialize["parent_item"] = o.ParentItem
	}
	if !IsNil(o.ProductOption) {
		toSerialize["product_option"] = o.ProductOption
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataOrderItemInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sku",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataOrderItemInterface := _SalesDataOrderItemInterface{}

	err = json.Unmarshal(data, &varSalesDataOrderItemInterface)

	if err != nil {
		return err
	}

	*o = SalesDataOrderItemInterface(varSalesDataOrderItemInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "additional_data")
		delete(additionalProperties, "amount_refunded")
		delete(additionalProperties, "applied_rule_ids")
		delete(additionalProperties, "base_amount_refunded")
		delete(additionalProperties, "base_cost")
		delete(additionalProperties, "base_discount_amount")
		delete(additionalProperties, "base_discount_invoiced")
		delete(additionalProperties, "base_discount_refunded")
		delete(additionalProperties, "base_discount_tax_compensation_amount")
		delete(additionalProperties, "base_discount_tax_compensation_invoiced")
		delete(additionalProperties, "base_discount_tax_compensation_refunded")
		delete(additionalProperties, "base_original_price")
		delete(additionalProperties, "base_price")
		delete(additionalProperties, "base_price_incl_tax")
		delete(additionalProperties, "base_row_invoiced")
		delete(additionalProperties, "base_row_total")
		delete(additionalProperties, "base_row_total_incl_tax")
		delete(additionalProperties, "base_tax_amount")
		delete(additionalProperties, "base_tax_before_discount")
		delete(additionalProperties, "base_tax_invoiced")
		delete(additionalProperties, "base_tax_refunded")
		delete(additionalProperties, "base_weee_tax_applied_amount")
		delete(additionalProperties, "base_weee_tax_applied_row_amnt")
		delete(additionalProperties, "base_weee_tax_disposition")
		delete(additionalProperties, "base_weee_tax_row_disposition")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "description")
		delete(additionalProperties, "discount_amount")
		delete(additionalProperties, "discount_invoiced")
		delete(additionalProperties, "discount_percent")
		delete(additionalProperties, "discount_refunded")
		delete(additionalProperties, "event_id")
		delete(additionalProperties, "ext_order_item_id")
		delete(additionalProperties, "free_shipping")
		delete(additionalProperties, "gw_base_price")
		delete(additionalProperties, "gw_base_price_invoiced")
		delete(additionalProperties, "gw_base_price_refunded")
		delete(additionalProperties, "gw_base_tax_amount")
		delete(additionalProperties, "gw_base_tax_amount_invoiced")
		delete(additionalProperties, "gw_base_tax_amount_refunded")
		delete(additionalProperties, "gw_id")
		delete(additionalProperties, "gw_price")
		delete(additionalProperties, "gw_price_invoiced")
		delete(additionalProperties, "gw_price_refunded")
		delete(additionalProperties, "gw_tax_amount")
		delete(additionalProperties, "gw_tax_amount_invoiced")
		delete(additionalProperties, "gw_tax_amount_refunded")
		delete(additionalProperties, "discount_tax_compensation_amount")
		delete(additionalProperties, "discount_tax_compensation_canceled")
		delete(additionalProperties, "discount_tax_compensation_invoiced")
		delete(additionalProperties, "discount_tax_compensation_refunded")
		delete(additionalProperties, "is_qty_decimal")
		delete(additionalProperties, "is_virtual")
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "locked_do_invoice")
		delete(additionalProperties, "locked_do_ship")
		delete(additionalProperties, "name")
		delete(additionalProperties, "no_discount")
		delete(additionalProperties, "order_id")
		delete(additionalProperties, "original_price")
		delete(additionalProperties, "parent_item_id")
		delete(additionalProperties, "price")
		delete(additionalProperties, "price_incl_tax")
		delete(additionalProperties, "product_id")
		delete(additionalProperties, "product_type")
		delete(additionalProperties, "qty_backordered")
		delete(additionalProperties, "qty_canceled")
		delete(additionalProperties, "qty_invoiced")
		delete(additionalProperties, "qty_ordered")
		delete(additionalProperties, "qty_refunded")
		delete(additionalProperties, "qty_returned")
		delete(additionalProperties, "qty_shipped")
		delete(additionalProperties, "quote_item_id")
		delete(additionalProperties, "row_invoiced")
		delete(additionalProperties, "row_total")
		delete(additionalProperties, "row_total_incl_tax")
		delete(additionalProperties, "row_weight")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "store_id")
		delete(additionalProperties, "tax_amount")
		delete(additionalProperties, "tax_before_discount")
		delete(additionalProperties, "tax_canceled")
		delete(additionalProperties, "tax_invoiced")
		delete(additionalProperties, "tax_percent")
		delete(additionalProperties, "tax_refunded")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "weee_tax_applied")
		delete(additionalProperties, "weee_tax_applied_amount")
		delete(additionalProperties, "weee_tax_applied_row_amount")
		delete(additionalProperties, "weee_tax_disposition")
		delete(additionalProperties, "weee_tax_row_disposition")
		delete(additionalProperties, "weight")
		delete(additionalProperties, "parent_item")
		delete(additionalProperties, "product_option")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataOrderItemInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataOrderItemInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataOrderItemInterface struct {
	value *SalesDataOrderItemInterface
	isSet bool
}

func (v NullableSalesDataOrderItemInterface) Get() *SalesDataOrderItemInterface {
	return v.value
}

func (v *NullableSalesDataOrderItemInterface) Set(val *SalesDataOrderItemInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataOrderItemInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataOrderItemInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataOrderItemInterface(val *SalesDataOrderItemInterface) *NullableSalesDataOrderItemInterface {
	return &NullableSalesDataOrderItemInterface{value: val, isSet: true}
}

func (v NullableSalesDataOrderItemInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataOrderItemInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
