/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the InventoryInStorePickupApiDataSearchRequestInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryInStorePickupApiDataSearchRequestInterface{}

// InventoryInStorePickupApiDataSearchRequestInterface Endpoint used to search Pickup Locations by different parameters: - by attribute filters fields @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\FiltersInterface - by distance to the address @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\AreaInterface Also, endpoint supports paging and sort orders.
type InventoryInStorePickupApiDataSearchRequestInterface struct {
	Area    *InventoryInStorePickupApiDataSearchRequestAreaInterface    `json:"area,omitempty"`
	Filters *InventoryInStorePickupApiDataSearchRequestFiltersInterface `json:"filters,omitempty"`
	// Page size.
	PageSize *int32 `json:"page_size,omitempty"`
	// Current page.
	CurrentPage int32 `json:"current_page"`
	// Sales Channel Type.
	ScopeType string `json:"scope_type"`
	// Sales Channel code.
	ScopeCode string `json:"scope_code"`
	// Sort Order.
	Sort                 []FrameworkSortOrder                                          `json:"sort,omitempty"`
	ExtensionAttributes  *InventoryInStorePickupApiDataSearchRequestExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InventoryInStorePickupApiDataSearchRequestInterface InventoryInStorePickupApiDataSearchRequestInterface

// NewInventoryInStorePickupApiDataSearchRequestInterface instantiates a new InventoryInStorePickupApiDataSearchRequestInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryInStorePickupApiDataSearchRequestInterface(currentPage int32, scopeType string, scopeCode string) *InventoryInStorePickupApiDataSearchRequestInterface {
	this := InventoryInStorePickupApiDataSearchRequestInterface{}
	this.CurrentPage = currentPage
	this.ScopeType = scopeType
	this.ScopeCode = scopeCode
	return &this
}

// NewInventoryInStorePickupApiDataSearchRequestInterfaceWithDefaults instantiates a new InventoryInStorePickupApiDataSearchRequestInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryInStorePickupApiDataSearchRequestInterfaceWithDefaults() *InventoryInStorePickupApiDataSearchRequestInterface {
	this := InventoryInStorePickupApiDataSearchRequestInterface{}
	return &this
}

// GetArea returns the Area field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetArea() InventoryInStorePickupApiDataSearchRequestAreaInterface {
	if o == nil || IsNil(o.Area) {
		var ret InventoryInStorePickupApiDataSearchRequestAreaInterface
		return ret
	}
	return *o.Area
}

// GetAreaOk returns a tuple with the Area field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetAreaOk() (*InventoryInStorePickupApiDataSearchRequestAreaInterface, bool) {
	if o == nil || IsNil(o.Area) {
		return nil, false
	}
	return o.Area, true
}

// HasArea returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) HasArea() bool {
	if o != nil && !IsNil(o.Area) {
		return true
	}

	return false
}

// SetArea gets a reference to the given InventoryInStorePickupApiDataSearchRequestAreaInterface and assigns it to the Area field.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetArea(v InventoryInStorePickupApiDataSearchRequestAreaInterface) {
	o.Area = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetFilters() InventoryInStorePickupApiDataSearchRequestFiltersInterface {
	if o == nil || IsNil(o.Filters) {
		var ret InventoryInStorePickupApiDataSearchRequestFiltersInterface
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetFiltersOk() (*InventoryInStorePickupApiDataSearchRequestFiltersInterface, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given InventoryInStorePickupApiDataSearchRequestFiltersInterface and assigns it to the Filters field.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetFilters(v InventoryInStorePickupApiDataSearchRequestFiltersInterface) {
	o.Filters = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetCurrentPage returns the CurrentPage field value
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetCurrentPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetCurrentPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPage, true
}

// SetCurrentPage sets field value
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetCurrentPage(v int32) {
	o.CurrentPage = v
}

// GetScopeType returns the ScopeType field value
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetScopeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScopeType
}

// GetScopeTypeOk returns a tuple with the ScopeType field value
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetScopeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScopeType, true
}

// SetScopeType sets field value
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetScopeType(v string) {
	o.ScopeType = v
}

// GetScopeCode returns the ScopeCode field value
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetScopeCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScopeCode
}

// GetScopeCodeOk returns a tuple with the ScopeCode field value
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetScopeCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScopeCode, true
}

// SetScopeCode sets field value
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetScopeCode(v string) {
	o.ScopeCode = v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetSort() []FrameworkSortOrder {
	if o == nil || IsNil(o.Sort) {
		var ret []FrameworkSortOrder
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetSortOk() ([]FrameworkSortOrder, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given []FrameworkSortOrder and assigns it to the Sort field.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetSort(v []FrameworkSortOrder) {
	o.Sort = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetExtensionAttributes() InventoryInStorePickupApiDataSearchRequestExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret InventoryInStorePickupApiDataSearchRequestExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetExtensionAttributesOk() (*InventoryInStorePickupApiDataSearchRequestExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given InventoryInStorePickupApiDataSearchRequestExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetExtensionAttributes(v InventoryInStorePickupApiDataSearchRequestExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o InventoryInStorePickupApiDataSearchRequestInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryInStorePickupApiDataSearchRequestInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Area) {
		toSerialize["area"] = o.Area
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	toSerialize["current_page"] = o.CurrentPage
	toSerialize["scope_type"] = o.ScopeType
	toSerialize["scope_code"] = o.ScopeCode
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InventoryInStorePickupApiDataSearchRequestInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"current_page",
		"scope_type",
		"scope_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInventoryInStorePickupApiDataSearchRequestInterface := _InventoryInStorePickupApiDataSearchRequestInterface{}

	err = json.Unmarshal(data, &varInventoryInStorePickupApiDataSearchRequestInterface)

	if err != nil {
		return err
	}

	*o = InventoryInStorePickupApiDataSearchRequestInterface(varInventoryInStorePickupApiDataSearchRequestInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "area")
		delete(additionalProperties, "filters")
		delete(additionalProperties, "page_size")
		delete(additionalProperties, "current_page")
		delete(additionalProperties, "scope_type")
		delete(additionalProperties, "scope_code")
		delete(additionalProperties, "sort")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *InventoryInStorePickupApiDataSearchRequestInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *InventoryInStorePickupApiDataSearchRequestInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableInventoryInStorePickupApiDataSearchRequestInterface struct {
	value *InventoryInStorePickupApiDataSearchRequestInterface
	isSet bool
}

func (v NullableInventoryInStorePickupApiDataSearchRequestInterface) Get() *InventoryInStorePickupApiDataSearchRequestInterface {
	return v.value
}

func (v *NullableInventoryInStorePickupApiDataSearchRequestInterface) Set(val *InventoryInStorePickupApiDataSearchRequestInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryInStorePickupApiDataSearchRequestInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryInStorePickupApiDataSearchRequestInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryInStorePickupApiDataSearchRequestInterface(val *InventoryInStorePickupApiDataSearchRequestInterface) *NullableInventoryInStorePickupApiDataSearchRequestInterface {
	return &NullableInventoryInStorePickupApiDataSearchRequestInterface{value: val, isSet: true}
}

func (v NullableInventoryInStorePickupApiDataSearchRequestInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryInStorePickupApiDataSearchRequestInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
