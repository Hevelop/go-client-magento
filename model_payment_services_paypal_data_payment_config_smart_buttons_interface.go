/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface{}

// PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface
type PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface struct {
	// CanDisplayMessage
	DisplayMessage bool `json:"display_message"`
	// Venmo
	DisplayVenmo  bool                                                                     `json:"display_venmo"`
	MessageStyles PaymentServicesPaypalDataPaymentConfigSmartButtonsMessageStylesInterface `json:"message_styles"`
	ButtonStyles  PaymentServicesPaypalDataPaymentConfigButtonStylesInterface              `json:"button_styles"`
	// Code
	Code string `json:"code"`
	// SDK params
	SdkParams []PaymentServicesPaypalDataPaymentConfigSdkParamsInterface `json:"sdk_params"`
	// Visible
	IsVisible bool `json:"is_visible"`
	// Sort Order
	SortOrder string `json:"sort_order"`
	// Payment intent
	PaymentIntent string `json:"payment_intent"`
	// Title
	Title                string `json:"title"`
	AdditionalProperties map[string]interface{}
}

type _PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface

// NewPaymentServicesPaypalDataPaymentConfigSmartButtonsInterface instantiates a new PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServicesPaypalDataPaymentConfigSmartButtonsInterface(displayMessage bool, displayVenmo bool, messageStyles PaymentServicesPaypalDataPaymentConfigSmartButtonsMessageStylesInterface, buttonStyles PaymentServicesPaypalDataPaymentConfigButtonStylesInterface, code string, sdkParams []PaymentServicesPaypalDataPaymentConfigSdkParamsInterface, isVisible bool, sortOrder string, paymentIntent string, title string) *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface {
	this := PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface{}
	this.DisplayMessage = displayMessage
	this.DisplayVenmo = displayVenmo
	this.MessageStyles = messageStyles
	this.ButtonStyles = buttonStyles
	this.Code = code
	this.SdkParams = sdkParams
	this.IsVisible = isVisible
	this.SortOrder = sortOrder
	this.PaymentIntent = paymentIntent
	this.Title = title
	return &this
}

// NewPaymentServicesPaypalDataPaymentConfigSmartButtonsInterfaceWithDefaults instantiates a new PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServicesPaypalDataPaymentConfigSmartButtonsInterfaceWithDefaults() *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface {
	this := PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface{}
	return &this
}

// GetDisplayMessage returns the DisplayMessage field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetDisplayMessage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DisplayMessage
}

// GetDisplayMessageOk returns a tuple with the DisplayMessage field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetDisplayMessageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayMessage, true
}

// SetDisplayMessage sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetDisplayMessage(v bool) {
	o.DisplayMessage = v
}

// GetDisplayVenmo returns the DisplayVenmo field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetDisplayVenmo() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DisplayVenmo
}

// GetDisplayVenmoOk returns a tuple with the DisplayVenmo field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetDisplayVenmoOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayVenmo, true
}

// SetDisplayVenmo sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetDisplayVenmo(v bool) {
	o.DisplayVenmo = v
}

// GetMessageStyles returns the MessageStyles field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetMessageStyles() PaymentServicesPaypalDataPaymentConfigSmartButtonsMessageStylesInterface {
	if o == nil {
		var ret PaymentServicesPaypalDataPaymentConfigSmartButtonsMessageStylesInterface
		return ret
	}

	return o.MessageStyles
}

// GetMessageStylesOk returns a tuple with the MessageStyles field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetMessageStylesOk() (*PaymentServicesPaypalDataPaymentConfigSmartButtonsMessageStylesInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageStyles, true
}

// SetMessageStyles sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetMessageStyles(v PaymentServicesPaypalDataPaymentConfigSmartButtonsMessageStylesInterface) {
	o.MessageStyles = v
}

// GetButtonStyles returns the ButtonStyles field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetButtonStyles() PaymentServicesPaypalDataPaymentConfigButtonStylesInterface {
	if o == nil {
		var ret PaymentServicesPaypalDataPaymentConfigButtonStylesInterface
		return ret
	}

	return o.ButtonStyles
}

// GetButtonStylesOk returns a tuple with the ButtonStyles field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetButtonStylesOk() (*PaymentServicesPaypalDataPaymentConfigButtonStylesInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ButtonStyles, true
}

// SetButtonStyles sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetButtonStyles(v PaymentServicesPaypalDataPaymentConfigButtonStylesInterface) {
	o.ButtonStyles = v
}

// GetCode returns the Code field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetCode(v string) {
	o.Code = v
}

// GetSdkParams returns the SdkParams field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetSdkParams() []PaymentServicesPaypalDataPaymentConfigSdkParamsInterface {
	if o == nil {
		var ret []PaymentServicesPaypalDataPaymentConfigSdkParamsInterface
		return ret
	}

	return o.SdkParams
}

// GetSdkParamsOk returns a tuple with the SdkParams field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetSdkParamsOk() ([]PaymentServicesPaypalDataPaymentConfigSdkParamsInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.SdkParams, true
}

// SetSdkParams sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetSdkParams(v []PaymentServicesPaypalDataPaymentConfigSdkParamsInterface) {
	o.SdkParams = v
}

// GetIsVisible returns the IsVisible field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetIsVisible() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsVisible
}

// GetIsVisibleOk returns a tuple with the IsVisible field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetIsVisibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsVisible, true
}

// SetIsVisible sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetIsVisible(v bool) {
	o.IsVisible = v
}

// GetSortOrder returns the SortOrder field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetSortOrder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetSortOrderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SortOrder, true
}

// SetSortOrder sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetSortOrder(v string) {
	o.SortOrder = v
}

// GetPaymentIntent returns the PaymentIntent field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetPaymentIntent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentIntent
}

// GetPaymentIntentOk returns a tuple with the PaymentIntent field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetPaymentIntentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentIntent, true
}

// SetPaymentIntent sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetPaymentIntent(v string) {
	o.PaymentIntent = v
}

// GetTitle returns the Title field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetTitle(v string) {
	o.Title = v
}

func (o PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["display_message"] = o.DisplayMessage
	toSerialize["display_venmo"] = o.DisplayVenmo
	toSerialize["message_styles"] = o.MessageStyles
	toSerialize["button_styles"] = o.ButtonStyles
	toSerialize["code"] = o.Code
	toSerialize["sdk_params"] = o.SdkParams
	toSerialize["is_visible"] = o.IsVisible
	toSerialize["sort_order"] = o.SortOrder
	toSerialize["payment_intent"] = o.PaymentIntent
	toSerialize["title"] = o.Title

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"display_message",
		"display_venmo",
		"message_styles",
		"button_styles",
		"code",
		"sdk_params",
		"is_visible",
		"sort_order",
		"payment_intent",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentServicesPaypalDataPaymentConfigSmartButtonsInterface := _PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface{}

	err = json.Unmarshal(data, &varPaymentServicesPaypalDataPaymentConfigSmartButtonsInterface)

	if err != nil {
		return err
	}

	*o = PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface(varPaymentServicesPaypalDataPaymentConfigSmartButtonsInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "display_message")
		delete(additionalProperties, "display_venmo")
		delete(additionalProperties, "message_styles")
		delete(additionalProperties, "button_styles")
		delete(additionalProperties, "code")
		delete(additionalProperties, "sdk_params")
		delete(additionalProperties, "is_visible")
		delete(additionalProperties, "sort_order")
		delete(additionalProperties, "payment_intent")
		delete(additionalProperties, "title")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface struct {
	value *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface
	isSet bool
}

func (v NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) Get() *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface {
	return v.value
}

func (v *NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) Set(val *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface(val *PaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) *NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface {
	return &NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface{value: val, isSet: true}
}

func (v NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServicesPaypalDataPaymentConfigSmartButtonsInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
