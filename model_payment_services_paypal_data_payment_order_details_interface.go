/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentServicesPaypalDataPaymentOrderDetailsInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentServicesPaypalDataPaymentOrderDetailsInterface{}

// PaymentServicesPaypalDataPaymentOrderDetailsInterface Interface PaymentOrderDetailsInterface
type PaymentServicesPaypalDataPaymentOrderDetailsInterface struct {
	PaymentSourceDetails PaymentServicesPaypalDataPaymentSourceDetailsInterface `json:"payment_source_details"`
	// Payment order id
	Id string `json:"id"`
	// Payment order mpOrderId
	MpOrderId string `json:"mp_order_id"`
	// Payment order status
	Status               string `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _PaymentServicesPaypalDataPaymentOrderDetailsInterface PaymentServicesPaypalDataPaymentOrderDetailsInterface

// NewPaymentServicesPaypalDataPaymentOrderDetailsInterface instantiates a new PaymentServicesPaypalDataPaymentOrderDetailsInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServicesPaypalDataPaymentOrderDetailsInterface(paymentSourceDetails PaymentServicesPaypalDataPaymentSourceDetailsInterface, id string, mpOrderId string, status string) *PaymentServicesPaypalDataPaymentOrderDetailsInterface {
	this := PaymentServicesPaypalDataPaymentOrderDetailsInterface{}
	this.PaymentSourceDetails = paymentSourceDetails
	this.Id = id
	this.MpOrderId = mpOrderId
	this.Status = status
	return &this
}

// NewPaymentServicesPaypalDataPaymentOrderDetailsInterfaceWithDefaults instantiates a new PaymentServicesPaypalDataPaymentOrderDetailsInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServicesPaypalDataPaymentOrderDetailsInterfaceWithDefaults() *PaymentServicesPaypalDataPaymentOrderDetailsInterface {
	this := PaymentServicesPaypalDataPaymentOrderDetailsInterface{}
	return &this
}

// GetPaymentSourceDetails returns the PaymentSourceDetails field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetPaymentSourceDetails() PaymentServicesPaypalDataPaymentSourceDetailsInterface {
	if o == nil {
		var ret PaymentServicesPaypalDataPaymentSourceDetailsInterface
		return ret
	}

	return o.PaymentSourceDetails
}

// GetPaymentSourceDetailsOk returns a tuple with the PaymentSourceDetails field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetPaymentSourceDetailsOk() (*PaymentServicesPaypalDataPaymentSourceDetailsInterface, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentSourceDetails, true
}

// SetPaymentSourceDetails sets field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) SetPaymentSourceDetails(v PaymentServicesPaypalDataPaymentSourceDetailsInterface) {
	o.PaymentSourceDetails = v
}

// GetId returns the Id field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) SetId(v string) {
	o.Id = v
}

// GetMpOrderId returns the MpOrderId field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetMpOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MpOrderId
}

// GetMpOrderIdOk returns a tuple with the MpOrderId field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetMpOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MpOrderId, true
}

// SetMpOrderId sets field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) SetMpOrderId(v string) {
	o.MpOrderId = v
}

// GetStatus returns the Status field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) SetStatus(v string) {
	o.Status = v
}

func (o PaymentServicesPaypalDataPaymentOrderDetailsInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentServicesPaypalDataPaymentOrderDetailsInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["payment_source_details"] = o.PaymentSourceDetails
	toSerialize["id"] = o.Id
	toSerialize["mp_order_id"] = o.MpOrderId
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payment_source_details",
		"id",
		"mp_order_id",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentServicesPaypalDataPaymentOrderDetailsInterface := _PaymentServicesPaypalDataPaymentOrderDetailsInterface{}

	err = json.Unmarshal(data, &varPaymentServicesPaypalDataPaymentOrderDetailsInterface)

	if err != nil {
		return err
	}

	*o = PaymentServicesPaypalDataPaymentOrderDetailsInterface(varPaymentServicesPaypalDataPaymentOrderDetailsInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "payment_source_details")
		delete(additionalProperties, "id")
		delete(additionalProperties, "mp_order_id")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PaymentServicesPaypalDataPaymentOrderDetailsInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface struct {
	value *PaymentServicesPaypalDataPaymentOrderDetailsInterface
	isSet bool
}

func (v NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface) Get() *PaymentServicesPaypalDataPaymentOrderDetailsInterface {
	return v.value
}

func (v *NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface) Set(val *PaymentServicesPaypalDataPaymentOrderDetailsInterface) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServicesPaypalDataPaymentOrderDetailsInterface(val *PaymentServicesPaypalDataPaymentOrderDetailsInterface) *NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface {
	return &NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface{value: val, isSet: true}
}

func (v NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServicesPaypalDataPaymentOrderDetailsInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
