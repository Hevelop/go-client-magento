/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the NegotiableQuoteDataNegotiableQuoteItemExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NegotiableQuoteDataNegotiableQuoteItemExtensionInterface{}

// NegotiableQuoteDataNegotiableQuoteItemExtensionInterface ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface
type NegotiableQuoteDataNegotiableQuoteItemExtensionInterface struct {
	NegotiatedPriceType  *int32                                 `json:"negotiated_price_type,omitempty"`
	NegotiatedPriceValue *float32                               `json:"negotiated_price_value,omitempty"`
	LastItemNotes        []NegotiableQuoteDataItemNoteInterface `json:"last_item_notes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NegotiableQuoteDataNegotiableQuoteItemExtensionInterface NegotiableQuoteDataNegotiableQuoteItemExtensionInterface

// NewNegotiableQuoteDataNegotiableQuoteItemExtensionInterface instantiates a new NegotiableQuoteDataNegotiableQuoteItemExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNegotiableQuoteDataNegotiableQuoteItemExtensionInterface() *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface {
	this := NegotiableQuoteDataNegotiableQuoteItemExtensionInterface{}
	return &this
}

// NewNegotiableQuoteDataNegotiableQuoteItemExtensionInterfaceWithDefaults instantiates a new NegotiableQuoteDataNegotiableQuoteItemExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNegotiableQuoteDataNegotiableQuoteItemExtensionInterfaceWithDefaults() *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface {
	this := NegotiableQuoteDataNegotiableQuoteItemExtensionInterface{}
	return &this
}

// GetNegotiatedPriceType returns the NegotiatedPriceType field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) GetNegotiatedPriceType() int32 {
	if o == nil || IsNil(o.NegotiatedPriceType) {
		var ret int32
		return ret
	}
	return *o.NegotiatedPriceType
}

// GetNegotiatedPriceTypeOk returns a tuple with the NegotiatedPriceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) GetNegotiatedPriceTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.NegotiatedPriceType) {
		return nil, false
	}
	return o.NegotiatedPriceType, true
}

// HasNegotiatedPriceType returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) HasNegotiatedPriceType() bool {
	if o != nil && !IsNil(o.NegotiatedPriceType) {
		return true
	}

	return false
}

// SetNegotiatedPriceType gets a reference to the given int32 and assigns it to the NegotiatedPriceType field.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) SetNegotiatedPriceType(v int32) {
	o.NegotiatedPriceType = &v
}

// GetNegotiatedPriceValue returns the NegotiatedPriceValue field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) GetNegotiatedPriceValue() float32 {
	if o == nil || IsNil(o.NegotiatedPriceValue) {
		var ret float32
		return ret
	}
	return *o.NegotiatedPriceValue
}

// GetNegotiatedPriceValueOk returns a tuple with the NegotiatedPriceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) GetNegotiatedPriceValueOk() (*float32, bool) {
	if o == nil || IsNil(o.NegotiatedPriceValue) {
		return nil, false
	}
	return o.NegotiatedPriceValue, true
}

// HasNegotiatedPriceValue returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) HasNegotiatedPriceValue() bool {
	if o != nil && !IsNil(o.NegotiatedPriceValue) {
		return true
	}

	return false
}

// SetNegotiatedPriceValue gets a reference to the given float32 and assigns it to the NegotiatedPriceValue field.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) SetNegotiatedPriceValue(v float32) {
	o.NegotiatedPriceValue = &v
}

// GetLastItemNotes returns the LastItemNotes field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) GetLastItemNotes() []NegotiableQuoteDataItemNoteInterface {
	if o == nil || IsNil(o.LastItemNotes) {
		var ret []NegotiableQuoteDataItemNoteInterface
		return ret
	}
	return o.LastItemNotes
}

// GetLastItemNotesOk returns a tuple with the LastItemNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) GetLastItemNotesOk() ([]NegotiableQuoteDataItemNoteInterface, bool) {
	if o == nil || IsNil(o.LastItemNotes) {
		return nil, false
	}
	return o.LastItemNotes, true
}

// HasLastItemNotes returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) HasLastItemNotes() bool {
	if o != nil && !IsNil(o.LastItemNotes) {
		return true
	}

	return false
}

// SetLastItemNotes gets a reference to the given []NegotiableQuoteDataItemNoteInterface and assigns it to the LastItemNotes field.
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) SetLastItemNotes(v []NegotiableQuoteDataItemNoteInterface) {
	o.LastItemNotes = v
}

func (o NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NegotiatedPriceType) {
		toSerialize["negotiated_price_type"] = o.NegotiatedPriceType
	}
	if !IsNil(o.NegotiatedPriceValue) {
		toSerialize["negotiated_price_value"] = o.NegotiatedPriceValue
	}
	if !IsNil(o.LastItemNotes) {
		toSerialize["last_item_notes"] = o.LastItemNotes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varNegotiableQuoteDataNegotiableQuoteItemExtensionInterface := _NegotiableQuoteDataNegotiableQuoteItemExtensionInterface{}

	err = json.Unmarshal(data, &varNegotiableQuoteDataNegotiableQuoteItemExtensionInterface)

	if err != nil {
		return err
	}

	*o = NegotiableQuoteDataNegotiableQuoteItemExtensionInterface(varNegotiableQuoteDataNegotiableQuoteItemExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "negotiated_price_type")
		delete(additionalProperties, "negotiated_price_value")
		delete(additionalProperties, "last_item_notes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface struct {
	value *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface
	isSet bool
}

func (v NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface) Get() *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface {
	return v.value
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface) Set(val *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface(val *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) *NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface {
	return &NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface{value: val, isSet: true}
}

func (v NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteItemExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
