/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the SalesDataOrderInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataOrderInterface{}

// SalesDataOrderInterface Order interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
type SalesDataOrderInterface struct {
	// Negative adjustment value.
	AdjustmentNegative *float32 `json:"adjustment_negative,omitempty"`
	// Positive adjustment value.
	AdjustmentPositive *float32 `json:"adjustment_positive,omitempty"`
	// Applied rule IDs.
	AppliedRuleIds *string `json:"applied_rule_ids,omitempty"`
	// Base negative adjustment value.
	BaseAdjustmentNegative *float32 `json:"base_adjustment_negative,omitempty"`
	// Base positive adjustment value.
	BaseAdjustmentPositive *float32 `json:"base_adjustment_positive,omitempty"`
	// Base currency code.
	BaseCurrencyCode *string `json:"base_currency_code,omitempty"`
	// Base discount amount.
	BaseDiscountAmount *float32 `json:"base_discount_amount,omitempty"`
	// Base discount canceled.
	BaseDiscountCanceled *float32 `json:"base_discount_canceled,omitempty"`
	// Base discount invoiced.
	BaseDiscountInvoiced *float32 `json:"base_discount_invoiced,omitempty"`
	// Base discount refunded.
	BaseDiscountRefunded *float32 `json:"base_discount_refunded,omitempty"`
	// Base grand total.
	BaseGrandTotal float32 `json:"base_grand_total"`
	// Base discount tax compensation amount.
	BaseDiscountTaxCompensationAmount *float32 `json:"base_discount_tax_compensation_amount,omitempty"`
	// Base discount tax compensation invoiced.
	BaseDiscountTaxCompensationInvoiced *float32 `json:"base_discount_tax_compensation_invoiced,omitempty"`
	// Base discount tax compensation refunded.
	BaseDiscountTaxCompensationRefunded *float32 `json:"base_discount_tax_compensation_refunded,omitempty"`
	// Base shipping amount.
	BaseShippingAmount *float32 `json:"base_shipping_amount,omitempty"`
	// Base shipping canceled.
	BaseShippingCanceled *float32 `json:"base_shipping_canceled,omitempty"`
	// Base shipping discount amount.
	BaseShippingDiscountAmount *float32 `json:"base_shipping_discount_amount,omitempty"`
	// Base shipping discount tax compensation amount.
	BaseShippingDiscountTaxCompensationAmnt *float32 `json:"base_shipping_discount_tax_compensation_amnt,omitempty"`
	// Base shipping including tax.
	BaseShippingInclTax *float32 `json:"base_shipping_incl_tax,omitempty"`
	// Base shipping invoiced.
	BaseShippingInvoiced *float32 `json:"base_shipping_invoiced,omitempty"`
	// Base shipping refunded.
	BaseShippingRefunded *float32 `json:"base_shipping_refunded,omitempty"`
	// Base shipping tax amount.
	BaseShippingTaxAmount *float32 `json:"base_shipping_tax_amount,omitempty"`
	// Base shipping tax refunded.
	BaseShippingTaxRefunded *float32 `json:"base_shipping_tax_refunded,omitempty"`
	// Base subtotal.
	BaseSubtotal *float32 `json:"base_subtotal,omitempty"`
	// Base subtotal canceled.
	BaseSubtotalCanceled *float32 `json:"base_subtotal_canceled,omitempty"`
	// Base subtotal including tax.
	BaseSubtotalInclTax *float32 `json:"base_subtotal_incl_tax,omitempty"`
	// Base subtotal invoiced.
	BaseSubtotalInvoiced *float32 `json:"base_subtotal_invoiced,omitempty"`
	// Base subtotal refunded.
	BaseSubtotalRefunded *float32 `json:"base_subtotal_refunded,omitempty"`
	// Base tax amount.
	BaseTaxAmount *float32 `json:"base_tax_amount,omitempty"`
	// Base tax canceled.
	BaseTaxCanceled *float32 `json:"base_tax_canceled,omitempty"`
	// Base tax invoiced.
	BaseTaxInvoiced *float32 `json:"base_tax_invoiced,omitempty"`
	// Base tax refunded.
	BaseTaxRefunded *float32 `json:"base_tax_refunded,omitempty"`
	// Base total canceled.
	BaseTotalCanceled *float32 `json:"base_total_canceled,omitempty"`
	// Base total due.
	BaseTotalDue *float32 `json:"base_total_due,omitempty"`
	// Base total invoiced.
	BaseTotalInvoiced *float32 `json:"base_total_invoiced,omitempty"`
	// Base total invoiced cost.
	BaseTotalInvoicedCost *float32 `json:"base_total_invoiced_cost,omitempty"`
	// Base total offline refunded.
	BaseTotalOfflineRefunded *float32 `json:"base_total_offline_refunded,omitempty"`
	// Base total online refunded.
	BaseTotalOnlineRefunded *float32 `json:"base_total_online_refunded,omitempty"`
	// Base total paid.
	BaseTotalPaid *float32 `json:"base_total_paid,omitempty"`
	// Base total quantity ordered.
	BaseTotalQtyOrdered *float32 `json:"base_total_qty_ordered,omitempty"`
	// Base total refunded.
	BaseTotalRefunded *float32 `json:"base_total_refunded,omitempty"`
	// Base-to-global rate.
	BaseToGlobalRate *float32 `json:"base_to_global_rate,omitempty"`
	// Base-to-order rate.
	BaseToOrderRate *float32 `json:"base_to_order_rate,omitempty"`
	// Billing address ID.
	BillingAddressId *int32 `json:"billing_address_id,omitempty"`
	// Can-ship-partially flag value.
	CanShipPartially *int32 `json:"can_ship_partially,omitempty"`
	// Can-ship-partially-item flag value.
	CanShipPartiallyItem *int32 `json:"can_ship_partially_item,omitempty"`
	// Coupon code.
	CouponCode *string `json:"coupon_code,omitempty"`
	// Created-at timestamp.
	CreatedAt *string `json:"created_at,omitempty"`
	// In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customersâ€™ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data.
	CustomerDob *string `json:"customer_dob,omitempty"`
	// Customer email address.
	CustomerEmail string `json:"customer_email"`
	// Customer first name.
	CustomerFirstname *string `json:"customer_firstname,omitempty"`
	// Customer gender.
	CustomerGender *int32 `json:"customer_gender,omitempty"`
	// Customer group ID.
	CustomerGroupId *int32 `json:"customer_group_id,omitempty"`
	// Customer ID.
	CustomerId *int32 `json:"customer_id,omitempty"`
	// Customer-is-guest flag value.
	CustomerIsGuest *int32 `json:"customer_is_guest,omitempty"`
	// Customer last name.
	CustomerLastname *string `json:"customer_lastname,omitempty"`
	// Customer middle name.
	CustomerMiddlename *string `json:"customer_middlename,omitempty"`
	// Customer note.
	CustomerNote *string `json:"customer_note,omitempty"`
	// Customer-note-notify flag value.
	CustomerNoteNotify *int32 `json:"customer_note_notify,omitempty"`
	// Customer prefix.
	CustomerPrefix *string `json:"customer_prefix,omitempty"`
	// Customer suffix.
	CustomerSuffix *string `json:"customer_suffix,omitempty"`
	// Customer value-added tax (VAT).
	CustomerTaxvat *string `json:"customer_taxvat,omitempty"`
	// Discount amount.
	DiscountAmount *float32 `json:"discount_amount,omitempty"`
	// Discount canceled.
	DiscountCanceled *float32 `json:"discount_canceled,omitempty"`
	// Discount description.
	DiscountDescription *string `json:"discount_description,omitempty"`
	// Discount invoiced.
	DiscountInvoiced *float32 `json:"discount_invoiced,omitempty"`
	// Discount refunded amount.
	DiscountRefunded *float32 `json:"discount_refunded,omitempty"`
	// Edit increment value.
	EditIncrement *int32 `json:"edit_increment,omitempty"`
	// Email-sent flag value.
	EmailSent *int32 `json:"email_sent,omitempty"`
	// Order ID.
	EntityId *int32 `json:"entity_id,omitempty"`
	// External customer ID.
	ExtCustomerId *string `json:"ext_customer_id,omitempty"`
	// External order ID.
	ExtOrderId *string `json:"ext_order_id,omitempty"`
	// Forced-shipment-with-invoice flag value.
	ForcedShipmentWithInvoice *int32 `json:"forced_shipment_with_invoice,omitempty"`
	// Global currency code.
	GlobalCurrencyCode *string `json:"global_currency_code,omitempty"`
	// Grand total.
	GrandTotal float32 `json:"grand_total"`
	// Discount tax compensation amount.
	DiscountTaxCompensationAmount *float32 `json:"discount_tax_compensation_amount,omitempty"`
	// Discount tax compensation invoiced amount.
	DiscountTaxCompensationInvoiced *float32 `json:"discount_tax_compensation_invoiced,omitempty"`
	// Discount tax compensation refunded amount.
	DiscountTaxCompensationRefunded *float32 `json:"discount_tax_compensation_refunded,omitempty"`
	// Hold before state.
	HoldBeforeState *string `json:"hold_before_state,omitempty"`
	// Hold before status.
	HoldBeforeStatus *string `json:"hold_before_status,omitempty"`
	// Increment ID.
	IncrementId *string `json:"increment_id,omitempty"`
	// Is-virtual flag value.
	IsVirtual *int32 `json:"is_virtual,omitempty"`
	// Order currency code.
	OrderCurrencyCode *string `json:"order_currency_code,omitempty"`
	// Original increment ID.
	OriginalIncrementId *string `json:"original_increment_id,omitempty"`
	// Payment authorization amount.
	PaymentAuthorizationAmount *float32 `json:"payment_authorization_amount,omitempty"`
	// Payment authorization expiration date.
	PaymentAuthExpiration *int32 `json:"payment_auth_expiration,omitempty"`
	// Protect code.
	ProtectCode *string `json:"protect_code,omitempty"`
	// Quote address ID.
	QuoteAddressId *int32 `json:"quote_address_id,omitempty"`
	// Quote ID.
	QuoteId *int32 `json:"quote_id,omitempty"`
	// Relation child ID.
	RelationChildId *string `json:"relation_child_id,omitempty"`
	// Relation child real ID.
	RelationChildRealId *string `json:"relation_child_real_id,omitempty"`
	// Relation parent ID.
	RelationParentId *string `json:"relation_parent_id,omitempty"`
	// Relation parent real ID.
	RelationParentRealId *string `json:"relation_parent_real_id,omitempty"`
	// Remote IP address.
	RemoteIp *string `json:"remote_ip,omitempty"`
	// Shipping amount.
	ShippingAmount *float32 `json:"shipping_amount,omitempty"`
	// Shipping canceled amount.
	ShippingCanceled *float32 `json:"shipping_canceled,omitempty"`
	// Shipping description.
	ShippingDescription *string `json:"shipping_description,omitempty"`
	// Shipping discount amount.
	ShippingDiscountAmount *float32 `json:"shipping_discount_amount,omitempty"`
	// Shipping discount tax compensation amount.
	ShippingDiscountTaxCompensationAmount *float32 `json:"shipping_discount_tax_compensation_amount,omitempty"`
	// Shipping including tax amount.
	ShippingInclTax *float32 `json:"shipping_incl_tax,omitempty"`
	// Shipping invoiced amount.
	ShippingInvoiced *float32 `json:"shipping_invoiced,omitempty"`
	// Shipping refunded amount.
	ShippingRefunded *float32 `json:"shipping_refunded,omitempty"`
	// Shipping tax amount.
	ShippingTaxAmount *float32 `json:"shipping_tax_amount,omitempty"`
	// Shipping tax refunded amount.
	ShippingTaxRefunded *float32 `json:"shipping_tax_refunded,omitempty"`
	// State.
	State *string `json:"state,omitempty"`
	// Status.
	Status *string `json:"status,omitempty"`
	// Store currency code.
	StoreCurrencyCode *string `json:"store_currency_code,omitempty"`
	// Store ID.
	StoreId *int32 `json:"store_id,omitempty"`
	// Store name.
	StoreName *string `json:"store_name,omitempty"`
	// Store-to-base rate.
	StoreToBaseRate *float32 `json:"store_to_base_rate,omitempty"`
	// Store-to-order rate.
	StoreToOrderRate *float32 `json:"store_to_order_rate,omitempty"`
	// Subtotal.
	Subtotal *float32 `json:"subtotal,omitempty"`
	// Subtotal canceled amount.
	SubtotalCanceled *float32 `json:"subtotal_canceled,omitempty"`
	// Subtotal including tax amount.
	SubtotalInclTax *float32 `json:"subtotal_incl_tax,omitempty"`
	// Subtotal invoiced amount.
	SubtotalInvoiced *float32 `json:"subtotal_invoiced,omitempty"`
	// Subtotal refunded amount.
	SubtotalRefunded *float32 `json:"subtotal_refunded,omitempty"`
	// Tax amount.
	TaxAmount *float32 `json:"tax_amount,omitempty"`
	// Tax canceled amount.
	TaxCanceled *float32 `json:"tax_canceled,omitempty"`
	// Tax invoiced amount.
	TaxInvoiced *float32 `json:"tax_invoiced,omitempty"`
	// Tax refunded amount.
	TaxRefunded *float32 `json:"tax_refunded,omitempty"`
	// Total canceled.
	TotalCanceled *float32 `json:"total_canceled,omitempty"`
	// Total due.
	TotalDue *float32 `json:"total_due,omitempty"`
	// Total invoiced amount.
	TotalInvoiced *float32 `json:"total_invoiced,omitempty"`
	// Total item count.
	TotalItemCount *int32 `json:"total_item_count,omitempty"`
	// Total offline refunded amount.
	TotalOfflineRefunded *float32 `json:"total_offline_refunded,omitempty"`
	// Total online refunded amount.
	TotalOnlineRefunded *float32 `json:"total_online_refunded,omitempty"`
	// Total paid.
	TotalPaid *float32 `json:"total_paid,omitempty"`
	// Total quantity ordered.
	TotalQtyOrdered *float32 `json:"total_qty_ordered,omitempty"`
	// Total amount refunded.
	TotalRefunded *float32 `json:"total_refunded,omitempty"`
	// Updated-at timestamp.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Weight.
	Weight *float32 `json:"weight,omitempty"`
	// X-Forwarded-For field value.
	XForwardedFor *string `json:"x_forwarded_for,omitempty"`
	// Array of items.
	Items          []SalesDataOrderItemInterface   `json:"items"`
	BillingAddress *SalesDataOrderAddressInterface `json:"billing_address,omitempty"`
	Payment        *SalesDataOrderPaymentInterface `json:"payment,omitempty"`
	// Array of status histories.
	StatusHistories      []SalesDataOrderStatusHistoryInterface `json:"status_histories,omitempty"`
	ExtensionAttributes  *SalesDataOrderExtensionInterface      `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataOrderInterface SalesDataOrderInterface

// NewSalesDataOrderInterface instantiates a new SalesDataOrderInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataOrderInterface(baseGrandTotal float32, customerEmail string, grandTotal float32, items []SalesDataOrderItemInterface) *SalesDataOrderInterface {
	this := SalesDataOrderInterface{}
	this.BaseGrandTotal = baseGrandTotal
	this.CustomerEmail = customerEmail
	this.GrandTotal = grandTotal
	this.Items = items
	return &this
}

// NewSalesDataOrderInterfaceWithDefaults instantiates a new SalesDataOrderInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataOrderInterfaceWithDefaults() *SalesDataOrderInterface {
	this := SalesDataOrderInterface{}
	return &this
}

// GetAdjustmentNegative returns the AdjustmentNegative field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetAdjustmentNegative() float32 {
	if o == nil || IsNil(o.AdjustmentNegative) {
		var ret float32
		return ret
	}
	return *o.AdjustmentNegative
}

// GetAdjustmentNegativeOk returns a tuple with the AdjustmentNegative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetAdjustmentNegativeOk() (*float32, bool) {
	if o == nil || IsNil(o.AdjustmentNegative) {
		return nil, false
	}
	return o.AdjustmentNegative, true
}

// HasAdjustmentNegative returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasAdjustmentNegative() bool {
	if o != nil && !IsNil(o.AdjustmentNegative) {
		return true
	}

	return false
}

// SetAdjustmentNegative gets a reference to the given float32 and assigns it to the AdjustmentNegative field.
func (o *SalesDataOrderInterface) SetAdjustmentNegative(v float32) {
	o.AdjustmentNegative = &v
}

// GetAdjustmentPositive returns the AdjustmentPositive field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetAdjustmentPositive() float32 {
	if o == nil || IsNil(o.AdjustmentPositive) {
		var ret float32
		return ret
	}
	return *o.AdjustmentPositive
}

// GetAdjustmentPositiveOk returns a tuple with the AdjustmentPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetAdjustmentPositiveOk() (*float32, bool) {
	if o == nil || IsNil(o.AdjustmentPositive) {
		return nil, false
	}
	return o.AdjustmentPositive, true
}

// HasAdjustmentPositive returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasAdjustmentPositive() bool {
	if o != nil && !IsNil(o.AdjustmentPositive) {
		return true
	}

	return false
}

// SetAdjustmentPositive gets a reference to the given float32 and assigns it to the AdjustmentPositive field.
func (o *SalesDataOrderInterface) SetAdjustmentPositive(v float32) {
	o.AdjustmentPositive = &v
}

// GetAppliedRuleIds returns the AppliedRuleIds field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetAppliedRuleIds() string {
	if o == nil || IsNil(o.AppliedRuleIds) {
		var ret string
		return ret
	}
	return *o.AppliedRuleIds
}

// GetAppliedRuleIdsOk returns a tuple with the AppliedRuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetAppliedRuleIdsOk() (*string, bool) {
	if o == nil || IsNil(o.AppliedRuleIds) {
		return nil, false
	}
	return o.AppliedRuleIds, true
}

// HasAppliedRuleIds returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasAppliedRuleIds() bool {
	if o != nil && !IsNil(o.AppliedRuleIds) {
		return true
	}

	return false
}

// SetAppliedRuleIds gets a reference to the given string and assigns it to the AppliedRuleIds field.
func (o *SalesDataOrderInterface) SetAppliedRuleIds(v string) {
	o.AppliedRuleIds = &v
}

// GetBaseAdjustmentNegative returns the BaseAdjustmentNegative field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseAdjustmentNegative() float32 {
	if o == nil || IsNil(o.BaseAdjustmentNegative) {
		var ret float32
		return ret
	}
	return *o.BaseAdjustmentNegative
}

// GetBaseAdjustmentNegativeOk returns a tuple with the BaseAdjustmentNegative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseAdjustmentNegativeOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAdjustmentNegative) {
		return nil, false
	}
	return o.BaseAdjustmentNegative, true
}

// HasBaseAdjustmentNegative returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseAdjustmentNegative() bool {
	if o != nil && !IsNil(o.BaseAdjustmentNegative) {
		return true
	}

	return false
}

// SetBaseAdjustmentNegative gets a reference to the given float32 and assigns it to the BaseAdjustmentNegative field.
func (o *SalesDataOrderInterface) SetBaseAdjustmentNegative(v float32) {
	o.BaseAdjustmentNegative = &v
}

// GetBaseAdjustmentPositive returns the BaseAdjustmentPositive field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseAdjustmentPositive() float32 {
	if o == nil || IsNil(o.BaseAdjustmentPositive) {
		var ret float32
		return ret
	}
	return *o.BaseAdjustmentPositive
}

// GetBaseAdjustmentPositiveOk returns a tuple with the BaseAdjustmentPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseAdjustmentPositiveOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAdjustmentPositive) {
		return nil, false
	}
	return o.BaseAdjustmentPositive, true
}

// HasBaseAdjustmentPositive returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseAdjustmentPositive() bool {
	if o != nil && !IsNil(o.BaseAdjustmentPositive) {
		return true
	}

	return false
}

// SetBaseAdjustmentPositive gets a reference to the given float32 and assigns it to the BaseAdjustmentPositive field.
func (o *SalesDataOrderInterface) SetBaseAdjustmentPositive(v float32) {
	o.BaseAdjustmentPositive = &v
}

// GetBaseCurrencyCode returns the BaseCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseCurrencyCode() string {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		var ret string
		return ret
	}
	return *o.BaseCurrencyCode
}

// GetBaseCurrencyCodeOk returns a tuple with the BaseCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCurrencyCode) {
		return nil, false
	}
	return o.BaseCurrencyCode, true
}

// HasBaseCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseCurrencyCode() bool {
	if o != nil && !IsNil(o.BaseCurrencyCode) {
		return true
	}

	return false
}

// SetBaseCurrencyCode gets a reference to the given string and assigns it to the BaseCurrencyCode field.
func (o *SalesDataOrderInterface) SetBaseCurrencyCode(v string) {
	o.BaseCurrencyCode = &v
}

// GetBaseDiscountAmount returns the BaseDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseDiscountAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountAmount
}

// GetBaseDiscountAmountOk returns a tuple with the BaseDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountAmount) {
		return nil, false
	}
	return o.BaseDiscountAmount, true
}

// HasBaseDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseDiscountAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountAmount) {
		return true
	}

	return false
}

// SetBaseDiscountAmount gets a reference to the given float32 and assigns it to the BaseDiscountAmount field.
func (o *SalesDataOrderInterface) SetBaseDiscountAmount(v float32) {
	o.BaseDiscountAmount = &v
}

// GetBaseDiscountCanceled returns the BaseDiscountCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseDiscountCanceled() float32 {
	if o == nil || IsNil(o.BaseDiscountCanceled) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountCanceled
}

// GetBaseDiscountCanceledOk returns a tuple with the BaseDiscountCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseDiscountCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountCanceled) {
		return nil, false
	}
	return o.BaseDiscountCanceled, true
}

// HasBaseDiscountCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseDiscountCanceled() bool {
	if o != nil && !IsNil(o.BaseDiscountCanceled) {
		return true
	}

	return false
}

// SetBaseDiscountCanceled gets a reference to the given float32 and assigns it to the BaseDiscountCanceled field.
func (o *SalesDataOrderInterface) SetBaseDiscountCanceled(v float32) {
	o.BaseDiscountCanceled = &v
}

// GetBaseDiscountInvoiced returns the BaseDiscountInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseDiscountInvoiced() float32 {
	if o == nil || IsNil(o.BaseDiscountInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountInvoiced
}

// GetBaseDiscountInvoicedOk returns a tuple with the BaseDiscountInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseDiscountInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountInvoiced) {
		return nil, false
	}
	return o.BaseDiscountInvoiced, true
}

// HasBaseDiscountInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseDiscountInvoiced() bool {
	if o != nil && !IsNil(o.BaseDiscountInvoiced) {
		return true
	}

	return false
}

// SetBaseDiscountInvoiced gets a reference to the given float32 and assigns it to the BaseDiscountInvoiced field.
func (o *SalesDataOrderInterface) SetBaseDiscountInvoiced(v float32) {
	o.BaseDiscountInvoiced = &v
}

// GetBaseDiscountRefunded returns the BaseDiscountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseDiscountRefunded() float32 {
	if o == nil || IsNil(o.BaseDiscountRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountRefunded
}

// GetBaseDiscountRefundedOk returns a tuple with the BaseDiscountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseDiscountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountRefunded) {
		return nil, false
	}
	return o.BaseDiscountRefunded, true
}

// HasBaseDiscountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseDiscountRefunded() bool {
	if o != nil && !IsNil(o.BaseDiscountRefunded) {
		return true
	}

	return false
}

// SetBaseDiscountRefunded gets a reference to the given float32 and assigns it to the BaseDiscountRefunded field.
func (o *SalesDataOrderInterface) SetBaseDiscountRefunded(v float32) {
	o.BaseDiscountRefunded = &v
}

// GetBaseGrandTotal returns the BaseGrandTotal field value
func (o *SalesDataOrderInterface) GetBaseGrandTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BaseGrandTotal
}

// GetBaseGrandTotalOk returns a tuple with the BaseGrandTotal field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseGrandTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseGrandTotal, true
}

// SetBaseGrandTotal sets field value
func (o *SalesDataOrderInterface) SetBaseGrandTotal(v float32) {
	o.BaseGrandTotal = v
}

// GetBaseDiscountTaxCompensationAmount returns the BaseDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationAmount
}

// GetBaseDiscountTaxCompensationAmountOk returns a tuple with the BaseDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationAmount, true
}

// HasBaseDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationAmount field.
func (o *SalesDataOrderInterface) SetBaseDiscountTaxCompensationAmount(v float32) {
	o.BaseDiscountTaxCompensationAmount = &v
}

// GetBaseDiscountTaxCompensationInvoiced returns the BaseDiscountTaxCompensationInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseDiscountTaxCompensationInvoiced() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationInvoiced
}

// GetBaseDiscountTaxCompensationInvoicedOk returns a tuple with the BaseDiscountTaxCompensationInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseDiscountTaxCompensationInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationInvoiced, true
}

// HasBaseDiscountTaxCompensationInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseDiscountTaxCompensationInvoiced() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationInvoiced gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationInvoiced field.
func (o *SalesDataOrderInterface) SetBaseDiscountTaxCompensationInvoiced(v float32) {
	o.BaseDiscountTaxCompensationInvoiced = &v
}

// GetBaseDiscountTaxCompensationRefunded returns the BaseDiscountTaxCompensationRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseDiscountTaxCompensationRefunded() float32 {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseDiscountTaxCompensationRefunded
}

// GetBaseDiscountTaxCompensationRefundedOk returns a tuple with the BaseDiscountTaxCompensationRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseDiscountTaxCompensationRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseDiscountTaxCompensationRefunded) {
		return nil, false
	}
	return o.BaseDiscountTaxCompensationRefunded, true
}

// HasBaseDiscountTaxCompensationRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseDiscountTaxCompensationRefunded() bool {
	if o != nil && !IsNil(o.BaseDiscountTaxCompensationRefunded) {
		return true
	}

	return false
}

// SetBaseDiscountTaxCompensationRefunded gets a reference to the given float32 and assigns it to the BaseDiscountTaxCompensationRefunded field.
func (o *SalesDataOrderInterface) SetBaseDiscountTaxCompensationRefunded(v float32) {
	o.BaseDiscountTaxCompensationRefunded = &v
}

// GetBaseShippingAmount returns the BaseShippingAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingAmount() float32 {
	if o == nil || IsNil(o.BaseShippingAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingAmount
}

// GetBaseShippingAmountOk returns a tuple with the BaseShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingAmount) {
		return nil, false
	}
	return o.BaseShippingAmount, true
}

// HasBaseShippingAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingAmount() bool {
	if o != nil && !IsNil(o.BaseShippingAmount) {
		return true
	}

	return false
}

// SetBaseShippingAmount gets a reference to the given float32 and assigns it to the BaseShippingAmount field.
func (o *SalesDataOrderInterface) SetBaseShippingAmount(v float32) {
	o.BaseShippingAmount = &v
}

// GetBaseShippingCanceled returns the BaseShippingCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingCanceled() float32 {
	if o == nil || IsNil(o.BaseShippingCanceled) {
		var ret float32
		return ret
	}
	return *o.BaseShippingCanceled
}

// GetBaseShippingCanceledOk returns a tuple with the BaseShippingCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingCanceled) {
		return nil, false
	}
	return o.BaseShippingCanceled, true
}

// HasBaseShippingCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingCanceled() bool {
	if o != nil && !IsNil(o.BaseShippingCanceled) {
		return true
	}

	return false
}

// SetBaseShippingCanceled gets a reference to the given float32 and assigns it to the BaseShippingCanceled field.
func (o *SalesDataOrderInterface) SetBaseShippingCanceled(v float32) {
	o.BaseShippingCanceled = &v
}

// GetBaseShippingDiscountAmount returns the BaseShippingDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingDiscountAmount() float32 {
	if o == nil || IsNil(o.BaseShippingDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingDiscountAmount
}

// GetBaseShippingDiscountAmountOk returns a tuple with the BaseShippingDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingDiscountAmount) {
		return nil, false
	}
	return o.BaseShippingDiscountAmount, true
}

// HasBaseShippingDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingDiscountAmount() bool {
	if o != nil && !IsNil(o.BaseShippingDiscountAmount) {
		return true
	}

	return false
}

// SetBaseShippingDiscountAmount gets a reference to the given float32 and assigns it to the BaseShippingDiscountAmount field.
func (o *SalesDataOrderInterface) SetBaseShippingDiscountAmount(v float32) {
	o.BaseShippingDiscountAmount = &v
}

// GetBaseShippingDiscountTaxCompensationAmnt returns the BaseShippingDiscountTaxCompensationAmnt field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingDiscountTaxCompensationAmnt() float32 {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		var ret float32
		return ret
	}
	return *o.BaseShippingDiscountTaxCompensationAmnt
}

// GetBaseShippingDiscountTaxCompensationAmntOk returns a tuple with the BaseShippingDiscountTaxCompensationAmnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingDiscountTaxCompensationAmntOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return nil, false
	}
	return o.BaseShippingDiscountTaxCompensationAmnt, true
}

// HasBaseShippingDiscountTaxCompensationAmnt returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingDiscountTaxCompensationAmnt() bool {
	if o != nil && !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return true
	}

	return false
}

// SetBaseShippingDiscountTaxCompensationAmnt gets a reference to the given float32 and assigns it to the BaseShippingDiscountTaxCompensationAmnt field.
func (o *SalesDataOrderInterface) SetBaseShippingDiscountTaxCompensationAmnt(v float32) {
	o.BaseShippingDiscountTaxCompensationAmnt = &v
}

// GetBaseShippingInclTax returns the BaseShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingInclTax() float32 {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseShippingInclTax
}

// GetBaseShippingInclTaxOk returns a tuple with the BaseShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		return nil, false
	}
	return o.BaseShippingInclTax, true
}

// HasBaseShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingInclTax() bool {
	if o != nil && !IsNil(o.BaseShippingInclTax) {
		return true
	}

	return false
}

// SetBaseShippingInclTax gets a reference to the given float32 and assigns it to the BaseShippingInclTax field.
func (o *SalesDataOrderInterface) SetBaseShippingInclTax(v float32) {
	o.BaseShippingInclTax = &v
}

// GetBaseShippingInvoiced returns the BaseShippingInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingInvoiced() float32 {
	if o == nil || IsNil(o.BaseShippingInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseShippingInvoiced
}

// GetBaseShippingInvoicedOk returns a tuple with the BaseShippingInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingInvoiced) {
		return nil, false
	}
	return o.BaseShippingInvoiced, true
}

// HasBaseShippingInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingInvoiced() bool {
	if o != nil && !IsNil(o.BaseShippingInvoiced) {
		return true
	}

	return false
}

// SetBaseShippingInvoiced gets a reference to the given float32 and assigns it to the BaseShippingInvoiced field.
func (o *SalesDataOrderInterface) SetBaseShippingInvoiced(v float32) {
	o.BaseShippingInvoiced = &v
}

// GetBaseShippingRefunded returns the BaseShippingRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingRefunded() float32 {
	if o == nil || IsNil(o.BaseShippingRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseShippingRefunded
}

// GetBaseShippingRefundedOk returns a tuple with the BaseShippingRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingRefunded) {
		return nil, false
	}
	return o.BaseShippingRefunded, true
}

// HasBaseShippingRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingRefunded() bool {
	if o != nil && !IsNil(o.BaseShippingRefunded) {
		return true
	}

	return false
}

// SetBaseShippingRefunded gets a reference to the given float32 and assigns it to the BaseShippingRefunded field.
func (o *SalesDataOrderInterface) SetBaseShippingRefunded(v float32) {
	o.BaseShippingRefunded = &v
}

// GetBaseShippingTaxAmount returns the BaseShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingTaxAmount() float32 {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingTaxAmount
}

// GetBaseShippingTaxAmountOk returns a tuple with the BaseShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		return nil, false
	}
	return o.BaseShippingTaxAmount, true
}

// HasBaseShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingTaxAmount() bool {
	if o != nil && !IsNil(o.BaseShippingTaxAmount) {
		return true
	}

	return false
}

// SetBaseShippingTaxAmount gets a reference to the given float32 and assigns it to the BaseShippingTaxAmount field.
func (o *SalesDataOrderInterface) SetBaseShippingTaxAmount(v float32) {
	o.BaseShippingTaxAmount = &v
}

// GetBaseShippingTaxRefunded returns the BaseShippingTaxRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseShippingTaxRefunded() float32 {
	if o == nil || IsNil(o.BaseShippingTaxRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseShippingTaxRefunded
}

// GetBaseShippingTaxRefundedOk returns a tuple with the BaseShippingTaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseShippingTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingTaxRefunded) {
		return nil, false
	}
	return o.BaseShippingTaxRefunded, true
}

// HasBaseShippingTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseShippingTaxRefunded() bool {
	if o != nil && !IsNil(o.BaseShippingTaxRefunded) {
		return true
	}

	return false
}

// SetBaseShippingTaxRefunded gets a reference to the given float32 and assigns it to the BaseShippingTaxRefunded field.
func (o *SalesDataOrderInterface) SetBaseShippingTaxRefunded(v float32) {
	o.BaseShippingTaxRefunded = &v
}

// GetBaseSubtotal returns the BaseSubtotal field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseSubtotal() float32 {
	if o == nil || IsNil(o.BaseSubtotal) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotal
}

// GetBaseSubtotalOk returns a tuple with the BaseSubtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseSubtotalOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotal) {
		return nil, false
	}
	return o.BaseSubtotal, true
}

// HasBaseSubtotal returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseSubtotal() bool {
	if o != nil && !IsNil(o.BaseSubtotal) {
		return true
	}

	return false
}

// SetBaseSubtotal gets a reference to the given float32 and assigns it to the BaseSubtotal field.
func (o *SalesDataOrderInterface) SetBaseSubtotal(v float32) {
	o.BaseSubtotal = &v
}

// GetBaseSubtotalCanceled returns the BaseSubtotalCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseSubtotalCanceled() float32 {
	if o == nil || IsNil(o.BaseSubtotalCanceled) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotalCanceled
}

// GetBaseSubtotalCanceledOk returns a tuple with the BaseSubtotalCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseSubtotalCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotalCanceled) {
		return nil, false
	}
	return o.BaseSubtotalCanceled, true
}

// HasBaseSubtotalCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseSubtotalCanceled() bool {
	if o != nil && !IsNil(o.BaseSubtotalCanceled) {
		return true
	}

	return false
}

// SetBaseSubtotalCanceled gets a reference to the given float32 and assigns it to the BaseSubtotalCanceled field.
func (o *SalesDataOrderInterface) SetBaseSubtotalCanceled(v float32) {
	o.BaseSubtotalCanceled = &v
}

// GetBaseSubtotalInclTax returns the BaseSubtotalInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseSubtotalInclTax() float32 {
	if o == nil || IsNil(o.BaseSubtotalInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotalInclTax
}

// GetBaseSubtotalInclTaxOk returns a tuple with the BaseSubtotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseSubtotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotalInclTax) {
		return nil, false
	}
	return o.BaseSubtotalInclTax, true
}

// HasBaseSubtotalInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseSubtotalInclTax() bool {
	if o != nil && !IsNil(o.BaseSubtotalInclTax) {
		return true
	}

	return false
}

// SetBaseSubtotalInclTax gets a reference to the given float32 and assigns it to the BaseSubtotalInclTax field.
func (o *SalesDataOrderInterface) SetBaseSubtotalInclTax(v float32) {
	o.BaseSubtotalInclTax = &v
}

// GetBaseSubtotalInvoiced returns the BaseSubtotalInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseSubtotalInvoiced() float32 {
	if o == nil || IsNil(o.BaseSubtotalInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotalInvoiced
}

// GetBaseSubtotalInvoicedOk returns a tuple with the BaseSubtotalInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseSubtotalInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotalInvoiced) {
		return nil, false
	}
	return o.BaseSubtotalInvoiced, true
}

// HasBaseSubtotalInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseSubtotalInvoiced() bool {
	if o != nil && !IsNil(o.BaseSubtotalInvoiced) {
		return true
	}

	return false
}

// SetBaseSubtotalInvoiced gets a reference to the given float32 and assigns it to the BaseSubtotalInvoiced field.
func (o *SalesDataOrderInterface) SetBaseSubtotalInvoiced(v float32) {
	o.BaseSubtotalInvoiced = &v
}

// GetBaseSubtotalRefunded returns the BaseSubtotalRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseSubtotalRefunded() float32 {
	if o == nil || IsNil(o.BaseSubtotalRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseSubtotalRefunded
}

// GetBaseSubtotalRefundedOk returns a tuple with the BaseSubtotalRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseSubtotalRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseSubtotalRefunded) {
		return nil, false
	}
	return o.BaseSubtotalRefunded, true
}

// HasBaseSubtotalRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseSubtotalRefunded() bool {
	if o != nil && !IsNil(o.BaseSubtotalRefunded) {
		return true
	}

	return false
}

// SetBaseSubtotalRefunded gets a reference to the given float32 and assigns it to the BaseSubtotalRefunded field.
func (o *SalesDataOrderInterface) SetBaseSubtotalRefunded(v float32) {
	o.BaseSubtotalRefunded = &v
}

// GetBaseTaxAmount returns the BaseTaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTaxAmount() float32 {
	if o == nil || IsNil(o.BaseTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseTaxAmount
}

// GetBaseTaxAmountOk returns a tuple with the BaseTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxAmount) {
		return nil, false
	}
	return o.BaseTaxAmount, true
}

// HasBaseTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTaxAmount() bool {
	if o != nil && !IsNil(o.BaseTaxAmount) {
		return true
	}

	return false
}

// SetBaseTaxAmount gets a reference to the given float32 and assigns it to the BaseTaxAmount field.
func (o *SalesDataOrderInterface) SetBaseTaxAmount(v float32) {
	o.BaseTaxAmount = &v
}

// GetBaseTaxCanceled returns the BaseTaxCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTaxCanceled() float32 {
	if o == nil || IsNil(o.BaseTaxCanceled) {
		var ret float32
		return ret
	}
	return *o.BaseTaxCanceled
}

// GetBaseTaxCanceledOk returns a tuple with the BaseTaxCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTaxCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxCanceled) {
		return nil, false
	}
	return o.BaseTaxCanceled, true
}

// HasBaseTaxCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTaxCanceled() bool {
	if o != nil && !IsNil(o.BaseTaxCanceled) {
		return true
	}

	return false
}

// SetBaseTaxCanceled gets a reference to the given float32 and assigns it to the BaseTaxCanceled field.
func (o *SalesDataOrderInterface) SetBaseTaxCanceled(v float32) {
	o.BaseTaxCanceled = &v
}

// GetBaseTaxInvoiced returns the BaseTaxInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTaxInvoiced() float32 {
	if o == nil || IsNil(o.BaseTaxInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseTaxInvoiced
}

// GetBaseTaxInvoicedOk returns a tuple with the BaseTaxInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTaxInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxInvoiced) {
		return nil, false
	}
	return o.BaseTaxInvoiced, true
}

// HasBaseTaxInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTaxInvoiced() bool {
	if o != nil && !IsNil(o.BaseTaxInvoiced) {
		return true
	}

	return false
}

// SetBaseTaxInvoiced gets a reference to the given float32 and assigns it to the BaseTaxInvoiced field.
func (o *SalesDataOrderInterface) SetBaseTaxInvoiced(v float32) {
	o.BaseTaxInvoiced = &v
}

// GetBaseTaxRefunded returns the BaseTaxRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTaxRefunded() float32 {
	if o == nil || IsNil(o.BaseTaxRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseTaxRefunded
}

// GetBaseTaxRefundedOk returns a tuple with the BaseTaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTaxRefunded) {
		return nil, false
	}
	return o.BaseTaxRefunded, true
}

// HasBaseTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTaxRefunded() bool {
	if o != nil && !IsNil(o.BaseTaxRefunded) {
		return true
	}

	return false
}

// SetBaseTaxRefunded gets a reference to the given float32 and assigns it to the BaseTaxRefunded field.
func (o *SalesDataOrderInterface) SetBaseTaxRefunded(v float32) {
	o.BaseTaxRefunded = &v
}

// GetBaseTotalCanceled returns the BaseTotalCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalCanceled() float32 {
	if o == nil || IsNil(o.BaseTotalCanceled) {
		var ret float32
		return ret
	}
	return *o.BaseTotalCanceled
}

// GetBaseTotalCanceledOk returns a tuple with the BaseTotalCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalCanceled) {
		return nil, false
	}
	return o.BaseTotalCanceled, true
}

// HasBaseTotalCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalCanceled() bool {
	if o != nil && !IsNil(o.BaseTotalCanceled) {
		return true
	}

	return false
}

// SetBaseTotalCanceled gets a reference to the given float32 and assigns it to the BaseTotalCanceled field.
func (o *SalesDataOrderInterface) SetBaseTotalCanceled(v float32) {
	o.BaseTotalCanceled = &v
}

// GetBaseTotalDue returns the BaseTotalDue field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalDue() float32 {
	if o == nil || IsNil(o.BaseTotalDue) {
		var ret float32
		return ret
	}
	return *o.BaseTotalDue
}

// GetBaseTotalDueOk returns a tuple with the BaseTotalDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalDueOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalDue) {
		return nil, false
	}
	return o.BaseTotalDue, true
}

// HasBaseTotalDue returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalDue() bool {
	if o != nil && !IsNil(o.BaseTotalDue) {
		return true
	}

	return false
}

// SetBaseTotalDue gets a reference to the given float32 and assigns it to the BaseTotalDue field.
func (o *SalesDataOrderInterface) SetBaseTotalDue(v float32) {
	o.BaseTotalDue = &v
}

// GetBaseTotalInvoiced returns the BaseTotalInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalInvoiced() float32 {
	if o == nil || IsNil(o.BaseTotalInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseTotalInvoiced
}

// GetBaseTotalInvoicedOk returns a tuple with the BaseTotalInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalInvoiced) {
		return nil, false
	}
	return o.BaseTotalInvoiced, true
}

// HasBaseTotalInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalInvoiced() bool {
	if o != nil && !IsNil(o.BaseTotalInvoiced) {
		return true
	}

	return false
}

// SetBaseTotalInvoiced gets a reference to the given float32 and assigns it to the BaseTotalInvoiced field.
func (o *SalesDataOrderInterface) SetBaseTotalInvoiced(v float32) {
	o.BaseTotalInvoiced = &v
}

// GetBaseTotalInvoicedCost returns the BaseTotalInvoicedCost field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalInvoicedCost() float32 {
	if o == nil || IsNil(o.BaseTotalInvoicedCost) {
		var ret float32
		return ret
	}
	return *o.BaseTotalInvoicedCost
}

// GetBaseTotalInvoicedCostOk returns a tuple with the BaseTotalInvoicedCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalInvoicedCostOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalInvoicedCost) {
		return nil, false
	}
	return o.BaseTotalInvoicedCost, true
}

// HasBaseTotalInvoicedCost returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalInvoicedCost() bool {
	if o != nil && !IsNil(o.BaseTotalInvoicedCost) {
		return true
	}

	return false
}

// SetBaseTotalInvoicedCost gets a reference to the given float32 and assigns it to the BaseTotalInvoicedCost field.
func (o *SalesDataOrderInterface) SetBaseTotalInvoicedCost(v float32) {
	o.BaseTotalInvoicedCost = &v
}

// GetBaseTotalOfflineRefunded returns the BaseTotalOfflineRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalOfflineRefunded() float32 {
	if o == nil || IsNil(o.BaseTotalOfflineRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseTotalOfflineRefunded
}

// GetBaseTotalOfflineRefundedOk returns a tuple with the BaseTotalOfflineRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalOfflineRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalOfflineRefunded) {
		return nil, false
	}
	return o.BaseTotalOfflineRefunded, true
}

// HasBaseTotalOfflineRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalOfflineRefunded() bool {
	if o != nil && !IsNil(o.BaseTotalOfflineRefunded) {
		return true
	}

	return false
}

// SetBaseTotalOfflineRefunded gets a reference to the given float32 and assigns it to the BaseTotalOfflineRefunded field.
func (o *SalesDataOrderInterface) SetBaseTotalOfflineRefunded(v float32) {
	o.BaseTotalOfflineRefunded = &v
}

// GetBaseTotalOnlineRefunded returns the BaseTotalOnlineRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalOnlineRefunded() float32 {
	if o == nil || IsNil(o.BaseTotalOnlineRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseTotalOnlineRefunded
}

// GetBaseTotalOnlineRefundedOk returns a tuple with the BaseTotalOnlineRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalOnlineRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalOnlineRefunded) {
		return nil, false
	}
	return o.BaseTotalOnlineRefunded, true
}

// HasBaseTotalOnlineRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalOnlineRefunded() bool {
	if o != nil && !IsNil(o.BaseTotalOnlineRefunded) {
		return true
	}

	return false
}

// SetBaseTotalOnlineRefunded gets a reference to the given float32 and assigns it to the BaseTotalOnlineRefunded field.
func (o *SalesDataOrderInterface) SetBaseTotalOnlineRefunded(v float32) {
	o.BaseTotalOnlineRefunded = &v
}

// GetBaseTotalPaid returns the BaseTotalPaid field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalPaid() float32 {
	if o == nil || IsNil(o.BaseTotalPaid) {
		var ret float32
		return ret
	}
	return *o.BaseTotalPaid
}

// GetBaseTotalPaidOk returns a tuple with the BaseTotalPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalPaidOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalPaid) {
		return nil, false
	}
	return o.BaseTotalPaid, true
}

// HasBaseTotalPaid returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalPaid() bool {
	if o != nil && !IsNil(o.BaseTotalPaid) {
		return true
	}

	return false
}

// SetBaseTotalPaid gets a reference to the given float32 and assigns it to the BaseTotalPaid field.
func (o *SalesDataOrderInterface) SetBaseTotalPaid(v float32) {
	o.BaseTotalPaid = &v
}

// GetBaseTotalQtyOrdered returns the BaseTotalQtyOrdered field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalQtyOrdered() float32 {
	if o == nil || IsNil(o.BaseTotalQtyOrdered) {
		var ret float32
		return ret
	}
	return *o.BaseTotalQtyOrdered
}

// GetBaseTotalQtyOrderedOk returns a tuple with the BaseTotalQtyOrdered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalQtyOrderedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalQtyOrdered) {
		return nil, false
	}
	return o.BaseTotalQtyOrdered, true
}

// HasBaseTotalQtyOrdered returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalQtyOrdered() bool {
	if o != nil && !IsNil(o.BaseTotalQtyOrdered) {
		return true
	}

	return false
}

// SetBaseTotalQtyOrdered gets a reference to the given float32 and assigns it to the BaseTotalQtyOrdered field.
func (o *SalesDataOrderInterface) SetBaseTotalQtyOrdered(v float32) {
	o.BaseTotalQtyOrdered = &v
}

// GetBaseTotalRefunded returns the BaseTotalRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseTotalRefunded() float32 {
	if o == nil || IsNil(o.BaseTotalRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseTotalRefunded
}

// GetBaseTotalRefundedOk returns a tuple with the BaseTotalRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseTotalRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseTotalRefunded) {
		return nil, false
	}
	return o.BaseTotalRefunded, true
}

// HasBaseTotalRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseTotalRefunded() bool {
	if o != nil && !IsNil(o.BaseTotalRefunded) {
		return true
	}

	return false
}

// SetBaseTotalRefunded gets a reference to the given float32 and assigns it to the BaseTotalRefunded field.
func (o *SalesDataOrderInterface) SetBaseTotalRefunded(v float32) {
	o.BaseTotalRefunded = &v
}

// GetBaseToGlobalRate returns the BaseToGlobalRate field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseToGlobalRate() float32 {
	if o == nil || IsNil(o.BaseToGlobalRate) {
		var ret float32
		return ret
	}
	return *o.BaseToGlobalRate
}

// GetBaseToGlobalRateOk returns a tuple with the BaseToGlobalRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseToGlobalRateOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseToGlobalRate) {
		return nil, false
	}
	return o.BaseToGlobalRate, true
}

// HasBaseToGlobalRate returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseToGlobalRate() bool {
	if o != nil && !IsNil(o.BaseToGlobalRate) {
		return true
	}

	return false
}

// SetBaseToGlobalRate gets a reference to the given float32 and assigns it to the BaseToGlobalRate field.
func (o *SalesDataOrderInterface) SetBaseToGlobalRate(v float32) {
	o.BaseToGlobalRate = &v
}

// GetBaseToOrderRate returns the BaseToOrderRate field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBaseToOrderRate() float32 {
	if o == nil || IsNil(o.BaseToOrderRate) {
		var ret float32
		return ret
	}
	return *o.BaseToOrderRate
}

// GetBaseToOrderRateOk returns a tuple with the BaseToOrderRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBaseToOrderRateOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseToOrderRate) {
		return nil, false
	}
	return o.BaseToOrderRate, true
}

// HasBaseToOrderRate returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBaseToOrderRate() bool {
	if o != nil && !IsNil(o.BaseToOrderRate) {
		return true
	}

	return false
}

// SetBaseToOrderRate gets a reference to the given float32 and assigns it to the BaseToOrderRate field.
func (o *SalesDataOrderInterface) SetBaseToOrderRate(v float32) {
	o.BaseToOrderRate = &v
}

// GetBillingAddressId returns the BillingAddressId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBillingAddressId() int32 {
	if o == nil || IsNil(o.BillingAddressId) {
		var ret int32
		return ret
	}
	return *o.BillingAddressId
}

// GetBillingAddressIdOk returns a tuple with the BillingAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBillingAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingAddressId) {
		return nil, false
	}
	return o.BillingAddressId, true
}

// HasBillingAddressId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBillingAddressId() bool {
	if o != nil && !IsNil(o.BillingAddressId) {
		return true
	}

	return false
}

// SetBillingAddressId gets a reference to the given int32 and assigns it to the BillingAddressId field.
func (o *SalesDataOrderInterface) SetBillingAddressId(v int32) {
	o.BillingAddressId = &v
}

// GetCanShipPartially returns the CanShipPartially field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCanShipPartially() int32 {
	if o == nil || IsNil(o.CanShipPartially) {
		var ret int32
		return ret
	}
	return *o.CanShipPartially
}

// GetCanShipPartiallyOk returns a tuple with the CanShipPartially field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCanShipPartiallyOk() (*int32, bool) {
	if o == nil || IsNil(o.CanShipPartially) {
		return nil, false
	}
	return o.CanShipPartially, true
}

// HasCanShipPartially returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCanShipPartially() bool {
	if o != nil && !IsNil(o.CanShipPartially) {
		return true
	}

	return false
}

// SetCanShipPartially gets a reference to the given int32 and assigns it to the CanShipPartially field.
func (o *SalesDataOrderInterface) SetCanShipPartially(v int32) {
	o.CanShipPartially = &v
}

// GetCanShipPartiallyItem returns the CanShipPartiallyItem field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCanShipPartiallyItem() int32 {
	if o == nil || IsNil(o.CanShipPartiallyItem) {
		var ret int32
		return ret
	}
	return *o.CanShipPartiallyItem
}

// GetCanShipPartiallyItemOk returns a tuple with the CanShipPartiallyItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCanShipPartiallyItemOk() (*int32, bool) {
	if o == nil || IsNil(o.CanShipPartiallyItem) {
		return nil, false
	}
	return o.CanShipPartiallyItem, true
}

// HasCanShipPartiallyItem returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCanShipPartiallyItem() bool {
	if o != nil && !IsNil(o.CanShipPartiallyItem) {
		return true
	}

	return false
}

// SetCanShipPartiallyItem gets a reference to the given int32 and assigns it to the CanShipPartiallyItem field.
func (o *SalesDataOrderInterface) SetCanShipPartiallyItem(v int32) {
	o.CanShipPartiallyItem = &v
}

// GetCouponCode returns the CouponCode field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCouponCode() string {
	if o == nil || IsNil(o.CouponCode) {
		var ret string
		return ret
	}
	return *o.CouponCode
}

// GetCouponCodeOk returns a tuple with the CouponCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCouponCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CouponCode) {
		return nil, false
	}
	return o.CouponCode, true
}

// HasCouponCode returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCouponCode() bool {
	if o != nil && !IsNil(o.CouponCode) {
		return true
	}

	return false
}

// SetCouponCode gets a reference to the given string and assigns it to the CouponCode field.
func (o *SalesDataOrderInterface) SetCouponCode(v string) {
	o.CouponCode = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *SalesDataOrderInterface) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCustomerDob returns the CustomerDob field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerDob() string {
	if o == nil || IsNil(o.CustomerDob) {
		var ret string
		return ret
	}
	return *o.CustomerDob
}

// GetCustomerDobOk returns a tuple with the CustomerDob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerDobOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerDob) {
		return nil, false
	}
	return o.CustomerDob, true
}

// HasCustomerDob returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerDob() bool {
	if o != nil && !IsNil(o.CustomerDob) {
		return true
	}

	return false
}

// SetCustomerDob gets a reference to the given string and assigns it to the CustomerDob field.
func (o *SalesDataOrderInterface) SetCustomerDob(v string) {
	o.CustomerDob = &v
}

// GetCustomerEmail returns the CustomerEmail field value
func (o *SalesDataOrderInterface) GetCustomerEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerEmail
}

// GetCustomerEmailOk returns a tuple with the CustomerEmail field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerEmail, true
}

// SetCustomerEmail sets field value
func (o *SalesDataOrderInterface) SetCustomerEmail(v string) {
	o.CustomerEmail = v
}

// GetCustomerFirstname returns the CustomerFirstname field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerFirstname() string {
	if o == nil || IsNil(o.CustomerFirstname) {
		var ret string
		return ret
	}
	return *o.CustomerFirstname
}

// GetCustomerFirstnameOk returns a tuple with the CustomerFirstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerFirstname) {
		return nil, false
	}
	return o.CustomerFirstname, true
}

// HasCustomerFirstname returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerFirstname() bool {
	if o != nil && !IsNil(o.CustomerFirstname) {
		return true
	}

	return false
}

// SetCustomerFirstname gets a reference to the given string and assigns it to the CustomerFirstname field.
func (o *SalesDataOrderInterface) SetCustomerFirstname(v string) {
	o.CustomerFirstname = &v
}

// GetCustomerGender returns the CustomerGender field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerGender() int32 {
	if o == nil || IsNil(o.CustomerGender) {
		var ret int32
		return ret
	}
	return *o.CustomerGender
}

// GetCustomerGenderOk returns a tuple with the CustomerGender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerGenderOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerGender) {
		return nil, false
	}
	return o.CustomerGender, true
}

// HasCustomerGender returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerGender() bool {
	if o != nil && !IsNil(o.CustomerGender) {
		return true
	}

	return false
}

// SetCustomerGender gets a reference to the given int32 and assigns it to the CustomerGender field.
func (o *SalesDataOrderInterface) SetCustomerGender(v int32) {
	o.CustomerGender = &v
}

// GetCustomerGroupId returns the CustomerGroupId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerGroupId() int32 {
	if o == nil || IsNil(o.CustomerGroupId) {
		var ret int32
		return ret
	}
	return *o.CustomerGroupId
}

// GetCustomerGroupIdOk returns a tuple with the CustomerGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerGroupId) {
		return nil, false
	}
	return o.CustomerGroupId, true
}

// HasCustomerGroupId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerGroupId() bool {
	if o != nil && !IsNil(o.CustomerGroupId) {
		return true
	}

	return false
}

// SetCustomerGroupId gets a reference to the given int32 and assigns it to the CustomerGroupId field.
func (o *SalesDataOrderInterface) SetCustomerGroupId(v int32) {
	o.CustomerGroupId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *SalesDataOrderInterface) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetCustomerIsGuest returns the CustomerIsGuest field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerIsGuest() int32 {
	if o == nil || IsNil(o.CustomerIsGuest) {
		var ret int32
		return ret
	}
	return *o.CustomerIsGuest
}

// GetCustomerIsGuestOk returns a tuple with the CustomerIsGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerIsGuestOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerIsGuest) {
		return nil, false
	}
	return o.CustomerIsGuest, true
}

// HasCustomerIsGuest returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerIsGuest() bool {
	if o != nil && !IsNil(o.CustomerIsGuest) {
		return true
	}

	return false
}

// SetCustomerIsGuest gets a reference to the given int32 and assigns it to the CustomerIsGuest field.
func (o *SalesDataOrderInterface) SetCustomerIsGuest(v int32) {
	o.CustomerIsGuest = &v
}

// GetCustomerLastname returns the CustomerLastname field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerLastname() string {
	if o == nil || IsNil(o.CustomerLastname) {
		var ret string
		return ret
	}
	return *o.CustomerLastname
}

// GetCustomerLastnameOk returns a tuple with the CustomerLastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerLastnameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerLastname) {
		return nil, false
	}
	return o.CustomerLastname, true
}

// HasCustomerLastname returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerLastname() bool {
	if o != nil && !IsNil(o.CustomerLastname) {
		return true
	}

	return false
}

// SetCustomerLastname gets a reference to the given string and assigns it to the CustomerLastname field.
func (o *SalesDataOrderInterface) SetCustomerLastname(v string) {
	o.CustomerLastname = &v
}

// GetCustomerMiddlename returns the CustomerMiddlename field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerMiddlename() string {
	if o == nil || IsNil(o.CustomerMiddlename) {
		var ret string
		return ret
	}
	return *o.CustomerMiddlename
}

// GetCustomerMiddlenameOk returns a tuple with the CustomerMiddlename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerMiddlenameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerMiddlename) {
		return nil, false
	}
	return o.CustomerMiddlename, true
}

// HasCustomerMiddlename returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerMiddlename() bool {
	if o != nil && !IsNil(o.CustomerMiddlename) {
		return true
	}

	return false
}

// SetCustomerMiddlename gets a reference to the given string and assigns it to the CustomerMiddlename field.
func (o *SalesDataOrderInterface) SetCustomerMiddlename(v string) {
	o.CustomerMiddlename = &v
}

// GetCustomerNote returns the CustomerNote field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerNote() string {
	if o == nil || IsNil(o.CustomerNote) {
		var ret string
		return ret
	}
	return *o.CustomerNote
}

// GetCustomerNoteOk returns a tuple with the CustomerNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerNoteOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerNote) {
		return nil, false
	}
	return o.CustomerNote, true
}

// HasCustomerNote returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerNote() bool {
	if o != nil && !IsNil(o.CustomerNote) {
		return true
	}

	return false
}

// SetCustomerNote gets a reference to the given string and assigns it to the CustomerNote field.
func (o *SalesDataOrderInterface) SetCustomerNote(v string) {
	o.CustomerNote = &v
}

// GetCustomerNoteNotify returns the CustomerNoteNotify field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerNoteNotify() int32 {
	if o == nil || IsNil(o.CustomerNoteNotify) {
		var ret int32
		return ret
	}
	return *o.CustomerNoteNotify
}

// GetCustomerNoteNotifyOk returns a tuple with the CustomerNoteNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerNoteNotifyOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerNoteNotify) {
		return nil, false
	}
	return o.CustomerNoteNotify, true
}

// HasCustomerNoteNotify returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerNoteNotify() bool {
	if o != nil && !IsNil(o.CustomerNoteNotify) {
		return true
	}

	return false
}

// SetCustomerNoteNotify gets a reference to the given int32 and assigns it to the CustomerNoteNotify field.
func (o *SalesDataOrderInterface) SetCustomerNoteNotify(v int32) {
	o.CustomerNoteNotify = &v
}

// GetCustomerPrefix returns the CustomerPrefix field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerPrefix() string {
	if o == nil || IsNil(o.CustomerPrefix) {
		var ret string
		return ret
	}
	return *o.CustomerPrefix
}

// GetCustomerPrefixOk returns a tuple with the CustomerPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerPrefix) {
		return nil, false
	}
	return o.CustomerPrefix, true
}

// HasCustomerPrefix returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerPrefix() bool {
	if o != nil && !IsNil(o.CustomerPrefix) {
		return true
	}

	return false
}

// SetCustomerPrefix gets a reference to the given string and assigns it to the CustomerPrefix field.
func (o *SalesDataOrderInterface) SetCustomerPrefix(v string) {
	o.CustomerPrefix = &v
}

// GetCustomerSuffix returns the CustomerSuffix field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerSuffix() string {
	if o == nil || IsNil(o.CustomerSuffix) {
		var ret string
		return ret
	}
	return *o.CustomerSuffix
}

// GetCustomerSuffixOk returns a tuple with the CustomerSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerSuffix) {
		return nil, false
	}
	return o.CustomerSuffix, true
}

// HasCustomerSuffix returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerSuffix() bool {
	if o != nil && !IsNil(o.CustomerSuffix) {
		return true
	}

	return false
}

// SetCustomerSuffix gets a reference to the given string and assigns it to the CustomerSuffix field.
func (o *SalesDataOrderInterface) SetCustomerSuffix(v string) {
	o.CustomerSuffix = &v
}

// GetCustomerTaxvat returns the CustomerTaxvat field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetCustomerTaxvat() string {
	if o == nil || IsNil(o.CustomerTaxvat) {
		var ret string
		return ret
	}
	return *o.CustomerTaxvat
}

// GetCustomerTaxvatOk returns a tuple with the CustomerTaxvat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetCustomerTaxvatOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerTaxvat) {
		return nil, false
	}
	return o.CustomerTaxvat, true
}

// HasCustomerTaxvat returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasCustomerTaxvat() bool {
	if o != nil && !IsNil(o.CustomerTaxvat) {
		return true
	}

	return false
}

// SetCustomerTaxvat gets a reference to the given string and assigns it to the CustomerTaxvat field.
func (o *SalesDataOrderInterface) SetCustomerTaxvat(v string) {
	o.CustomerTaxvat = &v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *SalesDataOrderInterface) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetDiscountCanceled returns the DiscountCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountCanceled() float32 {
	if o == nil || IsNil(o.DiscountCanceled) {
		var ret float32
		return ret
	}
	return *o.DiscountCanceled
}

// GetDiscountCanceledOk returns a tuple with the DiscountCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountCanceled) {
		return nil, false
	}
	return o.DiscountCanceled, true
}

// HasDiscountCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountCanceled() bool {
	if o != nil && !IsNil(o.DiscountCanceled) {
		return true
	}

	return false
}

// SetDiscountCanceled gets a reference to the given float32 and assigns it to the DiscountCanceled field.
func (o *SalesDataOrderInterface) SetDiscountCanceled(v float32) {
	o.DiscountCanceled = &v
}

// GetDiscountDescription returns the DiscountDescription field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountDescription() string {
	if o == nil || IsNil(o.DiscountDescription) {
		var ret string
		return ret
	}
	return *o.DiscountDescription
}

// GetDiscountDescriptionOk returns a tuple with the DiscountDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountDescription) {
		return nil, false
	}
	return o.DiscountDescription, true
}

// HasDiscountDescription returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountDescription() bool {
	if o != nil && !IsNil(o.DiscountDescription) {
		return true
	}

	return false
}

// SetDiscountDescription gets a reference to the given string and assigns it to the DiscountDescription field.
func (o *SalesDataOrderInterface) SetDiscountDescription(v string) {
	o.DiscountDescription = &v
}

// GetDiscountInvoiced returns the DiscountInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountInvoiced() float32 {
	if o == nil || IsNil(o.DiscountInvoiced) {
		var ret float32
		return ret
	}
	return *o.DiscountInvoiced
}

// GetDiscountInvoicedOk returns a tuple with the DiscountInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountInvoiced) {
		return nil, false
	}
	return o.DiscountInvoiced, true
}

// HasDiscountInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountInvoiced() bool {
	if o != nil && !IsNil(o.DiscountInvoiced) {
		return true
	}

	return false
}

// SetDiscountInvoiced gets a reference to the given float32 and assigns it to the DiscountInvoiced field.
func (o *SalesDataOrderInterface) SetDiscountInvoiced(v float32) {
	o.DiscountInvoiced = &v
}

// GetDiscountRefunded returns the DiscountRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountRefunded() float32 {
	if o == nil || IsNil(o.DiscountRefunded) {
		var ret float32
		return ret
	}
	return *o.DiscountRefunded
}

// GetDiscountRefundedOk returns a tuple with the DiscountRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountRefunded) {
		return nil, false
	}
	return o.DiscountRefunded, true
}

// HasDiscountRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountRefunded() bool {
	if o != nil && !IsNil(o.DiscountRefunded) {
		return true
	}

	return false
}

// SetDiscountRefunded gets a reference to the given float32 and assigns it to the DiscountRefunded field.
func (o *SalesDataOrderInterface) SetDiscountRefunded(v float32) {
	o.DiscountRefunded = &v
}

// GetEditIncrement returns the EditIncrement field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetEditIncrement() int32 {
	if o == nil || IsNil(o.EditIncrement) {
		var ret int32
		return ret
	}
	return *o.EditIncrement
}

// GetEditIncrementOk returns a tuple with the EditIncrement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetEditIncrementOk() (*int32, bool) {
	if o == nil || IsNil(o.EditIncrement) {
		return nil, false
	}
	return o.EditIncrement, true
}

// HasEditIncrement returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasEditIncrement() bool {
	if o != nil && !IsNil(o.EditIncrement) {
		return true
	}

	return false
}

// SetEditIncrement gets a reference to the given int32 and assigns it to the EditIncrement field.
func (o *SalesDataOrderInterface) SetEditIncrement(v int32) {
	o.EditIncrement = &v
}

// GetEmailSent returns the EmailSent field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetEmailSent() int32 {
	if o == nil || IsNil(o.EmailSent) {
		var ret int32
		return ret
	}
	return *o.EmailSent
}

// GetEmailSentOk returns a tuple with the EmailSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetEmailSentOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailSent) {
		return nil, false
	}
	return o.EmailSent, true
}

// HasEmailSent returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasEmailSent() bool {
	if o != nil && !IsNil(o.EmailSent) {
		return true
	}

	return false
}

// SetEmailSent gets a reference to the given int32 and assigns it to the EmailSent field.
func (o *SalesDataOrderInterface) SetEmailSent(v int32) {
	o.EmailSent = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetEntityId() int32 {
	if o == nil || IsNil(o.EntityId) {
		var ret int32
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetEntityIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given int32 and assigns it to the EntityId field.
func (o *SalesDataOrderInterface) SetEntityId(v int32) {
	o.EntityId = &v
}

// GetExtCustomerId returns the ExtCustomerId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetExtCustomerId() string {
	if o == nil || IsNil(o.ExtCustomerId) {
		var ret string
		return ret
	}
	return *o.ExtCustomerId
}

// GetExtCustomerIdOk returns a tuple with the ExtCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetExtCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExtCustomerId) {
		return nil, false
	}
	return o.ExtCustomerId, true
}

// HasExtCustomerId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasExtCustomerId() bool {
	if o != nil && !IsNil(o.ExtCustomerId) {
		return true
	}

	return false
}

// SetExtCustomerId gets a reference to the given string and assigns it to the ExtCustomerId field.
func (o *SalesDataOrderInterface) SetExtCustomerId(v string) {
	o.ExtCustomerId = &v
}

// GetExtOrderId returns the ExtOrderId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetExtOrderId() string {
	if o == nil || IsNil(o.ExtOrderId) {
		var ret string
		return ret
	}
	return *o.ExtOrderId
}

// GetExtOrderIdOk returns a tuple with the ExtOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetExtOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExtOrderId) {
		return nil, false
	}
	return o.ExtOrderId, true
}

// HasExtOrderId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasExtOrderId() bool {
	if o != nil && !IsNil(o.ExtOrderId) {
		return true
	}

	return false
}

// SetExtOrderId gets a reference to the given string and assigns it to the ExtOrderId field.
func (o *SalesDataOrderInterface) SetExtOrderId(v string) {
	o.ExtOrderId = &v
}

// GetForcedShipmentWithInvoice returns the ForcedShipmentWithInvoice field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetForcedShipmentWithInvoice() int32 {
	if o == nil || IsNil(o.ForcedShipmentWithInvoice) {
		var ret int32
		return ret
	}
	return *o.ForcedShipmentWithInvoice
}

// GetForcedShipmentWithInvoiceOk returns a tuple with the ForcedShipmentWithInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetForcedShipmentWithInvoiceOk() (*int32, bool) {
	if o == nil || IsNil(o.ForcedShipmentWithInvoice) {
		return nil, false
	}
	return o.ForcedShipmentWithInvoice, true
}

// HasForcedShipmentWithInvoice returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasForcedShipmentWithInvoice() bool {
	if o != nil && !IsNil(o.ForcedShipmentWithInvoice) {
		return true
	}

	return false
}

// SetForcedShipmentWithInvoice gets a reference to the given int32 and assigns it to the ForcedShipmentWithInvoice field.
func (o *SalesDataOrderInterface) SetForcedShipmentWithInvoice(v int32) {
	o.ForcedShipmentWithInvoice = &v
}

// GetGlobalCurrencyCode returns the GlobalCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetGlobalCurrencyCode() string {
	if o == nil || IsNil(o.GlobalCurrencyCode) {
		var ret string
		return ret
	}
	return *o.GlobalCurrencyCode
}

// GetGlobalCurrencyCodeOk returns a tuple with the GlobalCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetGlobalCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalCurrencyCode) {
		return nil, false
	}
	return o.GlobalCurrencyCode, true
}

// HasGlobalCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasGlobalCurrencyCode() bool {
	if o != nil && !IsNil(o.GlobalCurrencyCode) {
		return true
	}

	return false
}

// SetGlobalCurrencyCode gets a reference to the given string and assigns it to the GlobalCurrencyCode field.
func (o *SalesDataOrderInterface) SetGlobalCurrencyCode(v string) {
	o.GlobalCurrencyCode = &v
}

// GetGrandTotal returns the GrandTotal field value
func (o *SalesDataOrderInterface) GetGrandTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.GrandTotal
}

// GetGrandTotalOk returns a tuple with the GrandTotal field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetGrandTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrandTotal, true
}

// SetGrandTotal sets field value
func (o *SalesDataOrderInterface) SetGrandTotal(v float32) {
	o.GrandTotal = v
}

// GetDiscountTaxCompensationAmount returns the DiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationAmount
}

// GetDiscountTaxCompensationAmountOk returns a tuple with the DiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.DiscountTaxCompensationAmount, true
}

// HasDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the DiscountTaxCompensationAmount field.
func (o *SalesDataOrderInterface) SetDiscountTaxCompensationAmount(v float32) {
	o.DiscountTaxCompensationAmount = &v
}

// GetDiscountTaxCompensationInvoiced returns the DiscountTaxCompensationInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountTaxCompensationInvoiced() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationInvoiced) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationInvoiced
}

// GetDiscountTaxCompensationInvoicedOk returns a tuple with the DiscountTaxCompensationInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountTaxCompensationInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationInvoiced) {
		return nil, false
	}
	return o.DiscountTaxCompensationInvoiced, true
}

// HasDiscountTaxCompensationInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountTaxCompensationInvoiced() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationInvoiced) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationInvoiced gets a reference to the given float32 and assigns it to the DiscountTaxCompensationInvoiced field.
func (o *SalesDataOrderInterface) SetDiscountTaxCompensationInvoiced(v float32) {
	o.DiscountTaxCompensationInvoiced = &v
}

// GetDiscountTaxCompensationRefunded returns the DiscountTaxCompensationRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetDiscountTaxCompensationRefunded() float32 {
	if o == nil || IsNil(o.DiscountTaxCompensationRefunded) {
		var ret float32
		return ret
	}
	return *o.DiscountTaxCompensationRefunded
}

// GetDiscountTaxCompensationRefundedOk returns a tuple with the DiscountTaxCompensationRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetDiscountTaxCompensationRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountTaxCompensationRefunded) {
		return nil, false
	}
	return o.DiscountTaxCompensationRefunded, true
}

// HasDiscountTaxCompensationRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasDiscountTaxCompensationRefunded() bool {
	if o != nil && !IsNil(o.DiscountTaxCompensationRefunded) {
		return true
	}

	return false
}

// SetDiscountTaxCompensationRefunded gets a reference to the given float32 and assigns it to the DiscountTaxCompensationRefunded field.
func (o *SalesDataOrderInterface) SetDiscountTaxCompensationRefunded(v float32) {
	o.DiscountTaxCompensationRefunded = &v
}

// GetHoldBeforeState returns the HoldBeforeState field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetHoldBeforeState() string {
	if o == nil || IsNil(o.HoldBeforeState) {
		var ret string
		return ret
	}
	return *o.HoldBeforeState
}

// GetHoldBeforeStateOk returns a tuple with the HoldBeforeState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetHoldBeforeStateOk() (*string, bool) {
	if o == nil || IsNil(o.HoldBeforeState) {
		return nil, false
	}
	return o.HoldBeforeState, true
}

// HasHoldBeforeState returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasHoldBeforeState() bool {
	if o != nil && !IsNil(o.HoldBeforeState) {
		return true
	}

	return false
}

// SetHoldBeforeState gets a reference to the given string and assigns it to the HoldBeforeState field.
func (o *SalesDataOrderInterface) SetHoldBeforeState(v string) {
	o.HoldBeforeState = &v
}

// GetHoldBeforeStatus returns the HoldBeforeStatus field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetHoldBeforeStatus() string {
	if o == nil || IsNil(o.HoldBeforeStatus) {
		var ret string
		return ret
	}
	return *o.HoldBeforeStatus
}

// GetHoldBeforeStatusOk returns a tuple with the HoldBeforeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetHoldBeforeStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HoldBeforeStatus) {
		return nil, false
	}
	return o.HoldBeforeStatus, true
}

// HasHoldBeforeStatus returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasHoldBeforeStatus() bool {
	if o != nil && !IsNil(o.HoldBeforeStatus) {
		return true
	}

	return false
}

// SetHoldBeforeStatus gets a reference to the given string and assigns it to the HoldBeforeStatus field.
func (o *SalesDataOrderInterface) SetHoldBeforeStatus(v string) {
	o.HoldBeforeStatus = &v
}

// GetIncrementId returns the IncrementId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetIncrementId() string {
	if o == nil || IsNil(o.IncrementId) {
		var ret string
		return ret
	}
	return *o.IncrementId
}

// GetIncrementIdOk returns a tuple with the IncrementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetIncrementIdOk() (*string, bool) {
	if o == nil || IsNil(o.IncrementId) {
		return nil, false
	}
	return o.IncrementId, true
}

// HasIncrementId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasIncrementId() bool {
	if o != nil && !IsNil(o.IncrementId) {
		return true
	}

	return false
}

// SetIncrementId gets a reference to the given string and assigns it to the IncrementId field.
func (o *SalesDataOrderInterface) SetIncrementId(v string) {
	o.IncrementId = &v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetIsVirtual() int32 {
	if o == nil || IsNil(o.IsVirtual) {
		var ret int32
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetIsVirtualOk() (*int32, bool) {
	if o == nil || IsNil(o.IsVirtual) {
		return nil, false
	}
	return o.IsVirtual, true
}

// HasIsVirtual returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasIsVirtual() bool {
	if o != nil && !IsNil(o.IsVirtual) {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given int32 and assigns it to the IsVirtual field.
func (o *SalesDataOrderInterface) SetIsVirtual(v int32) {
	o.IsVirtual = &v
}

// GetOrderCurrencyCode returns the OrderCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetOrderCurrencyCode() string {
	if o == nil || IsNil(o.OrderCurrencyCode) {
		var ret string
		return ret
	}
	return *o.OrderCurrencyCode
}

// GetOrderCurrencyCodeOk returns a tuple with the OrderCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetOrderCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderCurrencyCode) {
		return nil, false
	}
	return o.OrderCurrencyCode, true
}

// HasOrderCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasOrderCurrencyCode() bool {
	if o != nil && !IsNil(o.OrderCurrencyCode) {
		return true
	}

	return false
}

// SetOrderCurrencyCode gets a reference to the given string and assigns it to the OrderCurrencyCode field.
func (o *SalesDataOrderInterface) SetOrderCurrencyCode(v string) {
	o.OrderCurrencyCode = &v
}

// GetOriginalIncrementId returns the OriginalIncrementId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetOriginalIncrementId() string {
	if o == nil || IsNil(o.OriginalIncrementId) {
		var ret string
		return ret
	}
	return *o.OriginalIncrementId
}

// GetOriginalIncrementIdOk returns a tuple with the OriginalIncrementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetOriginalIncrementIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalIncrementId) {
		return nil, false
	}
	return o.OriginalIncrementId, true
}

// HasOriginalIncrementId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasOriginalIncrementId() bool {
	if o != nil && !IsNil(o.OriginalIncrementId) {
		return true
	}

	return false
}

// SetOriginalIncrementId gets a reference to the given string and assigns it to the OriginalIncrementId field.
func (o *SalesDataOrderInterface) SetOriginalIncrementId(v string) {
	o.OriginalIncrementId = &v
}

// GetPaymentAuthorizationAmount returns the PaymentAuthorizationAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetPaymentAuthorizationAmount() float32 {
	if o == nil || IsNil(o.PaymentAuthorizationAmount) {
		var ret float32
		return ret
	}
	return *o.PaymentAuthorizationAmount
}

// GetPaymentAuthorizationAmountOk returns a tuple with the PaymentAuthorizationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetPaymentAuthorizationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.PaymentAuthorizationAmount) {
		return nil, false
	}
	return o.PaymentAuthorizationAmount, true
}

// HasPaymentAuthorizationAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasPaymentAuthorizationAmount() bool {
	if o != nil && !IsNil(o.PaymentAuthorizationAmount) {
		return true
	}

	return false
}

// SetPaymentAuthorizationAmount gets a reference to the given float32 and assigns it to the PaymentAuthorizationAmount field.
func (o *SalesDataOrderInterface) SetPaymentAuthorizationAmount(v float32) {
	o.PaymentAuthorizationAmount = &v
}

// GetPaymentAuthExpiration returns the PaymentAuthExpiration field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetPaymentAuthExpiration() int32 {
	if o == nil || IsNil(o.PaymentAuthExpiration) {
		var ret int32
		return ret
	}
	return *o.PaymentAuthExpiration
}

// GetPaymentAuthExpirationOk returns a tuple with the PaymentAuthExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetPaymentAuthExpirationOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentAuthExpiration) {
		return nil, false
	}
	return o.PaymentAuthExpiration, true
}

// HasPaymentAuthExpiration returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasPaymentAuthExpiration() bool {
	if o != nil && !IsNil(o.PaymentAuthExpiration) {
		return true
	}

	return false
}

// SetPaymentAuthExpiration gets a reference to the given int32 and assigns it to the PaymentAuthExpiration field.
func (o *SalesDataOrderInterface) SetPaymentAuthExpiration(v int32) {
	o.PaymentAuthExpiration = &v
}

// GetProtectCode returns the ProtectCode field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetProtectCode() string {
	if o == nil || IsNil(o.ProtectCode) {
		var ret string
		return ret
	}
	return *o.ProtectCode
}

// GetProtectCodeOk returns a tuple with the ProtectCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetProtectCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectCode) {
		return nil, false
	}
	return o.ProtectCode, true
}

// HasProtectCode returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasProtectCode() bool {
	if o != nil && !IsNil(o.ProtectCode) {
		return true
	}

	return false
}

// SetProtectCode gets a reference to the given string and assigns it to the ProtectCode field.
func (o *SalesDataOrderInterface) SetProtectCode(v string) {
	o.ProtectCode = &v
}

// GetQuoteAddressId returns the QuoteAddressId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetQuoteAddressId() int32 {
	if o == nil || IsNil(o.QuoteAddressId) {
		var ret int32
		return ret
	}
	return *o.QuoteAddressId
}

// GetQuoteAddressIdOk returns a tuple with the QuoteAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetQuoteAddressIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuoteAddressId) {
		return nil, false
	}
	return o.QuoteAddressId, true
}

// HasQuoteAddressId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasQuoteAddressId() bool {
	if o != nil && !IsNil(o.QuoteAddressId) {
		return true
	}

	return false
}

// SetQuoteAddressId gets a reference to the given int32 and assigns it to the QuoteAddressId field.
func (o *SalesDataOrderInterface) SetQuoteAddressId(v int32) {
	o.QuoteAddressId = &v
}

// GetQuoteId returns the QuoteId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetQuoteId() int32 {
	if o == nil || IsNil(o.QuoteId) {
		var ret int32
		return ret
	}
	return *o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetQuoteIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QuoteId) {
		return nil, false
	}
	return o.QuoteId, true
}

// HasQuoteId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasQuoteId() bool {
	if o != nil && !IsNil(o.QuoteId) {
		return true
	}

	return false
}

// SetQuoteId gets a reference to the given int32 and assigns it to the QuoteId field.
func (o *SalesDataOrderInterface) SetQuoteId(v int32) {
	o.QuoteId = &v
}

// GetRelationChildId returns the RelationChildId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetRelationChildId() string {
	if o == nil || IsNil(o.RelationChildId) {
		var ret string
		return ret
	}
	return *o.RelationChildId
}

// GetRelationChildIdOk returns a tuple with the RelationChildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetRelationChildIdOk() (*string, bool) {
	if o == nil || IsNil(o.RelationChildId) {
		return nil, false
	}
	return o.RelationChildId, true
}

// HasRelationChildId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasRelationChildId() bool {
	if o != nil && !IsNil(o.RelationChildId) {
		return true
	}

	return false
}

// SetRelationChildId gets a reference to the given string and assigns it to the RelationChildId field.
func (o *SalesDataOrderInterface) SetRelationChildId(v string) {
	o.RelationChildId = &v
}

// GetRelationChildRealId returns the RelationChildRealId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetRelationChildRealId() string {
	if o == nil || IsNil(o.RelationChildRealId) {
		var ret string
		return ret
	}
	return *o.RelationChildRealId
}

// GetRelationChildRealIdOk returns a tuple with the RelationChildRealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetRelationChildRealIdOk() (*string, bool) {
	if o == nil || IsNil(o.RelationChildRealId) {
		return nil, false
	}
	return o.RelationChildRealId, true
}

// HasRelationChildRealId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasRelationChildRealId() bool {
	if o != nil && !IsNil(o.RelationChildRealId) {
		return true
	}

	return false
}

// SetRelationChildRealId gets a reference to the given string and assigns it to the RelationChildRealId field.
func (o *SalesDataOrderInterface) SetRelationChildRealId(v string) {
	o.RelationChildRealId = &v
}

// GetRelationParentId returns the RelationParentId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetRelationParentId() string {
	if o == nil || IsNil(o.RelationParentId) {
		var ret string
		return ret
	}
	return *o.RelationParentId
}

// GetRelationParentIdOk returns a tuple with the RelationParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetRelationParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.RelationParentId) {
		return nil, false
	}
	return o.RelationParentId, true
}

// HasRelationParentId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasRelationParentId() bool {
	if o != nil && !IsNil(o.RelationParentId) {
		return true
	}

	return false
}

// SetRelationParentId gets a reference to the given string and assigns it to the RelationParentId field.
func (o *SalesDataOrderInterface) SetRelationParentId(v string) {
	o.RelationParentId = &v
}

// GetRelationParentRealId returns the RelationParentRealId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetRelationParentRealId() string {
	if o == nil || IsNil(o.RelationParentRealId) {
		var ret string
		return ret
	}
	return *o.RelationParentRealId
}

// GetRelationParentRealIdOk returns a tuple with the RelationParentRealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetRelationParentRealIdOk() (*string, bool) {
	if o == nil || IsNil(o.RelationParentRealId) {
		return nil, false
	}
	return o.RelationParentRealId, true
}

// HasRelationParentRealId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasRelationParentRealId() bool {
	if o != nil && !IsNil(o.RelationParentRealId) {
		return true
	}

	return false
}

// SetRelationParentRealId gets a reference to the given string and assigns it to the RelationParentRealId field.
func (o *SalesDataOrderInterface) SetRelationParentRealId(v string) {
	o.RelationParentRealId = &v
}

// GetRemoteIp returns the RemoteIp field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetRemoteIp() string {
	if o == nil || IsNil(o.RemoteIp) {
		var ret string
		return ret
	}
	return *o.RemoteIp
}

// GetRemoteIpOk returns a tuple with the RemoteIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetRemoteIpOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIp) {
		return nil, false
	}
	return o.RemoteIp, true
}

// HasRemoteIp returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasRemoteIp() bool {
	if o != nil && !IsNil(o.RemoteIp) {
		return true
	}

	return false
}

// SetRemoteIp gets a reference to the given string and assigns it to the RemoteIp field.
func (o *SalesDataOrderInterface) SetRemoteIp(v string) {
	o.RemoteIp = &v
}

// GetShippingAmount returns the ShippingAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingAmount() float32 {
	if o == nil || IsNil(o.ShippingAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingAmount
}

// GetShippingAmountOk returns a tuple with the ShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingAmount) {
		return nil, false
	}
	return o.ShippingAmount, true
}

// HasShippingAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingAmount() bool {
	if o != nil && !IsNil(o.ShippingAmount) {
		return true
	}

	return false
}

// SetShippingAmount gets a reference to the given float32 and assigns it to the ShippingAmount field.
func (o *SalesDataOrderInterface) SetShippingAmount(v float32) {
	o.ShippingAmount = &v
}

// GetShippingCanceled returns the ShippingCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingCanceled() float32 {
	if o == nil || IsNil(o.ShippingCanceled) {
		var ret float32
		return ret
	}
	return *o.ShippingCanceled
}

// GetShippingCanceledOk returns a tuple with the ShippingCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingCanceled) {
		return nil, false
	}
	return o.ShippingCanceled, true
}

// HasShippingCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingCanceled() bool {
	if o != nil && !IsNil(o.ShippingCanceled) {
		return true
	}

	return false
}

// SetShippingCanceled gets a reference to the given float32 and assigns it to the ShippingCanceled field.
func (o *SalesDataOrderInterface) SetShippingCanceled(v float32) {
	o.ShippingCanceled = &v
}

// GetShippingDescription returns the ShippingDescription field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingDescription() string {
	if o == nil || IsNil(o.ShippingDescription) {
		var ret string
		return ret
	}
	return *o.ShippingDescription
}

// GetShippingDescriptionOk returns a tuple with the ShippingDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingDescription) {
		return nil, false
	}
	return o.ShippingDescription, true
}

// HasShippingDescription returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingDescription() bool {
	if o != nil && !IsNil(o.ShippingDescription) {
		return true
	}

	return false
}

// SetShippingDescription gets a reference to the given string and assigns it to the ShippingDescription field.
func (o *SalesDataOrderInterface) SetShippingDescription(v string) {
	o.ShippingDescription = &v
}

// GetShippingDiscountAmount returns the ShippingDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingDiscountAmount() float32 {
	if o == nil || IsNil(o.ShippingDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingDiscountAmount
}

// GetShippingDiscountAmountOk returns a tuple with the ShippingDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingDiscountAmount) {
		return nil, false
	}
	return o.ShippingDiscountAmount, true
}

// HasShippingDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingDiscountAmount() bool {
	if o != nil && !IsNil(o.ShippingDiscountAmount) {
		return true
	}

	return false
}

// SetShippingDiscountAmount gets a reference to the given float32 and assigns it to the ShippingDiscountAmount field.
func (o *SalesDataOrderInterface) SetShippingDiscountAmount(v float32) {
	o.ShippingDiscountAmount = &v
}

// GetShippingDiscountTaxCompensationAmount returns the ShippingDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingDiscountTaxCompensationAmount
}

// GetShippingDiscountTaxCompensationAmountOk returns a tuple with the ShippingDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.ShippingDiscountTaxCompensationAmount, true
}

// HasShippingDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetShippingDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the ShippingDiscountTaxCompensationAmount field.
func (o *SalesDataOrderInterface) SetShippingDiscountTaxCompensationAmount(v float32) {
	o.ShippingDiscountTaxCompensationAmount = &v
}

// GetShippingInclTax returns the ShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingInclTax() float32 {
	if o == nil || IsNil(o.ShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.ShippingInclTax
}

// GetShippingInclTaxOk returns a tuple with the ShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingInclTax) {
		return nil, false
	}
	return o.ShippingInclTax, true
}

// HasShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingInclTax() bool {
	if o != nil && !IsNil(o.ShippingInclTax) {
		return true
	}

	return false
}

// SetShippingInclTax gets a reference to the given float32 and assigns it to the ShippingInclTax field.
func (o *SalesDataOrderInterface) SetShippingInclTax(v float32) {
	o.ShippingInclTax = &v
}

// GetShippingInvoiced returns the ShippingInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingInvoiced() float32 {
	if o == nil || IsNil(o.ShippingInvoiced) {
		var ret float32
		return ret
	}
	return *o.ShippingInvoiced
}

// GetShippingInvoicedOk returns a tuple with the ShippingInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingInvoiced) {
		return nil, false
	}
	return o.ShippingInvoiced, true
}

// HasShippingInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingInvoiced() bool {
	if o != nil && !IsNil(o.ShippingInvoiced) {
		return true
	}

	return false
}

// SetShippingInvoiced gets a reference to the given float32 and assigns it to the ShippingInvoiced field.
func (o *SalesDataOrderInterface) SetShippingInvoiced(v float32) {
	o.ShippingInvoiced = &v
}

// GetShippingRefunded returns the ShippingRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingRefunded() float32 {
	if o == nil || IsNil(o.ShippingRefunded) {
		var ret float32
		return ret
	}
	return *o.ShippingRefunded
}

// GetShippingRefundedOk returns a tuple with the ShippingRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingRefunded) {
		return nil, false
	}
	return o.ShippingRefunded, true
}

// HasShippingRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingRefunded() bool {
	if o != nil && !IsNil(o.ShippingRefunded) {
		return true
	}

	return false
}

// SetShippingRefunded gets a reference to the given float32 and assigns it to the ShippingRefunded field.
func (o *SalesDataOrderInterface) SetShippingRefunded(v float32) {
	o.ShippingRefunded = &v
}

// GetShippingTaxAmount returns the ShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingTaxAmount() float32 {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingTaxAmount
}

// GetShippingTaxAmountOk returns a tuple with the ShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		return nil, false
	}
	return o.ShippingTaxAmount, true
}

// HasShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingTaxAmount() bool {
	if o != nil && !IsNil(o.ShippingTaxAmount) {
		return true
	}

	return false
}

// SetShippingTaxAmount gets a reference to the given float32 and assigns it to the ShippingTaxAmount field.
func (o *SalesDataOrderInterface) SetShippingTaxAmount(v float32) {
	o.ShippingTaxAmount = &v
}

// GetShippingTaxRefunded returns the ShippingTaxRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetShippingTaxRefunded() float32 {
	if o == nil || IsNil(o.ShippingTaxRefunded) {
		var ret float32
		return ret
	}
	return *o.ShippingTaxRefunded
}

// GetShippingTaxRefundedOk returns a tuple with the ShippingTaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetShippingTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingTaxRefunded) {
		return nil, false
	}
	return o.ShippingTaxRefunded, true
}

// HasShippingTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasShippingTaxRefunded() bool {
	if o != nil && !IsNil(o.ShippingTaxRefunded) {
		return true
	}

	return false
}

// SetShippingTaxRefunded gets a reference to the given float32 and assigns it to the ShippingTaxRefunded field.
func (o *SalesDataOrderInterface) SetShippingTaxRefunded(v float32) {
	o.ShippingTaxRefunded = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SalesDataOrderInterface) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SalesDataOrderInterface) SetStatus(v string) {
	o.Status = &v
}

// GetStoreCurrencyCode returns the StoreCurrencyCode field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetStoreCurrencyCode() string {
	if o == nil || IsNil(o.StoreCurrencyCode) {
		var ret string
		return ret
	}
	return *o.StoreCurrencyCode
}

// GetStoreCurrencyCodeOk returns a tuple with the StoreCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStoreCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StoreCurrencyCode) {
		return nil, false
	}
	return o.StoreCurrencyCode, true
}

// HasStoreCurrencyCode returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasStoreCurrencyCode() bool {
	if o != nil && !IsNil(o.StoreCurrencyCode) {
		return true
	}

	return false
}

// SetStoreCurrencyCode gets a reference to the given string and assigns it to the StoreCurrencyCode field.
func (o *SalesDataOrderInterface) SetStoreCurrencyCode(v string) {
	o.StoreCurrencyCode = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetStoreId() int32 {
	if o == nil || IsNil(o.StoreId) {
		var ret int32
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStoreIdOk() (*int32, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given int32 and assigns it to the StoreId field.
func (o *SalesDataOrderInterface) SetStoreId(v int32) {
	o.StoreId = &v
}

// GetStoreName returns the StoreName field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetStoreName() string {
	if o == nil || IsNil(o.StoreName) {
		var ret string
		return ret
	}
	return *o.StoreName
}

// GetStoreNameOk returns a tuple with the StoreName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStoreNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoreName) {
		return nil, false
	}
	return o.StoreName, true
}

// HasStoreName returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasStoreName() bool {
	if o != nil && !IsNil(o.StoreName) {
		return true
	}

	return false
}

// SetStoreName gets a reference to the given string and assigns it to the StoreName field.
func (o *SalesDataOrderInterface) SetStoreName(v string) {
	o.StoreName = &v
}

// GetStoreToBaseRate returns the StoreToBaseRate field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetStoreToBaseRate() float32 {
	if o == nil || IsNil(o.StoreToBaseRate) {
		var ret float32
		return ret
	}
	return *o.StoreToBaseRate
}

// GetStoreToBaseRateOk returns a tuple with the StoreToBaseRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStoreToBaseRateOk() (*float32, bool) {
	if o == nil || IsNil(o.StoreToBaseRate) {
		return nil, false
	}
	return o.StoreToBaseRate, true
}

// HasStoreToBaseRate returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasStoreToBaseRate() bool {
	if o != nil && !IsNil(o.StoreToBaseRate) {
		return true
	}

	return false
}

// SetStoreToBaseRate gets a reference to the given float32 and assigns it to the StoreToBaseRate field.
func (o *SalesDataOrderInterface) SetStoreToBaseRate(v float32) {
	o.StoreToBaseRate = &v
}

// GetStoreToOrderRate returns the StoreToOrderRate field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetStoreToOrderRate() float32 {
	if o == nil || IsNil(o.StoreToOrderRate) {
		var ret float32
		return ret
	}
	return *o.StoreToOrderRate
}

// GetStoreToOrderRateOk returns a tuple with the StoreToOrderRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStoreToOrderRateOk() (*float32, bool) {
	if o == nil || IsNil(o.StoreToOrderRate) {
		return nil, false
	}
	return o.StoreToOrderRate, true
}

// HasStoreToOrderRate returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasStoreToOrderRate() bool {
	if o != nil && !IsNil(o.StoreToOrderRate) {
		return true
	}

	return false
}

// SetStoreToOrderRate gets a reference to the given float32 and assigns it to the StoreToOrderRate field.
func (o *SalesDataOrderInterface) SetStoreToOrderRate(v float32) {
	o.StoreToOrderRate = &v
}

// GetSubtotal returns the Subtotal field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetSubtotal() float32 {
	if o == nil || IsNil(o.Subtotal) {
		var ret float32
		return ret
	}
	return *o.Subtotal
}

// GetSubtotalOk returns a tuple with the Subtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetSubtotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Subtotal) {
		return nil, false
	}
	return o.Subtotal, true
}

// HasSubtotal returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasSubtotal() bool {
	if o != nil && !IsNil(o.Subtotal) {
		return true
	}

	return false
}

// SetSubtotal gets a reference to the given float32 and assigns it to the Subtotal field.
func (o *SalesDataOrderInterface) SetSubtotal(v float32) {
	o.Subtotal = &v
}

// GetSubtotalCanceled returns the SubtotalCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetSubtotalCanceled() float32 {
	if o == nil || IsNil(o.SubtotalCanceled) {
		var ret float32
		return ret
	}
	return *o.SubtotalCanceled
}

// GetSubtotalCanceledOk returns a tuple with the SubtotalCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetSubtotalCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.SubtotalCanceled) {
		return nil, false
	}
	return o.SubtotalCanceled, true
}

// HasSubtotalCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasSubtotalCanceled() bool {
	if o != nil && !IsNil(o.SubtotalCanceled) {
		return true
	}

	return false
}

// SetSubtotalCanceled gets a reference to the given float32 and assigns it to the SubtotalCanceled field.
func (o *SalesDataOrderInterface) SetSubtotalCanceled(v float32) {
	o.SubtotalCanceled = &v
}

// GetSubtotalInclTax returns the SubtotalInclTax field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetSubtotalInclTax() float32 {
	if o == nil || IsNil(o.SubtotalInclTax) {
		var ret float32
		return ret
	}
	return *o.SubtotalInclTax
}

// GetSubtotalInclTaxOk returns a tuple with the SubtotalInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetSubtotalInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.SubtotalInclTax) {
		return nil, false
	}
	return o.SubtotalInclTax, true
}

// HasSubtotalInclTax returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasSubtotalInclTax() bool {
	if o != nil && !IsNil(o.SubtotalInclTax) {
		return true
	}

	return false
}

// SetSubtotalInclTax gets a reference to the given float32 and assigns it to the SubtotalInclTax field.
func (o *SalesDataOrderInterface) SetSubtotalInclTax(v float32) {
	o.SubtotalInclTax = &v
}

// GetSubtotalInvoiced returns the SubtotalInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetSubtotalInvoiced() float32 {
	if o == nil || IsNil(o.SubtotalInvoiced) {
		var ret float32
		return ret
	}
	return *o.SubtotalInvoiced
}

// GetSubtotalInvoicedOk returns a tuple with the SubtotalInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetSubtotalInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.SubtotalInvoiced) {
		return nil, false
	}
	return o.SubtotalInvoiced, true
}

// HasSubtotalInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasSubtotalInvoiced() bool {
	if o != nil && !IsNil(o.SubtotalInvoiced) {
		return true
	}

	return false
}

// SetSubtotalInvoiced gets a reference to the given float32 and assigns it to the SubtotalInvoiced field.
func (o *SalesDataOrderInterface) SetSubtotalInvoiced(v float32) {
	o.SubtotalInvoiced = &v
}

// GetSubtotalRefunded returns the SubtotalRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetSubtotalRefunded() float32 {
	if o == nil || IsNil(o.SubtotalRefunded) {
		var ret float32
		return ret
	}
	return *o.SubtotalRefunded
}

// GetSubtotalRefundedOk returns a tuple with the SubtotalRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetSubtotalRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.SubtotalRefunded) {
		return nil, false
	}
	return o.SubtotalRefunded, true
}

// HasSubtotalRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasSubtotalRefunded() bool {
	if o != nil && !IsNil(o.SubtotalRefunded) {
		return true
	}

	return false
}

// SetSubtotalRefunded gets a reference to the given float32 and assigns it to the SubtotalRefunded field.
func (o *SalesDataOrderInterface) SetSubtotalRefunded(v float32) {
	o.SubtotalRefunded = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTaxAmount() float32 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret float32
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float32 and assigns it to the TaxAmount field.
func (o *SalesDataOrderInterface) SetTaxAmount(v float32) {
	o.TaxAmount = &v
}

// GetTaxCanceled returns the TaxCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTaxCanceled() float32 {
	if o == nil || IsNil(o.TaxCanceled) {
		var ret float32
		return ret
	}
	return *o.TaxCanceled
}

// GetTaxCanceledOk returns a tuple with the TaxCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTaxCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxCanceled) {
		return nil, false
	}
	return o.TaxCanceled, true
}

// HasTaxCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTaxCanceled() bool {
	if o != nil && !IsNil(o.TaxCanceled) {
		return true
	}

	return false
}

// SetTaxCanceled gets a reference to the given float32 and assigns it to the TaxCanceled field.
func (o *SalesDataOrderInterface) SetTaxCanceled(v float32) {
	o.TaxCanceled = &v
}

// GetTaxInvoiced returns the TaxInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTaxInvoiced() float32 {
	if o == nil || IsNil(o.TaxInvoiced) {
		var ret float32
		return ret
	}
	return *o.TaxInvoiced
}

// GetTaxInvoicedOk returns a tuple with the TaxInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTaxInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxInvoiced) {
		return nil, false
	}
	return o.TaxInvoiced, true
}

// HasTaxInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTaxInvoiced() bool {
	if o != nil && !IsNil(o.TaxInvoiced) {
		return true
	}

	return false
}

// SetTaxInvoiced gets a reference to the given float32 and assigns it to the TaxInvoiced field.
func (o *SalesDataOrderInterface) SetTaxInvoiced(v float32) {
	o.TaxInvoiced = &v
}

// GetTaxRefunded returns the TaxRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTaxRefunded() float32 {
	if o == nil || IsNil(o.TaxRefunded) {
		var ret float32
		return ret
	}
	return *o.TaxRefunded
}

// GetTaxRefundedOk returns a tuple with the TaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxRefunded) {
		return nil, false
	}
	return o.TaxRefunded, true
}

// HasTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTaxRefunded() bool {
	if o != nil && !IsNil(o.TaxRefunded) {
		return true
	}

	return false
}

// SetTaxRefunded gets a reference to the given float32 and assigns it to the TaxRefunded field.
func (o *SalesDataOrderInterface) SetTaxRefunded(v float32) {
	o.TaxRefunded = &v
}

// GetTotalCanceled returns the TotalCanceled field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalCanceled() float32 {
	if o == nil || IsNil(o.TotalCanceled) {
		var ret float32
		return ret
	}
	return *o.TotalCanceled
}

// GetTotalCanceledOk returns a tuple with the TotalCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCanceled) {
		return nil, false
	}
	return o.TotalCanceled, true
}

// HasTotalCanceled returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalCanceled() bool {
	if o != nil && !IsNil(o.TotalCanceled) {
		return true
	}

	return false
}

// SetTotalCanceled gets a reference to the given float32 and assigns it to the TotalCanceled field.
func (o *SalesDataOrderInterface) SetTotalCanceled(v float32) {
	o.TotalCanceled = &v
}

// GetTotalDue returns the TotalDue field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalDue() float32 {
	if o == nil || IsNil(o.TotalDue) {
		var ret float32
		return ret
	}
	return *o.TotalDue
}

// GetTotalDueOk returns a tuple with the TotalDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalDueOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalDue) {
		return nil, false
	}
	return o.TotalDue, true
}

// HasTotalDue returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalDue() bool {
	if o != nil && !IsNil(o.TotalDue) {
		return true
	}

	return false
}

// SetTotalDue gets a reference to the given float32 and assigns it to the TotalDue field.
func (o *SalesDataOrderInterface) SetTotalDue(v float32) {
	o.TotalDue = &v
}

// GetTotalInvoiced returns the TotalInvoiced field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalInvoiced() float32 {
	if o == nil || IsNil(o.TotalInvoiced) {
		var ret float32
		return ret
	}
	return *o.TotalInvoiced
}

// GetTotalInvoicedOk returns a tuple with the TotalInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalInvoiced) {
		return nil, false
	}
	return o.TotalInvoiced, true
}

// HasTotalInvoiced returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalInvoiced() bool {
	if o != nil && !IsNil(o.TotalInvoiced) {
		return true
	}

	return false
}

// SetTotalInvoiced gets a reference to the given float32 and assigns it to the TotalInvoiced field.
func (o *SalesDataOrderInterface) SetTotalInvoiced(v float32) {
	o.TotalInvoiced = &v
}

// GetTotalItemCount returns the TotalItemCount field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalItemCount() int32 {
	if o == nil || IsNil(o.TotalItemCount) {
		var ret int32
		return ret
	}
	return *o.TotalItemCount
}

// GetTotalItemCountOk returns a tuple with the TotalItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalItemCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItemCount) {
		return nil, false
	}
	return o.TotalItemCount, true
}

// HasTotalItemCount returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalItemCount() bool {
	if o != nil && !IsNil(o.TotalItemCount) {
		return true
	}

	return false
}

// SetTotalItemCount gets a reference to the given int32 and assigns it to the TotalItemCount field.
func (o *SalesDataOrderInterface) SetTotalItemCount(v int32) {
	o.TotalItemCount = &v
}

// GetTotalOfflineRefunded returns the TotalOfflineRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalOfflineRefunded() float32 {
	if o == nil || IsNil(o.TotalOfflineRefunded) {
		var ret float32
		return ret
	}
	return *o.TotalOfflineRefunded
}

// GetTotalOfflineRefundedOk returns a tuple with the TotalOfflineRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalOfflineRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalOfflineRefunded) {
		return nil, false
	}
	return o.TotalOfflineRefunded, true
}

// HasTotalOfflineRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalOfflineRefunded() bool {
	if o != nil && !IsNil(o.TotalOfflineRefunded) {
		return true
	}

	return false
}

// SetTotalOfflineRefunded gets a reference to the given float32 and assigns it to the TotalOfflineRefunded field.
func (o *SalesDataOrderInterface) SetTotalOfflineRefunded(v float32) {
	o.TotalOfflineRefunded = &v
}

// GetTotalOnlineRefunded returns the TotalOnlineRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalOnlineRefunded() float32 {
	if o == nil || IsNil(o.TotalOnlineRefunded) {
		var ret float32
		return ret
	}
	return *o.TotalOnlineRefunded
}

// GetTotalOnlineRefundedOk returns a tuple with the TotalOnlineRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalOnlineRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalOnlineRefunded) {
		return nil, false
	}
	return o.TotalOnlineRefunded, true
}

// HasTotalOnlineRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalOnlineRefunded() bool {
	if o != nil && !IsNil(o.TotalOnlineRefunded) {
		return true
	}

	return false
}

// SetTotalOnlineRefunded gets a reference to the given float32 and assigns it to the TotalOnlineRefunded field.
func (o *SalesDataOrderInterface) SetTotalOnlineRefunded(v float32) {
	o.TotalOnlineRefunded = &v
}

// GetTotalPaid returns the TotalPaid field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalPaid() float32 {
	if o == nil || IsNil(o.TotalPaid) {
		var ret float32
		return ret
	}
	return *o.TotalPaid
}

// GetTotalPaidOk returns a tuple with the TotalPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalPaidOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalPaid) {
		return nil, false
	}
	return o.TotalPaid, true
}

// HasTotalPaid returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalPaid() bool {
	if o != nil && !IsNil(o.TotalPaid) {
		return true
	}

	return false
}

// SetTotalPaid gets a reference to the given float32 and assigns it to the TotalPaid field.
func (o *SalesDataOrderInterface) SetTotalPaid(v float32) {
	o.TotalPaid = &v
}

// GetTotalQtyOrdered returns the TotalQtyOrdered field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalQtyOrdered() float32 {
	if o == nil || IsNil(o.TotalQtyOrdered) {
		var ret float32
		return ret
	}
	return *o.TotalQtyOrdered
}

// GetTotalQtyOrderedOk returns a tuple with the TotalQtyOrdered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalQtyOrderedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalQtyOrdered) {
		return nil, false
	}
	return o.TotalQtyOrdered, true
}

// HasTotalQtyOrdered returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalQtyOrdered() bool {
	if o != nil && !IsNil(o.TotalQtyOrdered) {
		return true
	}

	return false
}

// SetTotalQtyOrdered gets a reference to the given float32 and assigns it to the TotalQtyOrdered field.
func (o *SalesDataOrderInterface) SetTotalQtyOrdered(v float32) {
	o.TotalQtyOrdered = &v
}

// GetTotalRefunded returns the TotalRefunded field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetTotalRefunded() float32 {
	if o == nil || IsNil(o.TotalRefunded) {
		var ret float32
		return ret
	}
	return *o.TotalRefunded
}

// GetTotalRefundedOk returns a tuple with the TotalRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetTotalRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalRefunded) {
		return nil, false
	}
	return o.TotalRefunded, true
}

// HasTotalRefunded returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasTotalRefunded() bool {
	if o != nil && !IsNil(o.TotalRefunded) {
		return true
	}

	return false
}

// SetTotalRefunded gets a reference to the given float32 and assigns it to the TotalRefunded field.
func (o *SalesDataOrderInterface) SetTotalRefunded(v float32) {
	o.TotalRefunded = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *SalesDataOrderInterface) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetWeight() float32 {
	if o == nil || IsNil(o.Weight) {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *SalesDataOrderInterface) SetWeight(v float32) {
	o.Weight = &v
}

// GetXForwardedFor returns the XForwardedFor field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetXForwardedFor() string {
	if o == nil || IsNil(o.XForwardedFor) {
		var ret string
		return ret
	}
	return *o.XForwardedFor
}

// GetXForwardedForOk returns a tuple with the XForwardedFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetXForwardedForOk() (*string, bool) {
	if o == nil || IsNil(o.XForwardedFor) {
		return nil, false
	}
	return o.XForwardedFor, true
}

// HasXForwardedFor returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasXForwardedFor() bool {
	if o != nil && !IsNil(o.XForwardedFor) {
		return true
	}

	return false
}

// SetXForwardedFor gets a reference to the given string and assigns it to the XForwardedFor field.
func (o *SalesDataOrderInterface) SetXForwardedFor(v string) {
	o.XForwardedFor = &v
}

// GetItems returns the Items field value
func (o *SalesDataOrderInterface) GetItems() []SalesDataOrderItemInterface {
	if o == nil {
		var ret []SalesDataOrderItemInterface
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetItemsOk() ([]SalesDataOrderItemInterface, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *SalesDataOrderInterface) SetItems(v []SalesDataOrderItemInterface) {
	o.Items = v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetBillingAddress() SalesDataOrderAddressInterface {
	if o == nil || IsNil(o.BillingAddress) {
		var ret SalesDataOrderAddressInterface
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetBillingAddressOk() (*SalesDataOrderAddressInterface, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given SalesDataOrderAddressInterface and assigns it to the BillingAddress field.
func (o *SalesDataOrderInterface) SetBillingAddress(v SalesDataOrderAddressInterface) {
	o.BillingAddress = &v
}

// GetPayment returns the Payment field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetPayment() SalesDataOrderPaymentInterface {
	if o == nil || IsNil(o.Payment) {
		var ret SalesDataOrderPaymentInterface
		return ret
	}
	return *o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetPaymentOk() (*SalesDataOrderPaymentInterface, bool) {
	if o == nil || IsNil(o.Payment) {
		return nil, false
	}
	return o.Payment, true
}

// HasPayment returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasPayment() bool {
	if o != nil && !IsNil(o.Payment) {
		return true
	}

	return false
}

// SetPayment gets a reference to the given SalesDataOrderPaymentInterface and assigns it to the Payment field.
func (o *SalesDataOrderInterface) SetPayment(v SalesDataOrderPaymentInterface) {
	o.Payment = &v
}

// GetStatusHistories returns the StatusHistories field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetStatusHistories() []SalesDataOrderStatusHistoryInterface {
	if o == nil || IsNil(o.StatusHistories) {
		var ret []SalesDataOrderStatusHistoryInterface
		return ret
	}
	return o.StatusHistories
}

// GetStatusHistoriesOk returns a tuple with the StatusHistories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetStatusHistoriesOk() ([]SalesDataOrderStatusHistoryInterface, bool) {
	if o == nil || IsNil(o.StatusHistories) {
		return nil, false
	}
	return o.StatusHistories, true
}

// HasStatusHistories returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasStatusHistories() bool {
	if o != nil && !IsNil(o.StatusHistories) {
		return true
	}

	return false
}

// SetStatusHistories gets a reference to the given []SalesDataOrderStatusHistoryInterface and assigns it to the StatusHistories field.
func (o *SalesDataOrderInterface) SetStatusHistories(v []SalesDataOrderStatusHistoryInterface) {
	o.StatusHistories = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataOrderInterface) GetExtensionAttributes() SalesDataOrderExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret SalesDataOrderExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataOrderInterface) GetExtensionAttributesOk() (*SalesDataOrderExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataOrderInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given SalesDataOrderExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *SalesDataOrderInterface) SetExtensionAttributes(v SalesDataOrderExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o SalesDataOrderInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataOrderInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdjustmentNegative) {
		toSerialize["adjustment_negative"] = o.AdjustmentNegative
	}
	if !IsNil(o.AdjustmentPositive) {
		toSerialize["adjustment_positive"] = o.AdjustmentPositive
	}
	if !IsNil(o.AppliedRuleIds) {
		toSerialize["applied_rule_ids"] = o.AppliedRuleIds
	}
	if !IsNil(o.BaseAdjustmentNegative) {
		toSerialize["base_adjustment_negative"] = o.BaseAdjustmentNegative
	}
	if !IsNil(o.BaseAdjustmentPositive) {
		toSerialize["base_adjustment_positive"] = o.BaseAdjustmentPositive
	}
	if !IsNil(o.BaseCurrencyCode) {
		toSerialize["base_currency_code"] = o.BaseCurrencyCode
	}
	if !IsNil(o.BaseDiscountAmount) {
		toSerialize["base_discount_amount"] = o.BaseDiscountAmount
	}
	if !IsNil(o.BaseDiscountCanceled) {
		toSerialize["base_discount_canceled"] = o.BaseDiscountCanceled
	}
	if !IsNil(o.BaseDiscountInvoiced) {
		toSerialize["base_discount_invoiced"] = o.BaseDiscountInvoiced
	}
	if !IsNil(o.BaseDiscountRefunded) {
		toSerialize["base_discount_refunded"] = o.BaseDiscountRefunded
	}
	toSerialize["base_grand_total"] = o.BaseGrandTotal
	if !IsNil(o.BaseDiscountTaxCompensationAmount) {
		toSerialize["base_discount_tax_compensation_amount"] = o.BaseDiscountTaxCompensationAmount
	}
	if !IsNil(o.BaseDiscountTaxCompensationInvoiced) {
		toSerialize["base_discount_tax_compensation_invoiced"] = o.BaseDiscountTaxCompensationInvoiced
	}
	if !IsNil(o.BaseDiscountTaxCompensationRefunded) {
		toSerialize["base_discount_tax_compensation_refunded"] = o.BaseDiscountTaxCompensationRefunded
	}
	if !IsNil(o.BaseShippingAmount) {
		toSerialize["base_shipping_amount"] = o.BaseShippingAmount
	}
	if !IsNil(o.BaseShippingCanceled) {
		toSerialize["base_shipping_canceled"] = o.BaseShippingCanceled
	}
	if !IsNil(o.BaseShippingDiscountAmount) {
		toSerialize["base_shipping_discount_amount"] = o.BaseShippingDiscountAmount
	}
	if !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		toSerialize["base_shipping_discount_tax_compensation_amnt"] = o.BaseShippingDiscountTaxCompensationAmnt
	}
	if !IsNil(o.BaseShippingInclTax) {
		toSerialize["base_shipping_incl_tax"] = o.BaseShippingInclTax
	}
	if !IsNil(o.BaseShippingInvoiced) {
		toSerialize["base_shipping_invoiced"] = o.BaseShippingInvoiced
	}
	if !IsNil(o.BaseShippingRefunded) {
		toSerialize["base_shipping_refunded"] = o.BaseShippingRefunded
	}
	if !IsNil(o.BaseShippingTaxAmount) {
		toSerialize["base_shipping_tax_amount"] = o.BaseShippingTaxAmount
	}
	if !IsNil(o.BaseShippingTaxRefunded) {
		toSerialize["base_shipping_tax_refunded"] = o.BaseShippingTaxRefunded
	}
	if !IsNil(o.BaseSubtotal) {
		toSerialize["base_subtotal"] = o.BaseSubtotal
	}
	if !IsNil(o.BaseSubtotalCanceled) {
		toSerialize["base_subtotal_canceled"] = o.BaseSubtotalCanceled
	}
	if !IsNil(o.BaseSubtotalInclTax) {
		toSerialize["base_subtotal_incl_tax"] = o.BaseSubtotalInclTax
	}
	if !IsNil(o.BaseSubtotalInvoiced) {
		toSerialize["base_subtotal_invoiced"] = o.BaseSubtotalInvoiced
	}
	if !IsNil(o.BaseSubtotalRefunded) {
		toSerialize["base_subtotal_refunded"] = o.BaseSubtotalRefunded
	}
	if !IsNil(o.BaseTaxAmount) {
		toSerialize["base_tax_amount"] = o.BaseTaxAmount
	}
	if !IsNil(o.BaseTaxCanceled) {
		toSerialize["base_tax_canceled"] = o.BaseTaxCanceled
	}
	if !IsNil(o.BaseTaxInvoiced) {
		toSerialize["base_tax_invoiced"] = o.BaseTaxInvoiced
	}
	if !IsNil(o.BaseTaxRefunded) {
		toSerialize["base_tax_refunded"] = o.BaseTaxRefunded
	}
	if !IsNil(o.BaseTotalCanceled) {
		toSerialize["base_total_canceled"] = o.BaseTotalCanceled
	}
	if !IsNil(o.BaseTotalDue) {
		toSerialize["base_total_due"] = o.BaseTotalDue
	}
	if !IsNil(o.BaseTotalInvoiced) {
		toSerialize["base_total_invoiced"] = o.BaseTotalInvoiced
	}
	if !IsNil(o.BaseTotalInvoicedCost) {
		toSerialize["base_total_invoiced_cost"] = o.BaseTotalInvoicedCost
	}
	if !IsNil(o.BaseTotalOfflineRefunded) {
		toSerialize["base_total_offline_refunded"] = o.BaseTotalOfflineRefunded
	}
	if !IsNil(o.BaseTotalOnlineRefunded) {
		toSerialize["base_total_online_refunded"] = o.BaseTotalOnlineRefunded
	}
	if !IsNil(o.BaseTotalPaid) {
		toSerialize["base_total_paid"] = o.BaseTotalPaid
	}
	if !IsNil(o.BaseTotalQtyOrdered) {
		toSerialize["base_total_qty_ordered"] = o.BaseTotalQtyOrdered
	}
	if !IsNil(o.BaseTotalRefunded) {
		toSerialize["base_total_refunded"] = o.BaseTotalRefunded
	}
	if !IsNil(o.BaseToGlobalRate) {
		toSerialize["base_to_global_rate"] = o.BaseToGlobalRate
	}
	if !IsNil(o.BaseToOrderRate) {
		toSerialize["base_to_order_rate"] = o.BaseToOrderRate
	}
	if !IsNil(o.BillingAddressId) {
		toSerialize["billing_address_id"] = o.BillingAddressId
	}
	if !IsNil(o.CanShipPartially) {
		toSerialize["can_ship_partially"] = o.CanShipPartially
	}
	if !IsNil(o.CanShipPartiallyItem) {
		toSerialize["can_ship_partially_item"] = o.CanShipPartiallyItem
	}
	if !IsNil(o.CouponCode) {
		toSerialize["coupon_code"] = o.CouponCode
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CustomerDob) {
		toSerialize["customer_dob"] = o.CustomerDob
	}
	toSerialize["customer_email"] = o.CustomerEmail
	if !IsNil(o.CustomerFirstname) {
		toSerialize["customer_firstname"] = o.CustomerFirstname
	}
	if !IsNil(o.CustomerGender) {
		toSerialize["customer_gender"] = o.CustomerGender
	}
	if !IsNil(o.CustomerGroupId) {
		toSerialize["customer_group_id"] = o.CustomerGroupId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.CustomerIsGuest) {
		toSerialize["customer_is_guest"] = o.CustomerIsGuest
	}
	if !IsNil(o.CustomerLastname) {
		toSerialize["customer_lastname"] = o.CustomerLastname
	}
	if !IsNil(o.CustomerMiddlename) {
		toSerialize["customer_middlename"] = o.CustomerMiddlename
	}
	if !IsNil(o.CustomerNote) {
		toSerialize["customer_note"] = o.CustomerNote
	}
	if !IsNil(o.CustomerNoteNotify) {
		toSerialize["customer_note_notify"] = o.CustomerNoteNotify
	}
	if !IsNil(o.CustomerPrefix) {
		toSerialize["customer_prefix"] = o.CustomerPrefix
	}
	if !IsNil(o.CustomerSuffix) {
		toSerialize["customer_suffix"] = o.CustomerSuffix
	}
	if !IsNil(o.CustomerTaxvat) {
		toSerialize["customer_taxvat"] = o.CustomerTaxvat
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discount_amount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountCanceled) {
		toSerialize["discount_canceled"] = o.DiscountCanceled
	}
	if !IsNil(o.DiscountDescription) {
		toSerialize["discount_description"] = o.DiscountDescription
	}
	if !IsNil(o.DiscountInvoiced) {
		toSerialize["discount_invoiced"] = o.DiscountInvoiced
	}
	if !IsNil(o.DiscountRefunded) {
		toSerialize["discount_refunded"] = o.DiscountRefunded
	}
	if !IsNil(o.EditIncrement) {
		toSerialize["edit_increment"] = o.EditIncrement
	}
	if !IsNil(o.EmailSent) {
		toSerialize["email_sent"] = o.EmailSent
	}
	if !IsNil(o.EntityId) {
		toSerialize["entity_id"] = o.EntityId
	}
	if !IsNil(o.ExtCustomerId) {
		toSerialize["ext_customer_id"] = o.ExtCustomerId
	}
	if !IsNil(o.ExtOrderId) {
		toSerialize["ext_order_id"] = o.ExtOrderId
	}
	if !IsNil(o.ForcedShipmentWithInvoice) {
		toSerialize["forced_shipment_with_invoice"] = o.ForcedShipmentWithInvoice
	}
	if !IsNil(o.GlobalCurrencyCode) {
		toSerialize["global_currency_code"] = o.GlobalCurrencyCode
	}
	toSerialize["grand_total"] = o.GrandTotal
	if !IsNil(o.DiscountTaxCompensationAmount) {
		toSerialize["discount_tax_compensation_amount"] = o.DiscountTaxCompensationAmount
	}
	if !IsNil(o.DiscountTaxCompensationInvoiced) {
		toSerialize["discount_tax_compensation_invoiced"] = o.DiscountTaxCompensationInvoiced
	}
	if !IsNil(o.DiscountTaxCompensationRefunded) {
		toSerialize["discount_tax_compensation_refunded"] = o.DiscountTaxCompensationRefunded
	}
	if !IsNil(o.HoldBeforeState) {
		toSerialize["hold_before_state"] = o.HoldBeforeState
	}
	if !IsNil(o.HoldBeforeStatus) {
		toSerialize["hold_before_status"] = o.HoldBeforeStatus
	}
	if !IsNil(o.IncrementId) {
		toSerialize["increment_id"] = o.IncrementId
	}
	if !IsNil(o.IsVirtual) {
		toSerialize["is_virtual"] = o.IsVirtual
	}
	if !IsNil(o.OrderCurrencyCode) {
		toSerialize["order_currency_code"] = o.OrderCurrencyCode
	}
	if !IsNil(o.OriginalIncrementId) {
		toSerialize["original_increment_id"] = o.OriginalIncrementId
	}
	if !IsNil(o.PaymentAuthorizationAmount) {
		toSerialize["payment_authorization_amount"] = o.PaymentAuthorizationAmount
	}
	if !IsNil(o.PaymentAuthExpiration) {
		toSerialize["payment_auth_expiration"] = o.PaymentAuthExpiration
	}
	if !IsNil(o.ProtectCode) {
		toSerialize["protect_code"] = o.ProtectCode
	}
	if !IsNil(o.QuoteAddressId) {
		toSerialize["quote_address_id"] = o.QuoteAddressId
	}
	if !IsNil(o.QuoteId) {
		toSerialize["quote_id"] = o.QuoteId
	}
	if !IsNil(o.RelationChildId) {
		toSerialize["relation_child_id"] = o.RelationChildId
	}
	if !IsNil(o.RelationChildRealId) {
		toSerialize["relation_child_real_id"] = o.RelationChildRealId
	}
	if !IsNil(o.RelationParentId) {
		toSerialize["relation_parent_id"] = o.RelationParentId
	}
	if !IsNil(o.RelationParentRealId) {
		toSerialize["relation_parent_real_id"] = o.RelationParentRealId
	}
	if !IsNil(o.RemoteIp) {
		toSerialize["remote_ip"] = o.RemoteIp
	}
	if !IsNil(o.ShippingAmount) {
		toSerialize["shipping_amount"] = o.ShippingAmount
	}
	if !IsNil(o.ShippingCanceled) {
		toSerialize["shipping_canceled"] = o.ShippingCanceled
	}
	if !IsNil(o.ShippingDescription) {
		toSerialize["shipping_description"] = o.ShippingDescription
	}
	if !IsNil(o.ShippingDiscountAmount) {
		toSerialize["shipping_discount_amount"] = o.ShippingDiscountAmount
	}
	if !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		toSerialize["shipping_discount_tax_compensation_amount"] = o.ShippingDiscountTaxCompensationAmount
	}
	if !IsNil(o.ShippingInclTax) {
		toSerialize["shipping_incl_tax"] = o.ShippingInclTax
	}
	if !IsNil(o.ShippingInvoiced) {
		toSerialize["shipping_invoiced"] = o.ShippingInvoiced
	}
	if !IsNil(o.ShippingRefunded) {
		toSerialize["shipping_refunded"] = o.ShippingRefunded
	}
	if !IsNil(o.ShippingTaxAmount) {
		toSerialize["shipping_tax_amount"] = o.ShippingTaxAmount
	}
	if !IsNil(o.ShippingTaxRefunded) {
		toSerialize["shipping_tax_refunded"] = o.ShippingTaxRefunded
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StoreCurrencyCode) {
		toSerialize["store_currency_code"] = o.StoreCurrencyCode
	}
	if !IsNil(o.StoreId) {
		toSerialize["store_id"] = o.StoreId
	}
	if !IsNil(o.StoreName) {
		toSerialize["store_name"] = o.StoreName
	}
	if !IsNil(o.StoreToBaseRate) {
		toSerialize["store_to_base_rate"] = o.StoreToBaseRate
	}
	if !IsNil(o.StoreToOrderRate) {
		toSerialize["store_to_order_rate"] = o.StoreToOrderRate
	}
	if !IsNil(o.Subtotal) {
		toSerialize["subtotal"] = o.Subtotal
	}
	if !IsNil(o.SubtotalCanceled) {
		toSerialize["subtotal_canceled"] = o.SubtotalCanceled
	}
	if !IsNil(o.SubtotalInclTax) {
		toSerialize["subtotal_incl_tax"] = o.SubtotalInclTax
	}
	if !IsNil(o.SubtotalInvoiced) {
		toSerialize["subtotal_invoiced"] = o.SubtotalInvoiced
	}
	if !IsNil(o.SubtotalRefunded) {
		toSerialize["subtotal_refunded"] = o.SubtotalRefunded
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["tax_amount"] = o.TaxAmount
	}
	if !IsNil(o.TaxCanceled) {
		toSerialize["tax_canceled"] = o.TaxCanceled
	}
	if !IsNil(o.TaxInvoiced) {
		toSerialize["tax_invoiced"] = o.TaxInvoiced
	}
	if !IsNil(o.TaxRefunded) {
		toSerialize["tax_refunded"] = o.TaxRefunded
	}
	if !IsNil(o.TotalCanceled) {
		toSerialize["total_canceled"] = o.TotalCanceled
	}
	if !IsNil(o.TotalDue) {
		toSerialize["total_due"] = o.TotalDue
	}
	if !IsNil(o.TotalInvoiced) {
		toSerialize["total_invoiced"] = o.TotalInvoiced
	}
	if !IsNil(o.TotalItemCount) {
		toSerialize["total_item_count"] = o.TotalItemCount
	}
	if !IsNil(o.TotalOfflineRefunded) {
		toSerialize["total_offline_refunded"] = o.TotalOfflineRefunded
	}
	if !IsNil(o.TotalOnlineRefunded) {
		toSerialize["total_online_refunded"] = o.TotalOnlineRefunded
	}
	if !IsNil(o.TotalPaid) {
		toSerialize["total_paid"] = o.TotalPaid
	}
	if !IsNil(o.TotalQtyOrdered) {
		toSerialize["total_qty_ordered"] = o.TotalQtyOrdered
	}
	if !IsNil(o.TotalRefunded) {
		toSerialize["total_refunded"] = o.TotalRefunded
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.XForwardedFor) {
		toSerialize["x_forwarded_for"] = o.XForwardedFor
	}
	toSerialize["items"] = o.Items
	if !IsNil(o.BillingAddress) {
		toSerialize["billing_address"] = o.BillingAddress
	}
	if !IsNil(o.Payment) {
		toSerialize["payment"] = o.Payment
	}
	if !IsNil(o.StatusHistories) {
		toSerialize["status_histories"] = o.StatusHistories
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataOrderInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"base_grand_total",
		"customer_email",
		"grand_total",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSalesDataOrderInterface := _SalesDataOrderInterface{}

	err = json.Unmarshal(data, &varSalesDataOrderInterface)

	if err != nil {
		return err
	}

	*o = SalesDataOrderInterface(varSalesDataOrderInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "adjustment_negative")
		delete(additionalProperties, "adjustment_positive")
		delete(additionalProperties, "applied_rule_ids")
		delete(additionalProperties, "base_adjustment_negative")
		delete(additionalProperties, "base_adjustment_positive")
		delete(additionalProperties, "base_currency_code")
		delete(additionalProperties, "base_discount_amount")
		delete(additionalProperties, "base_discount_canceled")
		delete(additionalProperties, "base_discount_invoiced")
		delete(additionalProperties, "base_discount_refunded")
		delete(additionalProperties, "base_grand_total")
		delete(additionalProperties, "base_discount_tax_compensation_amount")
		delete(additionalProperties, "base_discount_tax_compensation_invoiced")
		delete(additionalProperties, "base_discount_tax_compensation_refunded")
		delete(additionalProperties, "base_shipping_amount")
		delete(additionalProperties, "base_shipping_canceled")
		delete(additionalProperties, "base_shipping_discount_amount")
		delete(additionalProperties, "base_shipping_discount_tax_compensation_amnt")
		delete(additionalProperties, "base_shipping_incl_tax")
		delete(additionalProperties, "base_shipping_invoiced")
		delete(additionalProperties, "base_shipping_refunded")
		delete(additionalProperties, "base_shipping_tax_amount")
		delete(additionalProperties, "base_shipping_tax_refunded")
		delete(additionalProperties, "base_subtotal")
		delete(additionalProperties, "base_subtotal_canceled")
		delete(additionalProperties, "base_subtotal_incl_tax")
		delete(additionalProperties, "base_subtotal_invoiced")
		delete(additionalProperties, "base_subtotal_refunded")
		delete(additionalProperties, "base_tax_amount")
		delete(additionalProperties, "base_tax_canceled")
		delete(additionalProperties, "base_tax_invoiced")
		delete(additionalProperties, "base_tax_refunded")
		delete(additionalProperties, "base_total_canceled")
		delete(additionalProperties, "base_total_due")
		delete(additionalProperties, "base_total_invoiced")
		delete(additionalProperties, "base_total_invoiced_cost")
		delete(additionalProperties, "base_total_offline_refunded")
		delete(additionalProperties, "base_total_online_refunded")
		delete(additionalProperties, "base_total_paid")
		delete(additionalProperties, "base_total_qty_ordered")
		delete(additionalProperties, "base_total_refunded")
		delete(additionalProperties, "base_to_global_rate")
		delete(additionalProperties, "base_to_order_rate")
		delete(additionalProperties, "billing_address_id")
		delete(additionalProperties, "can_ship_partially")
		delete(additionalProperties, "can_ship_partially_item")
		delete(additionalProperties, "coupon_code")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "customer_dob")
		delete(additionalProperties, "customer_email")
		delete(additionalProperties, "customer_firstname")
		delete(additionalProperties, "customer_gender")
		delete(additionalProperties, "customer_group_id")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "customer_is_guest")
		delete(additionalProperties, "customer_lastname")
		delete(additionalProperties, "customer_middlename")
		delete(additionalProperties, "customer_note")
		delete(additionalProperties, "customer_note_notify")
		delete(additionalProperties, "customer_prefix")
		delete(additionalProperties, "customer_suffix")
		delete(additionalProperties, "customer_taxvat")
		delete(additionalProperties, "discount_amount")
		delete(additionalProperties, "discount_canceled")
		delete(additionalProperties, "discount_description")
		delete(additionalProperties, "discount_invoiced")
		delete(additionalProperties, "discount_refunded")
		delete(additionalProperties, "edit_increment")
		delete(additionalProperties, "email_sent")
		delete(additionalProperties, "entity_id")
		delete(additionalProperties, "ext_customer_id")
		delete(additionalProperties, "ext_order_id")
		delete(additionalProperties, "forced_shipment_with_invoice")
		delete(additionalProperties, "global_currency_code")
		delete(additionalProperties, "grand_total")
		delete(additionalProperties, "discount_tax_compensation_amount")
		delete(additionalProperties, "discount_tax_compensation_invoiced")
		delete(additionalProperties, "discount_tax_compensation_refunded")
		delete(additionalProperties, "hold_before_state")
		delete(additionalProperties, "hold_before_status")
		delete(additionalProperties, "increment_id")
		delete(additionalProperties, "is_virtual")
		delete(additionalProperties, "order_currency_code")
		delete(additionalProperties, "original_increment_id")
		delete(additionalProperties, "payment_authorization_amount")
		delete(additionalProperties, "payment_auth_expiration")
		delete(additionalProperties, "protect_code")
		delete(additionalProperties, "quote_address_id")
		delete(additionalProperties, "quote_id")
		delete(additionalProperties, "relation_child_id")
		delete(additionalProperties, "relation_child_real_id")
		delete(additionalProperties, "relation_parent_id")
		delete(additionalProperties, "relation_parent_real_id")
		delete(additionalProperties, "remote_ip")
		delete(additionalProperties, "shipping_amount")
		delete(additionalProperties, "shipping_canceled")
		delete(additionalProperties, "shipping_description")
		delete(additionalProperties, "shipping_discount_amount")
		delete(additionalProperties, "shipping_discount_tax_compensation_amount")
		delete(additionalProperties, "shipping_incl_tax")
		delete(additionalProperties, "shipping_invoiced")
		delete(additionalProperties, "shipping_refunded")
		delete(additionalProperties, "shipping_tax_amount")
		delete(additionalProperties, "shipping_tax_refunded")
		delete(additionalProperties, "state")
		delete(additionalProperties, "status")
		delete(additionalProperties, "store_currency_code")
		delete(additionalProperties, "store_id")
		delete(additionalProperties, "store_name")
		delete(additionalProperties, "store_to_base_rate")
		delete(additionalProperties, "store_to_order_rate")
		delete(additionalProperties, "subtotal")
		delete(additionalProperties, "subtotal_canceled")
		delete(additionalProperties, "subtotal_incl_tax")
		delete(additionalProperties, "subtotal_invoiced")
		delete(additionalProperties, "subtotal_refunded")
		delete(additionalProperties, "tax_amount")
		delete(additionalProperties, "tax_canceled")
		delete(additionalProperties, "tax_invoiced")
		delete(additionalProperties, "tax_refunded")
		delete(additionalProperties, "total_canceled")
		delete(additionalProperties, "total_due")
		delete(additionalProperties, "total_invoiced")
		delete(additionalProperties, "total_item_count")
		delete(additionalProperties, "total_offline_refunded")
		delete(additionalProperties, "total_online_refunded")
		delete(additionalProperties, "total_paid")
		delete(additionalProperties, "total_qty_ordered")
		delete(additionalProperties, "total_refunded")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "weight")
		delete(additionalProperties, "x_forwarded_for")
		delete(additionalProperties, "items")
		delete(additionalProperties, "billing_address")
		delete(additionalProperties, "payment")
		delete(additionalProperties, "status_histories")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataOrderInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataOrderInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataOrderInterface struct {
	value *SalesDataOrderInterface
	isSet bool
}

func (v NullableSalesDataOrderInterface) Get() *SalesDataOrderInterface {
	return v.value
}

func (v *NullableSalesDataOrderInterface) Set(val *SalesDataOrderInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataOrderInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataOrderInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataOrderInterface(val *SalesDataOrderInterface) *NullableSalesDataOrderInterface {
	return &NullableSalesDataOrderInterface{value: val, isSet: true}
}

func (v NullableSalesDataOrderInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataOrderInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
