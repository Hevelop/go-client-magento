/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the TaxDataOrderTaxItemInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaxDataOrderTaxItemInterface{}

// TaxDataOrderTaxItemInterface
type TaxDataOrderTaxItemInterface struct {
	// Tax item ID
	TaxItemId *int32 `json:"tax_item_id,omitempty"`
	// Tax ID
	TaxId *int32 `json:"tax_id,omitempty"`
	// Order item ID
	ItemId *int32 `json:"item_id,omitempty"`
	// Tax code
	TaxCode *string `json:"tax_code,omitempty"`
	// Tax percent
	TaxPercent float32 `json:"tax_percent"`
	// Tax amount
	Amount float32 `json:"amount"`
	// Tax amount in base currency
	BaseAmount float32 `json:"base_amount"`
	// Real tax amount
	RealAmount float32 `json:"real_amount"`
	// Real tax amount in base currency
	RealBaseAmount float32 `json:"real_base_amount"`
	// Associated order item ID
	AssociatedItemId *int32 `json:"associated_item_id,omitempty"`
	// shipping, product, weee, quote_gw, etc...
	TaxableItemType *string `json:"taxable_item_type,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxItemInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TaxDataOrderTaxItemInterface TaxDataOrderTaxItemInterface

// NewTaxDataOrderTaxItemInterface instantiates a new TaxDataOrderTaxItemInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxDataOrderTaxItemInterface(taxPercent float32, amount float32, baseAmount float32, realAmount float32, realBaseAmount float32) *TaxDataOrderTaxItemInterface {
	this := TaxDataOrderTaxItemInterface{}
	this.TaxPercent = taxPercent
	this.Amount = amount
	this.BaseAmount = baseAmount
	this.RealAmount = realAmount
	this.RealBaseAmount = realBaseAmount
	return &this
}

// NewTaxDataOrderTaxItemInterfaceWithDefaults instantiates a new TaxDataOrderTaxItemInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxDataOrderTaxItemInterfaceWithDefaults() *TaxDataOrderTaxItemInterface {
	this := TaxDataOrderTaxItemInterface{}
	return &this
}

// GetTaxItemId returns the TaxItemId field value if set, zero value otherwise.
func (o *TaxDataOrderTaxItemInterface) GetTaxItemId() int32 {
	if o == nil || IsNil(o.TaxItemId) {
		var ret int32
		return ret
	}
	return *o.TaxItemId
}

// GetTaxItemIdOk returns a tuple with the TaxItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetTaxItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxItemId) {
		return nil, false
	}
	return o.TaxItemId, true
}

// HasTaxItemId returns a boolean if a field has been set.
func (o *TaxDataOrderTaxItemInterface) HasTaxItemId() bool {
	if o != nil && !IsNil(o.TaxItemId) {
		return true
	}

	return false
}

// SetTaxItemId gets a reference to the given int32 and assigns it to the TaxItemId field.
func (o *TaxDataOrderTaxItemInterface) SetTaxItemId(v int32) {
	o.TaxItemId = &v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *TaxDataOrderTaxItemInterface) GetTaxId() int32 {
	if o == nil || IsNil(o.TaxId) {
		var ret int32
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetTaxIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TaxId) {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *TaxDataOrderTaxItemInterface) HasTaxId() bool {
	if o != nil && !IsNil(o.TaxId) {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given int32 and assigns it to the TaxId field.
func (o *TaxDataOrderTaxItemInterface) SetTaxId(v int32) {
	o.TaxId = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *TaxDataOrderTaxItemInterface) GetItemId() int32 {
	if o == nil || IsNil(o.ItemId) {
		var ret int32
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *TaxDataOrderTaxItemInterface) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int32 and assigns it to the ItemId field.
func (o *TaxDataOrderTaxItemInterface) SetItemId(v int32) {
	o.ItemId = &v
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *TaxDataOrderTaxItemInterface) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *TaxDataOrderTaxItemInterface) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *TaxDataOrderTaxItemInterface) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetTaxPercent returns the TaxPercent field value
func (o *TaxDataOrderTaxItemInterface) GetTaxPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TaxPercent
}

// GetTaxPercentOk returns a tuple with the TaxPercent field value
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetTaxPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxPercent, true
}

// SetTaxPercent sets field value
func (o *TaxDataOrderTaxItemInterface) SetTaxPercent(v float32) {
	o.TaxPercent = v
}

// GetAmount returns the Amount field value
func (o *TaxDataOrderTaxItemInterface) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TaxDataOrderTaxItemInterface) SetAmount(v float32) {
	o.Amount = v
}

// GetBaseAmount returns the BaseAmount field value
func (o *TaxDataOrderTaxItemInterface) GetBaseAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BaseAmount
}

// GetBaseAmountOk returns a tuple with the BaseAmount field value
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetBaseAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseAmount, true
}

// SetBaseAmount sets field value
func (o *TaxDataOrderTaxItemInterface) SetBaseAmount(v float32) {
	o.BaseAmount = v
}

// GetRealAmount returns the RealAmount field value
func (o *TaxDataOrderTaxItemInterface) GetRealAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RealAmount
}

// GetRealAmountOk returns a tuple with the RealAmount field value
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetRealAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RealAmount, true
}

// SetRealAmount sets field value
func (o *TaxDataOrderTaxItemInterface) SetRealAmount(v float32) {
	o.RealAmount = v
}

// GetRealBaseAmount returns the RealBaseAmount field value
func (o *TaxDataOrderTaxItemInterface) GetRealBaseAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RealBaseAmount
}

// GetRealBaseAmountOk returns a tuple with the RealBaseAmount field value
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetRealBaseAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RealBaseAmount, true
}

// SetRealBaseAmount sets field value
func (o *TaxDataOrderTaxItemInterface) SetRealBaseAmount(v float32) {
	o.RealBaseAmount = v
}

// GetAssociatedItemId returns the AssociatedItemId field value if set, zero value otherwise.
func (o *TaxDataOrderTaxItemInterface) GetAssociatedItemId() int32 {
	if o == nil || IsNil(o.AssociatedItemId) {
		var ret int32
		return ret
	}
	return *o.AssociatedItemId
}

// GetAssociatedItemIdOk returns a tuple with the AssociatedItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetAssociatedItemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AssociatedItemId) {
		return nil, false
	}
	return o.AssociatedItemId, true
}

// HasAssociatedItemId returns a boolean if a field has been set.
func (o *TaxDataOrderTaxItemInterface) HasAssociatedItemId() bool {
	if o != nil && !IsNil(o.AssociatedItemId) {
		return true
	}

	return false
}

// SetAssociatedItemId gets a reference to the given int32 and assigns it to the AssociatedItemId field.
func (o *TaxDataOrderTaxItemInterface) SetAssociatedItemId(v int32) {
	o.AssociatedItemId = &v
}

// GetTaxableItemType returns the TaxableItemType field value if set, zero value otherwise.
func (o *TaxDataOrderTaxItemInterface) GetTaxableItemType() string {
	if o == nil || IsNil(o.TaxableItemType) {
		var ret string
		return ret
	}
	return *o.TaxableItemType
}

// GetTaxableItemTypeOk returns a tuple with the TaxableItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetTaxableItemTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxableItemType) {
		return nil, false
	}
	return o.TaxableItemType, true
}

// HasTaxableItemType returns a boolean if a field has been set.
func (o *TaxDataOrderTaxItemInterface) HasTaxableItemType() bool {
	if o != nil && !IsNil(o.TaxableItemType) {
		return true
	}

	return false
}

// SetTaxableItemType gets a reference to the given string and assigns it to the TaxableItemType field.
func (o *TaxDataOrderTaxItemInterface) SetTaxableItemType(v string) {
	o.TaxableItemType = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *TaxDataOrderTaxItemInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxDataOrderTaxItemInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *TaxDataOrderTaxItemInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *TaxDataOrderTaxItemInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o TaxDataOrderTaxItemInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaxDataOrderTaxItemInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxItemId) {
		toSerialize["tax_item_id"] = o.TaxItemId
	}
	if !IsNil(o.TaxId) {
		toSerialize["tax_id"] = o.TaxId
	}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.TaxCode) {
		toSerialize["tax_code"] = o.TaxCode
	}
	toSerialize["tax_percent"] = o.TaxPercent
	toSerialize["amount"] = o.Amount
	toSerialize["base_amount"] = o.BaseAmount
	toSerialize["real_amount"] = o.RealAmount
	toSerialize["real_base_amount"] = o.RealBaseAmount
	if !IsNil(o.AssociatedItemId) {
		toSerialize["associated_item_id"] = o.AssociatedItemId
	}
	if !IsNil(o.TaxableItemType) {
		toSerialize["taxable_item_type"] = o.TaxableItemType
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TaxDataOrderTaxItemInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tax_percent",
		"amount",
		"base_amount",
		"real_amount",
		"real_base_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTaxDataOrderTaxItemInterface := _TaxDataOrderTaxItemInterface{}

	err = json.Unmarshal(data, &varTaxDataOrderTaxItemInterface)

	if err != nil {
		return err
	}

	*o = TaxDataOrderTaxItemInterface(varTaxDataOrderTaxItemInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tax_item_id")
		delete(additionalProperties, "tax_id")
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "tax_code")
		delete(additionalProperties, "tax_percent")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "base_amount")
		delete(additionalProperties, "real_amount")
		delete(additionalProperties, "real_base_amount")
		delete(additionalProperties, "associated_item_id")
		delete(additionalProperties, "taxable_item_type")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *TaxDataOrderTaxItemInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *TaxDataOrderTaxItemInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableTaxDataOrderTaxItemInterface struct {
	value *TaxDataOrderTaxItemInterface
	isSet bool
}

func (v NullableTaxDataOrderTaxItemInterface) Get() *TaxDataOrderTaxItemInterface {
	return v.value
}

func (v *NullableTaxDataOrderTaxItemInterface) Set(val *TaxDataOrderTaxItemInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxDataOrderTaxItemInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxDataOrderTaxItemInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxDataOrderTaxItemInterface(val *TaxDataOrderTaxItemInterface) *NullableTaxDataOrderTaxItemInterface {
	return &NullableTaxDataOrderTaxItemInterface{value: val, isSet: true}
}

func (v NullableTaxDataOrderTaxItemInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxDataOrderTaxItemInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
