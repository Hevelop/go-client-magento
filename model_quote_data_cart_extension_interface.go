/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the QuoteDataCartExtensionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteDataCartExtensionInterface{}

// QuoteDataCartExtensionInterface ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface
type QuoteDataCartExtensionInterface struct {
	ShippingAssignments  []QuoteDataShippingAssignmentInterface       `json:"shipping_assignments,omitempty"`
	NegotiableQuote      *NegotiableQuoteDataNegotiableQuoteInterface `json:"negotiable_quote,omitempty"`
	CouponCodes          []string                                     `json:"coupon_codes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuoteDataCartExtensionInterface QuoteDataCartExtensionInterface

// NewQuoteDataCartExtensionInterface instantiates a new QuoteDataCartExtensionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteDataCartExtensionInterface() *QuoteDataCartExtensionInterface {
	this := QuoteDataCartExtensionInterface{}
	return &this
}

// NewQuoteDataCartExtensionInterfaceWithDefaults instantiates a new QuoteDataCartExtensionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteDataCartExtensionInterfaceWithDefaults() *QuoteDataCartExtensionInterface {
	this := QuoteDataCartExtensionInterface{}
	return &this
}

// GetShippingAssignments returns the ShippingAssignments field value if set, zero value otherwise.
func (o *QuoteDataCartExtensionInterface) GetShippingAssignments() []QuoteDataShippingAssignmentInterface {
	if o == nil || IsNil(o.ShippingAssignments) {
		var ret []QuoteDataShippingAssignmentInterface
		return ret
	}
	return o.ShippingAssignments
}

// GetShippingAssignmentsOk returns a tuple with the ShippingAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataCartExtensionInterface) GetShippingAssignmentsOk() ([]QuoteDataShippingAssignmentInterface, bool) {
	if o == nil || IsNil(o.ShippingAssignments) {
		return nil, false
	}
	return o.ShippingAssignments, true
}

// HasShippingAssignments returns a boolean if a field has been set.
func (o *QuoteDataCartExtensionInterface) HasShippingAssignments() bool {
	if o != nil && !IsNil(o.ShippingAssignments) {
		return true
	}

	return false
}

// SetShippingAssignments gets a reference to the given []QuoteDataShippingAssignmentInterface and assigns it to the ShippingAssignments field.
func (o *QuoteDataCartExtensionInterface) SetShippingAssignments(v []QuoteDataShippingAssignmentInterface) {
	o.ShippingAssignments = v
}

// GetNegotiableQuote returns the NegotiableQuote field value if set, zero value otherwise.
func (o *QuoteDataCartExtensionInterface) GetNegotiableQuote() NegotiableQuoteDataNegotiableQuoteInterface {
	if o == nil || IsNil(o.NegotiableQuote) {
		var ret NegotiableQuoteDataNegotiableQuoteInterface
		return ret
	}
	return *o.NegotiableQuote
}

// GetNegotiableQuoteOk returns a tuple with the NegotiableQuote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataCartExtensionInterface) GetNegotiableQuoteOk() (*NegotiableQuoteDataNegotiableQuoteInterface, bool) {
	if o == nil || IsNil(o.NegotiableQuote) {
		return nil, false
	}
	return o.NegotiableQuote, true
}

// HasNegotiableQuote returns a boolean if a field has been set.
func (o *QuoteDataCartExtensionInterface) HasNegotiableQuote() bool {
	if o != nil && !IsNil(o.NegotiableQuote) {
		return true
	}

	return false
}

// SetNegotiableQuote gets a reference to the given NegotiableQuoteDataNegotiableQuoteInterface and assigns it to the NegotiableQuote field.
func (o *QuoteDataCartExtensionInterface) SetNegotiableQuote(v NegotiableQuoteDataNegotiableQuoteInterface) {
	o.NegotiableQuote = &v
}

// GetCouponCodes returns the CouponCodes field value if set, zero value otherwise.
func (o *QuoteDataCartExtensionInterface) GetCouponCodes() []string {
	if o == nil || IsNil(o.CouponCodes) {
		var ret []string
		return ret
	}
	return o.CouponCodes
}

// GetCouponCodesOk returns a tuple with the CouponCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteDataCartExtensionInterface) GetCouponCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.CouponCodes) {
		return nil, false
	}
	return o.CouponCodes, true
}

// HasCouponCodes returns a boolean if a field has been set.
func (o *QuoteDataCartExtensionInterface) HasCouponCodes() bool {
	if o != nil && !IsNil(o.CouponCodes) {
		return true
	}

	return false
}

// SetCouponCodes gets a reference to the given []string and assigns it to the CouponCodes field.
func (o *QuoteDataCartExtensionInterface) SetCouponCodes(v []string) {
	o.CouponCodes = v
}

func (o QuoteDataCartExtensionInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteDataCartExtensionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShippingAssignments) {
		toSerialize["shipping_assignments"] = o.ShippingAssignments
	}
	if !IsNil(o.NegotiableQuote) {
		toSerialize["negotiable_quote"] = o.NegotiableQuote
	}
	if !IsNil(o.CouponCodes) {
		toSerialize["coupon_codes"] = o.CouponCodes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuoteDataCartExtensionInterface) UnmarshalJSON(data []byte) (err error) {
	varQuoteDataCartExtensionInterface := _QuoteDataCartExtensionInterface{}

	err = json.Unmarshal(data, &varQuoteDataCartExtensionInterface)

	if err != nil {
		return err
	}

	*o = QuoteDataCartExtensionInterface(varQuoteDataCartExtensionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "shipping_assignments")
		delete(additionalProperties, "negotiable_quote")
		delete(additionalProperties, "coupon_codes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *QuoteDataCartExtensionInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *QuoteDataCartExtensionInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableQuoteDataCartExtensionInterface struct {
	value *QuoteDataCartExtensionInterface
	isSet bool
}

func (v NullableQuoteDataCartExtensionInterface) Get() *QuoteDataCartExtensionInterface {
	return v.value
}

func (v *NullableQuoteDataCartExtensionInterface) Set(val *QuoteDataCartExtensionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteDataCartExtensionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteDataCartExtensionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteDataCartExtensionInterface(val *QuoteDataCartExtensionInterface) *NullableQuoteDataCartExtensionInterface {
	return &NullableQuoteDataCartExtensionInterface{value: val, isSet: true}
}

func (v NullableQuoteDataCartExtensionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteDataCartExtensionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
