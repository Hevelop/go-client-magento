/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the CompanyDataCompanyOrderInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyDataCompanyOrderInterface{}

// CompanyDataCompanyOrderInterface Order company extension attributes interface. Adds new company attributes to orders.
type CompanyDataCompanyOrderInterface struct {
	// Order ID.
	OrderId *int32 `json:"order_id,omitempty"`
	// Company ID.
	CompanyId *int32 `json:"company_id,omitempty"`
	// Company name.
	CompanyName *string `json:"company_name,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyOrderInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CompanyDataCompanyOrderInterface CompanyDataCompanyOrderInterface

// NewCompanyDataCompanyOrderInterface instantiates a new CompanyDataCompanyOrderInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyDataCompanyOrderInterface() *CompanyDataCompanyOrderInterface {
	this := CompanyDataCompanyOrderInterface{}
	return &this
}

// NewCompanyDataCompanyOrderInterfaceWithDefaults instantiates a new CompanyDataCompanyOrderInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyDataCompanyOrderInterfaceWithDefaults() *CompanyDataCompanyOrderInterface {
	this := CompanyDataCompanyOrderInterface{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CompanyDataCompanyOrderInterface) GetOrderId() int32 {
	if o == nil || IsNil(o.OrderId) {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyOrderInterface) GetOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CompanyDataCompanyOrderInterface) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *CompanyDataCompanyOrderInterface) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *CompanyDataCompanyOrderInterface) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyOrderInterface) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *CompanyDataCompanyOrderInterface) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *CompanyDataCompanyOrderInterface) SetCompanyId(v int32) {
	o.CompanyId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *CompanyDataCompanyOrderInterface) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyOrderInterface) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *CompanyDataCompanyOrderInterface) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *CompanyDataCompanyOrderInterface) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CompanyDataCompanyOrderInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyDataCompanyOrderInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CompanyDataCompanyOrderInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *CompanyDataCompanyOrderInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o CompanyDataCompanyOrderInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyDataCompanyOrderInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CompanyDataCompanyOrderInterface) UnmarshalJSON(data []byte) (err error) {
	varCompanyDataCompanyOrderInterface := _CompanyDataCompanyOrderInterface{}

	err = json.Unmarshal(data, &varCompanyDataCompanyOrderInterface)

	if err != nil {
		return err
	}

	*o = CompanyDataCompanyOrderInterface(varCompanyDataCompanyOrderInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "order_id")
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "company_name")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CompanyDataCompanyOrderInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CompanyDataCompanyOrderInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCompanyDataCompanyOrderInterface struct {
	value *CompanyDataCompanyOrderInterface
	isSet bool
}

func (v NullableCompanyDataCompanyOrderInterface) Get() *CompanyDataCompanyOrderInterface {
	return v.value
}

func (v *NullableCompanyDataCompanyOrderInterface) Set(val *CompanyDataCompanyOrderInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyDataCompanyOrderInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyDataCompanyOrderInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyDataCompanyOrderInterface(val *CompanyDataCompanyOrderInterface) *NullableCompanyDataCompanyOrderInterface {
	return &NullableCompanyDataCompanyOrderInterface{value: val, isSet: true}
}

func (v NullableCompanyDataCompanyOrderInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyDataCompanyOrderInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
