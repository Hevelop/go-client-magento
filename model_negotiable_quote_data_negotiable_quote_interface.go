/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the NegotiableQuoteDataNegotiableQuoteInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NegotiableQuoteDataNegotiableQuoteInterface{}

// NegotiableQuoteDataNegotiableQuoteInterface Interface NegotiableQuoteInterface
type NegotiableQuoteDataNegotiableQuoteInterface struct {
	// Negotiable quote ID.
	QuoteId int32 `json:"quote_id"`
	// Is regular quote.
	IsRegularQuote bool `json:"is_regular_quote"`
	// Negotiable quote status.
	Status string `json:"status"`
	// Negotiated price type.
	NegotiatedPriceType int32 `json:"negotiated_price_type"`
	// Negotiated price value.
	NegotiatedPriceValue float32 `json:"negotiated_price_value"`
	// Proposed shipping price.
	ShippingPrice float32 `json:"shipping_price"`
	// Negotiable quote name.
	QuoteName string `json:"quote_name"`
	// Expiration period.
	ExpirationPeriod string `json:"expiration_period"`
	// Email notification status.
	EmailNotificationStatus int32 `json:"email_notification_status"`
	// Has unconfirmed changes.
	HasUnconfirmedChanges bool `json:"has_unconfirmed_changes"`
	// Shipping tax changes.
	IsShippingTaxChanged bool `json:"is_shipping_tax_changed"`
	// Customer price changes.
	IsCustomerPriceChanged bool `json:"is_customer_price_changed"`
	// Quote notifications.
	Notifications int32 `json:"notifications"`
	// Quote rules.
	AppliedRuleIds string `json:"applied_rule_ids"`
	// Is address draft.
	IsAddressDraft bool `json:"is_address_draft"`
	// Deleted products sku.
	DeletedSku string `json:"deleted_sku"`
	// Quote creator id.
	CreatorId int32 `json:"creator_id"`
	// Quote creator type.
	CreatorType int32 `json:"creator_type"`
	// Quote original total price.
	OriginalTotalPrice *float32 `json:"original_total_price,omitempty"`
	// Quote original total price in base currency.
	BaseOriginalTotalPrice *float32 `json:"base_original_total_price,omitempty"`
	// Quote negotiated total price.
	NegotiatedTotalPrice *float32 `json:"negotiated_total_price,omitempty"`
	// Quote negotiated total price in base currency.
	BaseNegotiatedTotalPrice *float32 `json:"base_negotiated_total_price,omitempty"`
	// ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NegotiableQuoteDataNegotiableQuoteInterface NegotiableQuoteDataNegotiableQuoteInterface

// NewNegotiableQuoteDataNegotiableQuoteInterface instantiates a new NegotiableQuoteDataNegotiableQuoteInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNegotiableQuoteDataNegotiableQuoteInterface(quoteId int32, isRegularQuote bool, status string, negotiatedPriceType int32, negotiatedPriceValue float32, shippingPrice float32, quoteName string, expirationPeriod string, emailNotificationStatus int32, hasUnconfirmedChanges bool, isShippingTaxChanged bool, isCustomerPriceChanged bool, notifications int32, appliedRuleIds string, isAddressDraft bool, deletedSku string, creatorId int32, creatorType int32) *NegotiableQuoteDataNegotiableQuoteInterface {
	this := NegotiableQuoteDataNegotiableQuoteInterface{}
	this.QuoteId = quoteId
	this.IsRegularQuote = isRegularQuote
	this.Status = status
	this.NegotiatedPriceType = negotiatedPriceType
	this.NegotiatedPriceValue = negotiatedPriceValue
	this.ShippingPrice = shippingPrice
	this.QuoteName = quoteName
	this.ExpirationPeriod = expirationPeriod
	this.EmailNotificationStatus = emailNotificationStatus
	this.HasUnconfirmedChanges = hasUnconfirmedChanges
	this.IsShippingTaxChanged = isShippingTaxChanged
	this.IsCustomerPriceChanged = isCustomerPriceChanged
	this.Notifications = notifications
	this.AppliedRuleIds = appliedRuleIds
	this.IsAddressDraft = isAddressDraft
	this.DeletedSku = deletedSku
	this.CreatorId = creatorId
	this.CreatorType = creatorType
	return &this
}

// NewNegotiableQuoteDataNegotiableQuoteInterfaceWithDefaults instantiates a new NegotiableQuoteDataNegotiableQuoteInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNegotiableQuoteDataNegotiableQuoteInterfaceWithDefaults() *NegotiableQuoteDataNegotiableQuoteInterface {
	this := NegotiableQuoteDataNegotiableQuoteInterface{}
	return &this
}

// GetQuoteId returns the QuoteId field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetQuoteId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetQuoteIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteId, true
}

// SetQuoteId sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetQuoteId(v int32) {
	o.QuoteId = v
}

// GetIsRegularQuote returns the IsRegularQuote field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsRegularQuote() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRegularQuote
}

// GetIsRegularQuoteOk returns a tuple with the IsRegularQuote field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsRegularQuoteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRegularQuote, true
}

// SetIsRegularQuote sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetIsRegularQuote(v bool) {
	o.IsRegularQuote = v
}

// GetStatus returns the Status field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetStatus(v string) {
	o.Status = v
}

// GetNegotiatedPriceType returns the NegotiatedPriceType field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNegotiatedPriceType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NegotiatedPriceType
}

// GetNegotiatedPriceTypeOk returns a tuple with the NegotiatedPriceType field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNegotiatedPriceTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NegotiatedPriceType, true
}

// SetNegotiatedPriceType sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetNegotiatedPriceType(v int32) {
	o.NegotiatedPriceType = v
}

// GetNegotiatedPriceValue returns the NegotiatedPriceValue field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNegotiatedPriceValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NegotiatedPriceValue
}

// GetNegotiatedPriceValueOk returns a tuple with the NegotiatedPriceValue field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNegotiatedPriceValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NegotiatedPriceValue, true
}

// SetNegotiatedPriceValue sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetNegotiatedPriceValue(v float32) {
	o.NegotiatedPriceValue = v
}

// GetShippingPrice returns the ShippingPrice field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetShippingPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ShippingPrice
}

// GetShippingPriceOk returns a tuple with the ShippingPrice field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetShippingPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingPrice, true
}

// SetShippingPrice sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetShippingPrice(v float32) {
	o.ShippingPrice = v
}

// GetQuoteName returns the QuoteName field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetQuoteName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteName
}

// GetQuoteNameOk returns a tuple with the QuoteName field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetQuoteNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteName, true
}

// SetQuoteName sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetQuoteName(v string) {
	o.QuoteName = v
}

// GetExpirationPeriod returns the ExpirationPeriod field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetExpirationPeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpirationPeriod
}

// GetExpirationPeriodOk returns a tuple with the ExpirationPeriod field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetExpirationPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationPeriod, true
}

// SetExpirationPeriod sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetExpirationPeriod(v string) {
	o.ExpirationPeriod = v
}

// GetEmailNotificationStatus returns the EmailNotificationStatus field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetEmailNotificationStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EmailNotificationStatus
}

// GetEmailNotificationStatusOk returns a tuple with the EmailNotificationStatus field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetEmailNotificationStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailNotificationStatus, true
}

// SetEmailNotificationStatus sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetEmailNotificationStatus(v int32) {
	o.EmailNotificationStatus = v
}

// GetHasUnconfirmedChanges returns the HasUnconfirmedChanges field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetHasUnconfirmedChanges() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasUnconfirmedChanges
}

// GetHasUnconfirmedChangesOk returns a tuple with the HasUnconfirmedChanges field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetHasUnconfirmedChangesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasUnconfirmedChanges, true
}

// SetHasUnconfirmedChanges sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetHasUnconfirmedChanges(v bool) {
	o.HasUnconfirmedChanges = v
}

// GetIsShippingTaxChanged returns the IsShippingTaxChanged field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsShippingTaxChanged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsShippingTaxChanged
}

// GetIsShippingTaxChangedOk returns a tuple with the IsShippingTaxChanged field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsShippingTaxChangedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsShippingTaxChanged, true
}

// SetIsShippingTaxChanged sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetIsShippingTaxChanged(v bool) {
	o.IsShippingTaxChanged = v
}

// GetIsCustomerPriceChanged returns the IsCustomerPriceChanged field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsCustomerPriceChanged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCustomerPriceChanged
}

// GetIsCustomerPriceChangedOk returns a tuple with the IsCustomerPriceChanged field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsCustomerPriceChangedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCustomerPriceChanged, true
}

// SetIsCustomerPriceChanged sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetIsCustomerPriceChanged(v bool) {
	o.IsCustomerPriceChanged = v
}

// GetNotifications returns the Notifications field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNotifications() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNotificationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Notifications, true
}

// SetNotifications sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetNotifications(v int32) {
	o.Notifications = v
}

// GetAppliedRuleIds returns the AppliedRuleIds field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetAppliedRuleIds() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppliedRuleIds
}

// GetAppliedRuleIdsOk returns a tuple with the AppliedRuleIds field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetAppliedRuleIdsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppliedRuleIds, true
}

// SetAppliedRuleIds sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetAppliedRuleIds(v string) {
	o.AppliedRuleIds = v
}

// GetIsAddressDraft returns the IsAddressDraft field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsAddressDraft() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAddressDraft
}

// GetIsAddressDraftOk returns a tuple with the IsAddressDraft field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetIsAddressDraftOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAddressDraft, true
}

// SetIsAddressDraft sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetIsAddressDraft(v bool) {
	o.IsAddressDraft = v
}

// GetDeletedSku returns the DeletedSku field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetDeletedSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletedSku
}

// GetDeletedSkuOk returns a tuple with the DeletedSku field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetDeletedSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedSku, true
}

// SetDeletedSku sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetDeletedSku(v string) {
	o.DeletedSku = v
}

// GetCreatorId returns the CreatorId field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetCreatorId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetCreatorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetCreatorId(v int32) {
	o.CreatorId = v
}

// GetCreatorType returns the CreatorType field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetCreatorType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatorType
}

// GetCreatorTypeOk returns a tuple with the CreatorType field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetCreatorTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorType, true
}

// SetCreatorType sets field value
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetCreatorType(v int32) {
	o.CreatorType = v
}

// GetOriginalTotalPrice returns the OriginalTotalPrice field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetOriginalTotalPrice() float32 {
	if o == nil || IsNil(o.OriginalTotalPrice) {
		var ret float32
		return ret
	}
	return *o.OriginalTotalPrice
}

// GetOriginalTotalPriceOk returns a tuple with the OriginalTotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetOriginalTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.OriginalTotalPrice) {
		return nil, false
	}
	return o.OriginalTotalPrice, true
}

// HasOriginalTotalPrice returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) HasOriginalTotalPrice() bool {
	if o != nil && !IsNil(o.OriginalTotalPrice) {
		return true
	}

	return false
}

// SetOriginalTotalPrice gets a reference to the given float32 and assigns it to the OriginalTotalPrice field.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetOriginalTotalPrice(v float32) {
	o.OriginalTotalPrice = &v
}

// GetBaseOriginalTotalPrice returns the BaseOriginalTotalPrice field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetBaseOriginalTotalPrice() float32 {
	if o == nil || IsNil(o.BaseOriginalTotalPrice) {
		var ret float32
		return ret
	}
	return *o.BaseOriginalTotalPrice
}

// GetBaseOriginalTotalPriceOk returns a tuple with the BaseOriginalTotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetBaseOriginalTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseOriginalTotalPrice) {
		return nil, false
	}
	return o.BaseOriginalTotalPrice, true
}

// HasBaseOriginalTotalPrice returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) HasBaseOriginalTotalPrice() bool {
	if o != nil && !IsNil(o.BaseOriginalTotalPrice) {
		return true
	}

	return false
}

// SetBaseOriginalTotalPrice gets a reference to the given float32 and assigns it to the BaseOriginalTotalPrice field.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetBaseOriginalTotalPrice(v float32) {
	o.BaseOriginalTotalPrice = &v
}

// GetNegotiatedTotalPrice returns the NegotiatedTotalPrice field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNegotiatedTotalPrice() float32 {
	if o == nil || IsNil(o.NegotiatedTotalPrice) {
		var ret float32
		return ret
	}
	return *o.NegotiatedTotalPrice
}

// GetNegotiatedTotalPriceOk returns a tuple with the NegotiatedTotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetNegotiatedTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.NegotiatedTotalPrice) {
		return nil, false
	}
	return o.NegotiatedTotalPrice, true
}

// HasNegotiatedTotalPrice returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) HasNegotiatedTotalPrice() bool {
	if o != nil && !IsNil(o.NegotiatedTotalPrice) {
		return true
	}

	return false
}

// SetNegotiatedTotalPrice gets a reference to the given float32 and assigns it to the NegotiatedTotalPrice field.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetNegotiatedTotalPrice(v float32) {
	o.NegotiatedTotalPrice = &v
}

// GetBaseNegotiatedTotalPrice returns the BaseNegotiatedTotalPrice field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetBaseNegotiatedTotalPrice() float32 {
	if o == nil || IsNil(o.BaseNegotiatedTotalPrice) {
		var ret float32
		return ret
	}
	return *o.BaseNegotiatedTotalPrice
}

// GetBaseNegotiatedTotalPriceOk returns a tuple with the BaseNegotiatedTotalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetBaseNegotiatedTotalPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseNegotiatedTotalPrice) {
		return nil, false
	}
	return o.BaseNegotiatedTotalPrice, true
}

// HasBaseNegotiatedTotalPrice returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) HasBaseNegotiatedTotalPrice() bool {
	if o != nil && !IsNil(o.BaseNegotiatedTotalPrice) {
		return true
	}

	return false
}

// SetBaseNegotiatedTotalPrice gets a reference to the given float32 and assigns it to the BaseNegotiatedTotalPrice field.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetBaseNegotiatedTotalPrice(v float32) {
	o.BaseNegotiatedTotalPrice = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o NegotiableQuoteDataNegotiableQuoteInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NegotiableQuoteDataNegotiableQuoteInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quote_id"] = o.QuoteId
	toSerialize["is_regular_quote"] = o.IsRegularQuote
	toSerialize["status"] = o.Status
	toSerialize["negotiated_price_type"] = o.NegotiatedPriceType
	toSerialize["negotiated_price_value"] = o.NegotiatedPriceValue
	toSerialize["shipping_price"] = o.ShippingPrice
	toSerialize["quote_name"] = o.QuoteName
	toSerialize["expiration_period"] = o.ExpirationPeriod
	toSerialize["email_notification_status"] = o.EmailNotificationStatus
	toSerialize["has_unconfirmed_changes"] = o.HasUnconfirmedChanges
	toSerialize["is_shipping_tax_changed"] = o.IsShippingTaxChanged
	toSerialize["is_customer_price_changed"] = o.IsCustomerPriceChanged
	toSerialize["notifications"] = o.Notifications
	toSerialize["applied_rule_ids"] = o.AppliedRuleIds
	toSerialize["is_address_draft"] = o.IsAddressDraft
	toSerialize["deleted_sku"] = o.DeletedSku
	toSerialize["creator_id"] = o.CreatorId
	toSerialize["creator_type"] = o.CreatorType
	if !IsNil(o.OriginalTotalPrice) {
		toSerialize["original_total_price"] = o.OriginalTotalPrice
	}
	if !IsNil(o.BaseOriginalTotalPrice) {
		toSerialize["base_original_total_price"] = o.BaseOriginalTotalPrice
	}
	if !IsNil(o.NegotiatedTotalPrice) {
		toSerialize["negotiated_total_price"] = o.NegotiatedTotalPrice
	}
	if !IsNil(o.BaseNegotiatedTotalPrice) {
		toSerialize["base_negotiated_total_price"] = o.BaseNegotiatedTotalPrice
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NegotiableQuoteDataNegotiableQuoteInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quote_id",
		"is_regular_quote",
		"status",
		"negotiated_price_type",
		"negotiated_price_value",
		"shipping_price",
		"quote_name",
		"expiration_period",
		"email_notification_status",
		"has_unconfirmed_changes",
		"is_shipping_tax_changed",
		"is_customer_price_changed",
		"notifications",
		"applied_rule_ids",
		"is_address_draft",
		"deleted_sku",
		"creator_id",
		"creator_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNegotiableQuoteDataNegotiableQuoteInterface := _NegotiableQuoteDataNegotiableQuoteInterface{}

	err = json.Unmarshal(data, &varNegotiableQuoteDataNegotiableQuoteInterface)

	if err != nil {
		return err
	}

	*o = NegotiableQuoteDataNegotiableQuoteInterface(varNegotiableQuoteDataNegotiableQuoteInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "quote_id")
		delete(additionalProperties, "is_regular_quote")
		delete(additionalProperties, "status")
		delete(additionalProperties, "negotiated_price_type")
		delete(additionalProperties, "negotiated_price_value")
		delete(additionalProperties, "shipping_price")
		delete(additionalProperties, "quote_name")
		delete(additionalProperties, "expiration_period")
		delete(additionalProperties, "email_notification_status")
		delete(additionalProperties, "has_unconfirmed_changes")
		delete(additionalProperties, "is_shipping_tax_changed")
		delete(additionalProperties, "is_customer_price_changed")
		delete(additionalProperties, "notifications")
		delete(additionalProperties, "applied_rule_ids")
		delete(additionalProperties, "is_address_draft")
		delete(additionalProperties, "deleted_sku")
		delete(additionalProperties, "creator_id")
		delete(additionalProperties, "creator_type")
		delete(additionalProperties, "original_total_price")
		delete(additionalProperties, "base_original_total_price")
		delete(additionalProperties, "negotiated_total_price")
		delete(additionalProperties, "base_negotiated_total_price")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *NegotiableQuoteDataNegotiableQuoteInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *NegotiableQuoteDataNegotiableQuoteInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableNegotiableQuoteDataNegotiableQuoteInterface struct {
	value *NegotiableQuoteDataNegotiableQuoteInterface
	isSet bool
}

func (v NullableNegotiableQuoteDataNegotiableQuoteInterface) Get() *NegotiableQuoteDataNegotiableQuoteInterface {
	return v.value
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteInterface) Set(val *NegotiableQuoteDataNegotiableQuoteInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableNegotiableQuoteDataNegotiableQuoteInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNegotiableQuoteDataNegotiableQuoteInterface(val *NegotiableQuoteDataNegotiableQuoteInterface) *NullableNegotiableQuoteDataNegotiableQuoteInterface {
	return &NullableNegotiableQuoteDataNegotiableQuoteInterface{value: val, isSet: true}
}

func (v NullableNegotiableQuoteDataNegotiableQuoteInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
