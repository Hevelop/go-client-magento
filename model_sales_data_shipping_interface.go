/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the SalesDataShippingInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataShippingInterface{}

// SalesDataShippingInterface Interface ShippingInterface
type SalesDataShippingInterface struct {
	Address *SalesDataOrderAddressInterface `json:"address,omitempty"`
	// Shipping method
	Method *string                  `json:"method,omitempty"`
	Total  *SalesDataTotalInterface `json:"total,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShippingInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataShippingInterface SalesDataShippingInterface

// NewSalesDataShippingInterface instantiates a new SalesDataShippingInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataShippingInterface() *SalesDataShippingInterface {
	this := SalesDataShippingInterface{}
	return &this
}

// NewSalesDataShippingInterfaceWithDefaults instantiates a new SalesDataShippingInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataShippingInterfaceWithDefaults() *SalesDataShippingInterface {
	this := SalesDataShippingInterface{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SalesDataShippingInterface) GetAddress() SalesDataOrderAddressInterface {
	if o == nil || IsNil(o.Address) {
		var ret SalesDataOrderAddressInterface
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShippingInterface) GetAddressOk() (*SalesDataOrderAddressInterface, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SalesDataShippingInterface) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given SalesDataOrderAddressInterface and assigns it to the Address field.
func (o *SalesDataShippingInterface) SetAddress(v SalesDataOrderAddressInterface) {
	o.Address = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *SalesDataShippingInterface) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShippingInterface) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *SalesDataShippingInterface) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *SalesDataShippingInterface) SetMethod(v string) {
	o.Method = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *SalesDataShippingInterface) GetTotal() SalesDataTotalInterface {
	if o == nil || IsNil(o.Total) {
		var ret SalesDataTotalInterface
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShippingInterface) GetTotalOk() (*SalesDataTotalInterface, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *SalesDataShippingInterface) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given SalesDataTotalInterface and assigns it to the Total field.
func (o *SalesDataShippingInterface) SetTotal(v SalesDataTotalInterface) {
	o.Total = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataShippingInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataShippingInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataShippingInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *SalesDataShippingInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o SalesDataShippingInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataShippingInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataShippingInterface) UnmarshalJSON(data []byte) (err error) {
	varSalesDataShippingInterface := _SalesDataShippingInterface{}

	err = json.Unmarshal(data, &varSalesDataShippingInterface)

	if err != nil {
		return err
	}

	*o = SalesDataShippingInterface(varSalesDataShippingInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "method")
		delete(additionalProperties, "total")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataShippingInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataShippingInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataShippingInterface struct {
	value *SalesDataShippingInterface
	isSet bool
}

func (v NullableSalesDataShippingInterface) Get() *SalesDataShippingInterface {
	return v.value
}

func (v *NullableSalesDataShippingInterface) Set(val *SalesDataShippingInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataShippingInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataShippingInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataShippingInterface(val *SalesDataShippingInterface) *NullableSalesDataShippingInterface {
	return &NullableSalesDataShippingInterface{value: val, isSet: true}
}

func (v NullableSalesDataShippingInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataShippingInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
