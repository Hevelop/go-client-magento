/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the NegotiableQuoteDataNegotiableQuoteItemInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NegotiableQuoteDataNegotiableQuoteItemInterface{}

// NegotiableQuoteDataNegotiableQuoteItemInterface Interface CompanyQuoteConfigInterface
type NegotiableQuoteDataNegotiableQuoteItemInterface struct {
	// Quote item id
	ItemId int32 `json:"item_id"`
	// Quote item original price
	OriginalPrice float32 `json:"original_price"`
	// Quote item original tax amount
	OriginalTaxAmount float32 `json:"original_tax_amount"`
	// Quote item original discount amount
	OriginalDiscountAmount float32                                                   `json:"original_discount_amount"`
	ExtensionAttributes    *NegotiableQuoteDataNegotiableQuoteItemExtensionInterface `json:"extension_attributes,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _NegotiableQuoteDataNegotiableQuoteItemInterface NegotiableQuoteDataNegotiableQuoteItemInterface

// NewNegotiableQuoteDataNegotiableQuoteItemInterface instantiates a new NegotiableQuoteDataNegotiableQuoteItemInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNegotiableQuoteDataNegotiableQuoteItemInterface(itemId int32, originalPrice float32, originalTaxAmount float32, originalDiscountAmount float32) *NegotiableQuoteDataNegotiableQuoteItemInterface {
	this := NegotiableQuoteDataNegotiableQuoteItemInterface{}
	this.ItemId = itemId
	this.OriginalPrice = originalPrice
	this.OriginalTaxAmount = originalTaxAmount
	this.OriginalDiscountAmount = originalDiscountAmount
	return &this
}

// NewNegotiableQuoteDataNegotiableQuoteItemInterfaceWithDefaults instantiates a new NegotiableQuoteDataNegotiableQuoteItemInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNegotiableQuoteDataNegotiableQuoteItemInterfaceWithDefaults() *NegotiableQuoteDataNegotiableQuoteItemInterface {
	this := NegotiableQuoteDataNegotiableQuoteItemInterface{}
	return &this
}

// GetItemId returns the ItemId field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetItemId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetItemIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) SetItemId(v int32) {
	o.ItemId = v
}

// GetOriginalPrice returns the OriginalPrice field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetOriginalPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OriginalPrice
}

// GetOriginalPriceOk returns a tuple with the OriginalPrice field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetOriginalPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalPrice, true
}

// SetOriginalPrice sets field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) SetOriginalPrice(v float32) {
	o.OriginalPrice = v
}

// GetOriginalTaxAmount returns the OriginalTaxAmount field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetOriginalTaxAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OriginalTaxAmount
}

// GetOriginalTaxAmountOk returns a tuple with the OriginalTaxAmount field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetOriginalTaxAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalTaxAmount, true
}

// SetOriginalTaxAmount sets field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) SetOriginalTaxAmount(v float32) {
	o.OriginalTaxAmount = v
}

// GetOriginalDiscountAmount returns the OriginalDiscountAmount field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetOriginalDiscountAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OriginalDiscountAmount
}

// GetOriginalDiscountAmountOk returns a tuple with the OriginalDiscountAmount field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetOriginalDiscountAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalDiscountAmount, true
}

// SetOriginalDiscountAmount sets field value
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) SetOriginalDiscountAmount(v float32) {
	o.OriginalDiscountAmount = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetExtensionAttributes() NegotiableQuoteDataNegotiableQuoteItemExtensionInterface {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret NegotiableQuoteDataNegotiableQuoteItemExtensionInterface
		return ret
	}
	return *o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetExtensionAttributesOk() (*NegotiableQuoteDataNegotiableQuoteItemExtensionInterface, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return nil, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given NegotiableQuoteDataNegotiableQuoteItemExtensionInterface and assigns it to the ExtensionAttributes field.
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) SetExtensionAttributes(v NegotiableQuoteDataNegotiableQuoteItemExtensionInterface) {
	o.ExtensionAttributes = &v
}

func (o NegotiableQuoteDataNegotiableQuoteItemInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NegotiableQuoteDataNegotiableQuoteItemInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["item_id"] = o.ItemId
	toSerialize["original_price"] = o.OriginalPrice
	toSerialize["original_tax_amount"] = o.OriginalTaxAmount
	toSerialize["original_discount_amount"] = o.OriginalDiscountAmount
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"item_id",
		"original_price",
		"original_tax_amount",
		"original_discount_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNegotiableQuoteDataNegotiableQuoteItemInterface := _NegotiableQuoteDataNegotiableQuoteItemInterface{}

	err = json.Unmarshal(data, &varNegotiableQuoteDataNegotiableQuoteItemInterface)

	if err != nil {
		return err
	}

	*o = NegotiableQuoteDataNegotiableQuoteItemInterface(varNegotiableQuoteDataNegotiableQuoteItemInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "item_id")
		delete(additionalProperties, "original_price")
		delete(additionalProperties, "original_tax_amount")
		delete(additionalProperties, "original_discount_amount")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *NegotiableQuoteDataNegotiableQuoteItemInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableNegotiableQuoteDataNegotiableQuoteItemInterface struct {
	value *NegotiableQuoteDataNegotiableQuoteItemInterface
	isSet bool
}

func (v NullableNegotiableQuoteDataNegotiableQuoteItemInterface) Get() *NegotiableQuoteDataNegotiableQuoteItemInterface {
	return v.value
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteItemInterface) Set(val *NegotiableQuoteDataNegotiableQuoteItemInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableNegotiableQuoteDataNegotiableQuoteItemInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteItemInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNegotiableQuoteDataNegotiableQuoteItemInterface(val *NegotiableQuoteDataNegotiableQuoteItemInterface) *NullableNegotiableQuoteDataNegotiableQuoteItemInterface {
	return &NullableNegotiableQuoteDataNegotiableQuoteItemInterface{value: val, isSet: true}
}

func (v NullableNegotiableQuoteDataNegotiableQuoteItemInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNegotiableQuoteDataNegotiableQuoteItemInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
