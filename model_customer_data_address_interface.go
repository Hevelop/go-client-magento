/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the CustomerDataAddressInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerDataAddressInterface{}

// CustomerDataAddressInterface Customer address interface.
type CustomerDataAddressInterface struct {
	// ID
	Id *int32 `json:"id,omitempty"`
	// Customer ID
	CustomerId *int32                       `json:"customer_id,omitempty"`
	Region     *CustomerDataRegionInterface `json:"region,omitempty"`
	// Region ID
	RegionId *int32 `json:"region_id,omitempty"`
	// Country code in ISO_3166-2 format
	CountryId *string `json:"country_id,omitempty"`
	// Street
	Street []string `json:"street,omitempty"`
	// Company
	Company *string `json:"company,omitempty"`
	// Telephone number
	Telephone *string `json:"telephone,omitempty"`
	// Fax number
	Fax *string `json:"fax,omitempty"`
	// Postcode
	Postcode *string `json:"postcode,omitempty"`
	// City name
	City *string `json:"city,omitempty"`
	// First name
	Firstname *string `json:"firstname,omitempty"`
	// Last name
	Lastname *string `json:"lastname,omitempty"`
	// Middle name
	Middlename *string `json:"middlename,omitempty"`
	// Prefix
	Prefix *string `json:"prefix,omitempty"`
	// Suffix
	Suffix *string `json:"suffix,omitempty"`
	// Vat id
	VatId *string `json:"vat_id,omitempty"`
	// If this address is default shipping address.
	DefaultShipping *bool `json:"default_shipping,omitempty"`
	// If this address is default billing address
	DefaultBilling *bool `json:"default_billing,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface
	ExtensionAttributes map[string]interface{} `json:"extension_attributes,omitempty"`
	// Custom attributes values.
	CustomAttributes     []FrameworkAttributeInterface `json:"custom_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerDataAddressInterface CustomerDataAddressInterface

// NewCustomerDataAddressInterface instantiates a new CustomerDataAddressInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerDataAddressInterface() *CustomerDataAddressInterface {
	this := CustomerDataAddressInterface{}
	return &this
}

// NewCustomerDataAddressInterfaceWithDefaults instantiates a new CustomerDataAddressInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDataAddressInterfaceWithDefaults() *CustomerDataAddressInterface {
	this := CustomerDataAddressInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CustomerDataAddressInterface) SetId(v int32) {
	o.Id = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetCustomerId() int32 {
	if o == nil || IsNil(o.CustomerId) {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetCustomerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *CustomerDataAddressInterface) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetRegion() CustomerDataRegionInterface {
	if o == nil || IsNil(o.Region) {
		var ret CustomerDataRegionInterface
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetRegionOk() (*CustomerDataRegionInterface, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given CustomerDataRegionInterface and assigns it to the Region field.
func (o *CustomerDataAddressInterface) SetRegion(v CustomerDataRegionInterface) {
	o.Region = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetRegionId() int32 {
	if o == nil || IsNil(o.RegionId) {
		var ret int32
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetRegionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given int32 and assigns it to the RegionId field.
func (o *CustomerDataAddressInterface) SetRegionId(v int32) {
	o.RegionId = &v
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetCountryId() string {
	if o == nil || IsNil(o.CountryId) {
		var ret string
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetCountryIdOk() (*string, bool) {
	if o == nil || IsNil(o.CountryId) {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasCountryId() bool {
	if o != nil && !IsNil(o.CountryId) {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given string and assigns it to the CountryId field.
func (o *CustomerDataAddressInterface) SetCountryId(v string) {
	o.CountryId = &v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetStreet() []string {
	if o == nil || IsNil(o.Street) {
		var ret []string
		return ret
	}
	return o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetStreetOk() ([]string, bool) {
	if o == nil || IsNil(o.Street) {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasStreet() bool {
	if o != nil && !IsNil(o.Street) {
		return true
	}

	return false
}

// SetStreet gets a reference to the given []string and assigns it to the Street field.
func (o *CustomerDataAddressInterface) SetStreet(v []string) {
	o.Street = v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *CustomerDataAddressInterface) SetCompany(v string) {
	o.Company = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetTelephone() string {
	if o == nil || IsNil(o.Telephone) {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetTelephoneOk() (*string, bool) {
	if o == nil || IsNil(o.Telephone) {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasTelephone() bool {
	if o != nil && !IsNil(o.Telephone) {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *CustomerDataAddressInterface) SetTelephone(v string) {
	o.Telephone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *CustomerDataAddressInterface) SetFax(v string) {
	o.Fax = &v
}

// GetPostcode returns the Postcode field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetPostcode() string {
	if o == nil || IsNil(o.Postcode) {
		var ret string
		return ret
	}
	return *o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetPostcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Postcode) {
		return nil, false
	}
	return o.Postcode, true
}

// HasPostcode returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasPostcode() bool {
	if o != nil && !IsNil(o.Postcode) {
		return true
	}

	return false
}

// SetPostcode gets a reference to the given string and assigns it to the Postcode field.
func (o *CustomerDataAddressInterface) SetPostcode(v string) {
	o.Postcode = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CustomerDataAddressInterface) SetCity(v string) {
	o.City = &v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetFirstname() string {
	if o == nil || IsNil(o.Firstname) {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.Firstname) {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasFirstname() bool {
	if o != nil && !IsNil(o.Firstname) {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *CustomerDataAddressInterface) SetFirstname(v string) {
	o.Firstname = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetLastname() string {
	if o == nil || IsNil(o.Lastname) {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetLastnameOk() (*string, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *CustomerDataAddressInterface) SetLastname(v string) {
	o.Lastname = &v
}

// GetMiddlename returns the Middlename field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetMiddlename() string {
	if o == nil || IsNil(o.Middlename) {
		var ret string
		return ret
	}
	return *o.Middlename
}

// GetMiddlenameOk returns a tuple with the Middlename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetMiddlenameOk() (*string, bool) {
	if o == nil || IsNil(o.Middlename) {
		return nil, false
	}
	return o.Middlename, true
}

// HasMiddlename returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasMiddlename() bool {
	if o != nil && !IsNil(o.Middlename) {
		return true
	}

	return false
}

// SetMiddlename gets a reference to the given string and assigns it to the Middlename field.
func (o *CustomerDataAddressInterface) SetMiddlename(v string) {
	o.Middlename = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *CustomerDataAddressInterface) SetPrefix(v string) {
	o.Prefix = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetSuffix() string {
	if o == nil || IsNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.Suffix) {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasSuffix() bool {
	if o != nil && !IsNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *CustomerDataAddressInterface) SetSuffix(v string) {
	o.Suffix = &v
}

// GetVatId returns the VatId field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetVatId() string {
	if o == nil || IsNil(o.VatId) {
		var ret string
		return ret
	}
	return *o.VatId
}

// GetVatIdOk returns a tuple with the VatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetVatIdOk() (*string, bool) {
	if o == nil || IsNil(o.VatId) {
		return nil, false
	}
	return o.VatId, true
}

// HasVatId returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasVatId() bool {
	if o != nil && !IsNil(o.VatId) {
		return true
	}

	return false
}

// SetVatId gets a reference to the given string and assigns it to the VatId field.
func (o *CustomerDataAddressInterface) SetVatId(v string) {
	o.VatId = &v
}

// GetDefaultShipping returns the DefaultShipping field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetDefaultShipping() bool {
	if o == nil || IsNil(o.DefaultShipping) {
		var ret bool
		return ret
	}
	return *o.DefaultShipping
}

// GetDefaultShippingOk returns a tuple with the DefaultShipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetDefaultShippingOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultShipping) {
		return nil, false
	}
	return o.DefaultShipping, true
}

// HasDefaultShipping returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasDefaultShipping() bool {
	if o != nil && !IsNil(o.DefaultShipping) {
		return true
	}

	return false
}

// SetDefaultShipping gets a reference to the given bool and assigns it to the DefaultShipping field.
func (o *CustomerDataAddressInterface) SetDefaultShipping(v bool) {
	o.DefaultShipping = &v
}

// GetDefaultBilling returns the DefaultBilling field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetDefaultBilling() bool {
	if o == nil || IsNil(o.DefaultBilling) {
		var ret bool
		return ret
	}
	return *o.DefaultBilling
}

// GetDefaultBillingOk returns a tuple with the DefaultBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetDefaultBillingOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultBilling) {
		return nil, false
	}
	return o.DefaultBilling, true
}

// HasDefaultBilling returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasDefaultBilling() bool {
	if o != nil && !IsNil(o.DefaultBilling) {
		return true
	}

	return false
}

// SetDefaultBilling gets a reference to the given bool and assigns it to the DefaultBilling field.
func (o *CustomerDataAddressInterface) SetDefaultBilling(v bool) {
	o.DefaultBilling = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *CustomerDataAddressInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

// GetCustomAttributes returns the CustomAttributes field value if set, zero value otherwise.
func (o *CustomerDataAddressInterface) GetCustomAttributes() []FrameworkAttributeInterface {
	if o == nil || IsNil(o.CustomAttributes) {
		var ret []FrameworkAttributeInterface
		return ret
	}
	return o.CustomAttributes
}

// GetCustomAttributesOk returns a tuple with the CustomAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataAddressInterface) GetCustomAttributesOk() ([]FrameworkAttributeInterface, bool) {
	if o == nil || IsNil(o.CustomAttributes) {
		return nil, false
	}
	return o.CustomAttributes, true
}

// HasCustomAttributes returns a boolean if a field has been set.
func (o *CustomerDataAddressInterface) HasCustomAttributes() bool {
	if o != nil && !IsNil(o.CustomAttributes) {
		return true
	}

	return false
}

// SetCustomAttributes gets a reference to the given []FrameworkAttributeInterface and assigns it to the CustomAttributes field.
func (o *CustomerDataAddressInterface) SetCustomAttributes(v []FrameworkAttributeInterface) {
	o.CustomAttributes = v
}

func (o CustomerDataAddressInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerDataAddressInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RegionId) {
		toSerialize["region_id"] = o.RegionId
	}
	if !IsNil(o.CountryId) {
		toSerialize["country_id"] = o.CountryId
	}
	if !IsNil(o.Street) {
		toSerialize["street"] = o.Street
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Telephone) {
		toSerialize["telephone"] = o.Telephone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Postcode) {
		toSerialize["postcode"] = o.Postcode
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Firstname) {
		toSerialize["firstname"] = o.Firstname
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.Middlename) {
		toSerialize["middlename"] = o.Middlename
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !IsNil(o.VatId) {
		toSerialize["vat_id"] = o.VatId
	}
	if !IsNil(o.DefaultShipping) {
		toSerialize["default_shipping"] = o.DefaultShipping
	}
	if !IsNil(o.DefaultBilling) {
		toSerialize["default_billing"] = o.DefaultBilling
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}
	if !IsNil(o.CustomAttributes) {
		toSerialize["custom_attributes"] = o.CustomAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerDataAddressInterface) UnmarshalJSON(data []byte) (err error) {
	varCustomerDataAddressInterface := _CustomerDataAddressInterface{}

	err = json.Unmarshal(data, &varCustomerDataAddressInterface)

	if err != nil {
		return err
	}

	*o = CustomerDataAddressInterface(varCustomerDataAddressInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "region")
		delete(additionalProperties, "region_id")
		delete(additionalProperties, "country_id")
		delete(additionalProperties, "street")
		delete(additionalProperties, "company")
		delete(additionalProperties, "telephone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "postcode")
		delete(additionalProperties, "city")
		delete(additionalProperties, "firstname")
		delete(additionalProperties, "lastname")
		delete(additionalProperties, "middlename")
		delete(additionalProperties, "prefix")
		delete(additionalProperties, "suffix")
		delete(additionalProperties, "vat_id")
		delete(additionalProperties, "default_shipping")
		delete(additionalProperties, "default_billing")
		delete(additionalProperties, "extension_attributes")
		delete(additionalProperties, "custom_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *CustomerDataAddressInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *CustomerDataAddressInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableCustomerDataAddressInterface struct {
	value *CustomerDataAddressInterface
	isSet bool
}

func (v NullableCustomerDataAddressInterface) Get() *CustomerDataAddressInterface {
	return v.value
}

func (v *NullableCustomerDataAddressInterface) Set(val *CustomerDataAddressInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerDataAddressInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerDataAddressInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerDataAddressInterface(val *CustomerDataAddressInterface) *NullableCustomerDataAddressInterface {
	return &NullableCustomerDataAddressInterface{value: val, isSet: true}
}

func (v NullableCustomerDataAddressInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerDataAddressInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
