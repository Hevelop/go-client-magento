/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
	"fmt"
)

// checks if the NegotiableQuoteDataCompanyQuoteConfigInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NegotiableQuoteDataCompanyQuoteConfigInterface{}

// NegotiableQuoteDataCompanyQuoteConfigInterface Interface CompanyQuoteConfigInterface
type NegotiableQuoteDataCompanyQuoteConfigInterface struct {
	// Company id
	CompanyId *string `json:"company_id,omitempty"`
	// Quote enabled for company
	IsQuoteEnabled bool `json:"is_quote_enabled"`
	// ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CompanyQuoteConfigInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NegotiableQuoteDataCompanyQuoteConfigInterface NegotiableQuoteDataCompanyQuoteConfigInterface

// NewNegotiableQuoteDataCompanyQuoteConfigInterface instantiates a new NegotiableQuoteDataCompanyQuoteConfigInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNegotiableQuoteDataCompanyQuoteConfigInterface(isQuoteEnabled bool) *NegotiableQuoteDataCompanyQuoteConfigInterface {
	this := NegotiableQuoteDataCompanyQuoteConfigInterface{}
	this.IsQuoteEnabled = isQuoteEnabled
	return &this
}

// NewNegotiableQuoteDataCompanyQuoteConfigInterfaceWithDefaults instantiates a new NegotiableQuoteDataCompanyQuoteConfigInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNegotiableQuoteDataCompanyQuoteConfigInterfaceWithDefaults() *NegotiableQuoteDataCompanyQuoteConfigInterface {
	this := NegotiableQuoteDataCompanyQuoteConfigInterface{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetIsQuoteEnabled returns the IsQuoteEnabled field value
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) GetIsQuoteEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsQuoteEnabled
}

// GetIsQuoteEnabledOk returns a tuple with the IsQuoteEnabled field value
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) GetIsQuoteEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsQuoteEnabled, true
}

// SetIsQuoteEnabled sets field value
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) SetIsQuoteEnabled(v bool) {
	o.IsQuoteEnabled = v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o NegotiableQuoteDataCompanyQuoteConfigInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NegotiableQuoteDataCompanyQuoteConfigInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	toSerialize["is_quote_enabled"] = o.IsQuoteEnabled
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_quote_enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNegotiableQuoteDataCompanyQuoteConfigInterface := _NegotiableQuoteDataCompanyQuoteConfigInterface{}

	err = json.Unmarshal(data, &varNegotiableQuoteDataCompanyQuoteConfigInterface)

	if err != nil {
		return err
	}

	*o = NegotiableQuoteDataCompanyQuoteConfigInterface(varNegotiableQuoteDataCompanyQuoteConfigInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "company_id")
		delete(additionalProperties, "is_quote_enabled")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *NegotiableQuoteDataCompanyQuoteConfigInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableNegotiableQuoteDataCompanyQuoteConfigInterface struct {
	value *NegotiableQuoteDataCompanyQuoteConfigInterface
	isSet bool
}

func (v NullableNegotiableQuoteDataCompanyQuoteConfigInterface) Get() *NegotiableQuoteDataCompanyQuoteConfigInterface {
	return v.value
}

func (v *NullableNegotiableQuoteDataCompanyQuoteConfigInterface) Set(val *NegotiableQuoteDataCompanyQuoteConfigInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableNegotiableQuoteDataCompanyQuoteConfigInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableNegotiableQuoteDataCompanyQuoteConfigInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNegotiableQuoteDataCompanyQuoteConfigInterface(val *NegotiableQuoteDataCompanyQuoteConfigInterface) *NullableNegotiableQuoteDataCompanyQuoteConfigInterface {
	return &NullableNegotiableQuoteDataCompanyQuoteConfigInterface{value: val, isSet: true}
}

func (v NullableNegotiableQuoteDataCompanyQuoteConfigInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNegotiableQuoteDataCompanyQuoteConfigInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
