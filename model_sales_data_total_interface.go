/*
Commerce Admin REST endpoints - All inclusive

The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.  You can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.

API version: 2.4.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package magento

import (
	"encoding/json"
)

// checks if the SalesDataTotalInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesDataTotalInterface{}

// SalesDataTotalInterface Interface TotalInterface
type SalesDataTotalInterface struct {
	// Base shipping amount.
	BaseShippingAmount *float32 `json:"base_shipping_amount,omitempty"`
	// Base shipping canceled.
	BaseShippingCanceled *float32 `json:"base_shipping_canceled,omitempty"`
	// Base shipping discount amount.
	BaseShippingDiscountAmount *float32 `json:"base_shipping_discount_amount,omitempty"`
	// Base shipping discount tax compensation amount.
	BaseShippingDiscountTaxCompensationAmnt *float32 `json:"base_shipping_discount_tax_compensation_amnt,omitempty"`
	// Base shipping including tax.
	BaseShippingInclTax *float32 `json:"base_shipping_incl_tax,omitempty"`
	// Base shipping invoiced.
	BaseShippingInvoiced *float32 `json:"base_shipping_invoiced,omitempty"`
	// Base shipping refunded.
	BaseShippingRefunded *float32 `json:"base_shipping_refunded,omitempty"`
	// Base shipping tax amount.
	BaseShippingTaxAmount *float32 `json:"base_shipping_tax_amount,omitempty"`
	// Base shipping tax refunded.
	BaseShippingTaxRefunded *float32 `json:"base_shipping_tax_refunded,omitempty"`
	// Shipping amount.
	ShippingAmount *float32 `json:"shipping_amount,omitempty"`
	// Shipping canceled amount.
	ShippingCanceled *float32 `json:"shipping_canceled,omitempty"`
	// Shipping discount amount.
	ShippingDiscountAmount *float32 `json:"shipping_discount_amount,omitempty"`
	// Shipping discount tax compensation amount.
	ShippingDiscountTaxCompensationAmount *float32 `json:"shipping_discount_tax_compensation_amount,omitempty"`
	// Shipping including tax amount.
	ShippingInclTax *float32 `json:"shipping_incl_tax,omitempty"`
	// Shipping invoiced amount.
	ShippingInvoiced *float32 `json:"shipping_invoiced,omitempty"`
	// Shipping refunded amount.
	ShippingRefunded *float32 `json:"shipping_refunded,omitempty"`
	// Shipping tax amount.
	ShippingTaxAmount *float32 `json:"shipping_tax_amount,omitempty"`
	// Shipping tax refunded amount.
	ShippingTaxRefunded *float32 `json:"shipping_tax_refunded,omitempty"`
	// ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TotalInterface
	ExtensionAttributes  map[string]interface{} `json:"extension_attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SalesDataTotalInterface SalesDataTotalInterface

// NewSalesDataTotalInterface instantiates a new SalesDataTotalInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesDataTotalInterface() *SalesDataTotalInterface {
	this := SalesDataTotalInterface{}
	return &this
}

// NewSalesDataTotalInterfaceWithDefaults instantiates a new SalesDataTotalInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesDataTotalInterfaceWithDefaults() *SalesDataTotalInterface {
	this := SalesDataTotalInterface{}
	return &this
}

// GetBaseShippingAmount returns the BaseShippingAmount field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingAmount() float32 {
	if o == nil || IsNil(o.BaseShippingAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingAmount
}

// GetBaseShippingAmountOk returns a tuple with the BaseShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingAmount) {
		return nil, false
	}
	return o.BaseShippingAmount, true
}

// HasBaseShippingAmount returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingAmount() bool {
	if o != nil && !IsNil(o.BaseShippingAmount) {
		return true
	}

	return false
}

// SetBaseShippingAmount gets a reference to the given float32 and assigns it to the BaseShippingAmount field.
func (o *SalesDataTotalInterface) SetBaseShippingAmount(v float32) {
	o.BaseShippingAmount = &v
}

// GetBaseShippingCanceled returns the BaseShippingCanceled field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingCanceled() float32 {
	if o == nil || IsNil(o.BaseShippingCanceled) {
		var ret float32
		return ret
	}
	return *o.BaseShippingCanceled
}

// GetBaseShippingCanceledOk returns a tuple with the BaseShippingCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingCanceled) {
		return nil, false
	}
	return o.BaseShippingCanceled, true
}

// HasBaseShippingCanceled returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingCanceled() bool {
	if o != nil && !IsNil(o.BaseShippingCanceled) {
		return true
	}

	return false
}

// SetBaseShippingCanceled gets a reference to the given float32 and assigns it to the BaseShippingCanceled field.
func (o *SalesDataTotalInterface) SetBaseShippingCanceled(v float32) {
	o.BaseShippingCanceled = &v
}

// GetBaseShippingDiscountAmount returns the BaseShippingDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingDiscountAmount() float32 {
	if o == nil || IsNil(o.BaseShippingDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingDiscountAmount
}

// GetBaseShippingDiscountAmountOk returns a tuple with the BaseShippingDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingDiscountAmount) {
		return nil, false
	}
	return o.BaseShippingDiscountAmount, true
}

// HasBaseShippingDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingDiscountAmount() bool {
	if o != nil && !IsNil(o.BaseShippingDiscountAmount) {
		return true
	}

	return false
}

// SetBaseShippingDiscountAmount gets a reference to the given float32 and assigns it to the BaseShippingDiscountAmount field.
func (o *SalesDataTotalInterface) SetBaseShippingDiscountAmount(v float32) {
	o.BaseShippingDiscountAmount = &v
}

// GetBaseShippingDiscountTaxCompensationAmnt returns the BaseShippingDiscountTaxCompensationAmnt field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingDiscountTaxCompensationAmnt() float32 {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		var ret float32
		return ret
	}
	return *o.BaseShippingDiscountTaxCompensationAmnt
}

// GetBaseShippingDiscountTaxCompensationAmntOk returns a tuple with the BaseShippingDiscountTaxCompensationAmnt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingDiscountTaxCompensationAmntOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return nil, false
	}
	return o.BaseShippingDiscountTaxCompensationAmnt, true
}

// HasBaseShippingDiscountTaxCompensationAmnt returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingDiscountTaxCompensationAmnt() bool {
	if o != nil && !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		return true
	}

	return false
}

// SetBaseShippingDiscountTaxCompensationAmnt gets a reference to the given float32 and assigns it to the BaseShippingDiscountTaxCompensationAmnt field.
func (o *SalesDataTotalInterface) SetBaseShippingDiscountTaxCompensationAmnt(v float32) {
	o.BaseShippingDiscountTaxCompensationAmnt = &v
}

// GetBaseShippingInclTax returns the BaseShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingInclTax() float32 {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.BaseShippingInclTax
}

// GetBaseShippingInclTaxOk returns a tuple with the BaseShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingInclTax) {
		return nil, false
	}
	return o.BaseShippingInclTax, true
}

// HasBaseShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingInclTax() bool {
	if o != nil && !IsNil(o.BaseShippingInclTax) {
		return true
	}

	return false
}

// SetBaseShippingInclTax gets a reference to the given float32 and assigns it to the BaseShippingInclTax field.
func (o *SalesDataTotalInterface) SetBaseShippingInclTax(v float32) {
	o.BaseShippingInclTax = &v
}

// GetBaseShippingInvoiced returns the BaseShippingInvoiced field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingInvoiced() float32 {
	if o == nil || IsNil(o.BaseShippingInvoiced) {
		var ret float32
		return ret
	}
	return *o.BaseShippingInvoiced
}

// GetBaseShippingInvoicedOk returns a tuple with the BaseShippingInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingInvoiced) {
		return nil, false
	}
	return o.BaseShippingInvoiced, true
}

// HasBaseShippingInvoiced returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingInvoiced() bool {
	if o != nil && !IsNil(o.BaseShippingInvoiced) {
		return true
	}

	return false
}

// SetBaseShippingInvoiced gets a reference to the given float32 and assigns it to the BaseShippingInvoiced field.
func (o *SalesDataTotalInterface) SetBaseShippingInvoiced(v float32) {
	o.BaseShippingInvoiced = &v
}

// GetBaseShippingRefunded returns the BaseShippingRefunded field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingRefunded() float32 {
	if o == nil || IsNil(o.BaseShippingRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseShippingRefunded
}

// GetBaseShippingRefundedOk returns a tuple with the BaseShippingRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingRefunded) {
		return nil, false
	}
	return o.BaseShippingRefunded, true
}

// HasBaseShippingRefunded returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingRefunded() bool {
	if o != nil && !IsNil(o.BaseShippingRefunded) {
		return true
	}

	return false
}

// SetBaseShippingRefunded gets a reference to the given float32 and assigns it to the BaseShippingRefunded field.
func (o *SalesDataTotalInterface) SetBaseShippingRefunded(v float32) {
	o.BaseShippingRefunded = &v
}

// GetBaseShippingTaxAmount returns the BaseShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingTaxAmount() float32 {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.BaseShippingTaxAmount
}

// GetBaseShippingTaxAmountOk returns a tuple with the BaseShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingTaxAmount) {
		return nil, false
	}
	return o.BaseShippingTaxAmount, true
}

// HasBaseShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingTaxAmount() bool {
	if o != nil && !IsNil(o.BaseShippingTaxAmount) {
		return true
	}

	return false
}

// SetBaseShippingTaxAmount gets a reference to the given float32 and assigns it to the BaseShippingTaxAmount field.
func (o *SalesDataTotalInterface) SetBaseShippingTaxAmount(v float32) {
	o.BaseShippingTaxAmount = &v
}

// GetBaseShippingTaxRefunded returns the BaseShippingTaxRefunded field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetBaseShippingTaxRefunded() float32 {
	if o == nil || IsNil(o.BaseShippingTaxRefunded) {
		var ret float32
		return ret
	}
	return *o.BaseShippingTaxRefunded
}

// GetBaseShippingTaxRefundedOk returns a tuple with the BaseShippingTaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetBaseShippingTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseShippingTaxRefunded) {
		return nil, false
	}
	return o.BaseShippingTaxRefunded, true
}

// HasBaseShippingTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasBaseShippingTaxRefunded() bool {
	if o != nil && !IsNil(o.BaseShippingTaxRefunded) {
		return true
	}

	return false
}

// SetBaseShippingTaxRefunded gets a reference to the given float32 and assigns it to the BaseShippingTaxRefunded field.
func (o *SalesDataTotalInterface) SetBaseShippingTaxRefunded(v float32) {
	o.BaseShippingTaxRefunded = &v
}

// GetShippingAmount returns the ShippingAmount field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingAmount() float32 {
	if o == nil || IsNil(o.ShippingAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingAmount
}

// GetShippingAmountOk returns a tuple with the ShippingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingAmount) {
		return nil, false
	}
	return o.ShippingAmount, true
}

// HasShippingAmount returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingAmount() bool {
	if o != nil && !IsNil(o.ShippingAmount) {
		return true
	}

	return false
}

// SetShippingAmount gets a reference to the given float32 and assigns it to the ShippingAmount field.
func (o *SalesDataTotalInterface) SetShippingAmount(v float32) {
	o.ShippingAmount = &v
}

// GetShippingCanceled returns the ShippingCanceled field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingCanceled() float32 {
	if o == nil || IsNil(o.ShippingCanceled) {
		var ret float32
		return ret
	}
	return *o.ShippingCanceled
}

// GetShippingCanceledOk returns a tuple with the ShippingCanceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingCanceledOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingCanceled) {
		return nil, false
	}
	return o.ShippingCanceled, true
}

// HasShippingCanceled returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingCanceled() bool {
	if o != nil && !IsNil(o.ShippingCanceled) {
		return true
	}

	return false
}

// SetShippingCanceled gets a reference to the given float32 and assigns it to the ShippingCanceled field.
func (o *SalesDataTotalInterface) SetShippingCanceled(v float32) {
	o.ShippingCanceled = &v
}

// GetShippingDiscountAmount returns the ShippingDiscountAmount field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingDiscountAmount() float32 {
	if o == nil || IsNil(o.ShippingDiscountAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingDiscountAmount
}

// GetShippingDiscountAmountOk returns a tuple with the ShippingDiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingDiscountAmount) {
		return nil, false
	}
	return o.ShippingDiscountAmount, true
}

// HasShippingDiscountAmount returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingDiscountAmount() bool {
	if o != nil && !IsNil(o.ShippingDiscountAmount) {
		return true
	}

	return false
}

// SetShippingDiscountAmount gets a reference to the given float32 and assigns it to the ShippingDiscountAmount field.
func (o *SalesDataTotalInterface) SetShippingDiscountAmount(v float32) {
	o.ShippingDiscountAmount = &v
}

// GetShippingDiscountTaxCompensationAmount returns the ShippingDiscountTaxCompensationAmount field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingDiscountTaxCompensationAmount() float32 {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingDiscountTaxCompensationAmount
}

// GetShippingDiscountTaxCompensationAmountOk returns a tuple with the ShippingDiscountTaxCompensationAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingDiscountTaxCompensationAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return nil, false
	}
	return o.ShippingDiscountTaxCompensationAmount, true
}

// HasShippingDiscountTaxCompensationAmount returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingDiscountTaxCompensationAmount() bool {
	if o != nil && !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		return true
	}

	return false
}

// SetShippingDiscountTaxCompensationAmount gets a reference to the given float32 and assigns it to the ShippingDiscountTaxCompensationAmount field.
func (o *SalesDataTotalInterface) SetShippingDiscountTaxCompensationAmount(v float32) {
	o.ShippingDiscountTaxCompensationAmount = &v
}

// GetShippingInclTax returns the ShippingInclTax field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingInclTax() float32 {
	if o == nil || IsNil(o.ShippingInclTax) {
		var ret float32
		return ret
	}
	return *o.ShippingInclTax
}

// GetShippingInclTaxOk returns a tuple with the ShippingInclTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingInclTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingInclTax) {
		return nil, false
	}
	return o.ShippingInclTax, true
}

// HasShippingInclTax returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingInclTax() bool {
	if o != nil && !IsNil(o.ShippingInclTax) {
		return true
	}

	return false
}

// SetShippingInclTax gets a reference to the given float32 and assigns it to the ShippingInclTax field.
func (o *SalesDataTotalInterface) SetShippingInclTax(v float32) {
	o.ShippingInclTax = &v
}

// GetShippingInvoiced returns the ShippingInvoiced field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingInvoiced() float32 {
	if o == nil || IsNil(o.ShippingInvoiced) {
		var ret float32
		return ret
	}
	return *o.ShippingInvoiced
}

// GetShippingInvoicedOk returns a tuple with the ShippingInvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingInvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingInvoiced) {
		return nil, false
	}
	return o.ShippingInvoiced, true
}

// HasShippingInvoiced returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingInvoiced() bool {
	if o != nil && !IsNil(o.ShippingInvoiced) {
		return true
	}

	return false
}

// SetShippingInvoiced gets a reference to the given float32 and assigns it to the ShippingInvoiced field.
func (o *SalesDataTotalInterface) SetShippingInvoiced(v float32) {
	o.ShippingInvoiced = &v
}

// GetShippingRefunded returns the ShippingRefunded field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingRefunded() float32 {
	if o == nil || IsNil(o.ShippingRefunded) {
		var ret float32
		return ret
	}
	return *o.ShippingRefunded
}

// GetShippingRefundedOk returns a tuple with the ShippingRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingRefunded) {
		return nil, false
	}
	return o.ShippingRefunded, true
}

// HasShippingRefunded returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingRefunded() bool {
	if o != nil && !IsNil(o.ShippingRefunded) {
		return true
	}

	return false
}

// SetShippingRefunded gets a reference to the given float32 and assigns it to the ShippingRefunded field.
func (o *SalesDataTotalInterface) SetShippingRefunded(v float32) {
	o.ShippingRefunded = &v
}

// GetShippingTaxAmount returns the ShippingTaxAmount field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingTaxAmount() float32 {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		var ret float32
		return ret
	}
	return *o.ShippingTaxAmount
}

// GetShippingTaxAmountOk returns a tuple with the ShippingTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingTaxAmount) {
		return nil, false
	}
	return o.ShippingTaxAmount, true
}

// HasShippingTaxAmount returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingTaxAmount() bool {
	if o != nil && !IsNil(o.ShippingTaxAmount) {
		return true
	}

	return false
}

// SetShippingTaxAmount gets a reference to the given float32 and assigns it to the ShippingTaxAmount field.
func (o *SalesDataTotalInterface) SetShippingTaxAmount(v float32) {
	o.ShippingTaxAmount = &v
}

// GetShippingTaxRefunded returns the ShippingTaxRefunded field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetShippingTaxRefunded() float32 {
	if o == nil || IsNil(o.ShippingTaxRefunded) {
		var ret float32
		return ret
	}
	return *o.ShippingTaxRefunded
}

// GetShippingTaxRefundedOk returns a tuple with the ShippingTaxRefunded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetShippingTaxRefundedOk() (*float32, bool) {
	if o == nil || IsNil(o.ShippingTaxRefunded) {
		return nil, false
	}
	return o.ShippingTaxRefunded, true
}

// HasShippingTaxRefunded returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasShippingTaxRefunded() bool {
	if o != nil && !IsNil(o.ShippingTaxRefunded) {
		return true
	}

	return false
}

// SetShippingTaxRefunded gets a reference to the given float32 and assigns it to the ShippingTaxRefunded field.
func (o *SalesDataTotalInterface) SetShippingTaxRefunded(v float32) {
	o.ShippingTaxRefunded = &v
}

// GetExtensionAttributes returns the ExtensionAttributes field value if set, zero value otherwise.
func (o *SalesDataTotalInterface) GetExtensionAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ExtensionAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtensionAttributes
}

// GetExtensionAttributesOk returns a tuple with the ExtensionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesDataTotalInterface) GetExtensionAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ExtensionAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ExtensionAttributes, true
}

// HasExtensionAttributes returns a boolean if a field has been set.
func (o *SalesDataTotalInterface) HasExtensionAttributes() bool {
	if o != nil && !IsNil(o.ExtensionAttributes) {
		return true
	}

	return false
}

// SetExtensionAttributes gets a reference to the given map[string]interface{} and assigns it to the ExtensionAttributes field.
func (o *SalesDataTotalInterface) SetExtensionAttributes(v map[string]interface{}) {
	o.ExtensionAttributes = v
}

func (o SalesDataTotalInterface) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesDataTotalInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseShippingAmount) {
		toSerialize["base_shipping_amount"] = o.BaseShippingAmount
	}
	if !IsNil(o.BaseShippingCanceled) {
		toSerialize["base_shipping_canceled"] = o.BaseShippingCanceled
	}
	if !IsNil(o.BaseShippingDiscountAmount) {
		toSerialize["base_shipping_discount_amount"] = o.BaseShippingDiscountAmount
	}
	if !IsNil(o.BaseShippingDiscountTaxCompensationAmnt) {
		toSerialize["base_shipping_discount_tax_compensation_amnt"] = o.BaseShippingDiscountTaxCompensationAmnt
	}
	if !IsNil(o.BaseShippingInclTax) {
		toSerialize["base_shipping_incl_tax"] = o.BaseShippingInclTax
	}
	if !IsNil(o.BaseShippingInvoiced) {
		toSerialize["base_shipping_invoiced"] = o.BaseShippingInvoiced
	}
	if !IsNil(o.BaseShippingRefunded) {
		toSerialize["base_shipping_refunded"] = o.BaseShippingRefunded
	}
	if !IsNil(o.BaseShippingTaxAmount) {
		toSerialize["base_shipping_tax_amount"] = o.BaseShippingTaxAmount
	}
	if !IsNil(o.BaseShippingTaxRefunded) {
		toSerialize["base_shipping_tax_refunded"] = o.BaseShippingTaxRefunded
	}
	if !IsNil(o.ShippingAmount) {
		toSerialize["shipping_amount"] = o.ShippingAmount
	}
	if !IsNil(o.ShippingCanceled) {
		toSerialize["shipping_canceled"] = o.ShippingCanceled
	}
	if !IsNil(o.ShippingDiscountAmount) {
		toSerialize["shipping_discount_amount"] = o.ShippingDiscountAmount
	}
	if !IsNil(o.ShippingDiscountTaxCompensationAmount) {
		toSerialize["shipping_discount_tax_compensation_amount"] = o.ShippingDiscountTaxCompensationAmount
	}
	if !IsNil(o.ShippingInclTax) {
		toSerialize["shipping_incl_tax"] = o.ShippingInclTax
	}
	if !IsNil(o.ShippingInvoiced) {
		toSerialize["shipping_invoiced"] = o.ShippingInvoiced
	}
	if !IsNil(o.ShippingRefunded) {
		toSerialize["shipping_refunded"] = o.ShippingRefunded
	}
	if !IsNil(o.ShippingTaxAmount) {
		toSerialize["shipping_tax_amount"] = o.ShippingTaxAmount
	}
	if !IsNil(o.ShippingTaxRefunded) {
		toSerialize["shipping_tax_refunded"] = o.ShippingTaxRefunded
	}
	if !IsNil(o.ExtensionAttributes) {
		toSerialize["extension_attributes"] = o.ExtensionAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SalesDataTotalInterface) UnmarshalJSON(data []byte) (err error) {
	varSalesDataTotalInterface := _SalesDataTotalInterface{}

	err = json.Unmarshal(data, &varSalesDataTotalInterface)

	if err != nil {
		return err
	}

	*o = SalesDataTotalInterface(varSalesDataTotalInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "base_shipping_amount")
		delete(additionalProperties, "base_shipping_canceled")
		delete(additionalProperties, "base_shipping_discount_amount")
		delete(additionalProperties, "base_shipping_discount_tax_compensation_amnt")
		delete(additionalProperties, "base_shipping_incl_tax")
		delete(additionalProperties, "base_shipping_invoiced")
		delete(additionalProperties, "base_shipping_refunded")
		delete(additionalProperties, "base_shipping_tax_amount")
		delete(additionalProperties, "base_shipping_tax_refunded")
		delete(additionalProperties, "shipping_amount")
		delete(additionalProperties, "shipping_canceled")
		delete(additionalProperties, "shipping_discount_amount")
		delete(additionalProperties, "shipping_discount_tax_compensation_amount")
		delete(additionalProperties, "shipping_incl_tax")
		delete(additionalProperties, "shipping_invoiced")
		delete(additionalProperties, "shipping_refunded")
		delete(additionalProperties, "shipping_tax_amount")
		delete(additionalProperties, "shipping_tax_refunded")
		delete(additionalProperties, "extension_attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *SalesDataTotalInterface) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *SalesDataTotalInterface) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullableSalesDataTotalInterface struct {
	value *SalesDataTotalInterface
	isSet bool
}

func (v NullableSalesDataTotalInterface) Get() *SalesDataTotalInterface {
	return v.value
}

func (v *NullableSalesDataTotalInterface) Set(val *SalesDataTotalInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesDataTotalInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesDataTotalInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesDataTotalInterface(val *SalesDataTotalInterface) *NullableSalesDataTotalInterface {
	return &NullableSalesDataTotalInterface{value: val, isSet: true}
}

func (v NullableSalesDataTotalInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesDataTotalInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
